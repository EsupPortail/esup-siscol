/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 24.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * DocumentAApprouver
 */
@JsonPropertyOrder({
  DocumentAApprouver.JSON_PROPERTY_CODE,
  DocumentAApprouver.JSON_PROPERTY_CODE_STRUCTURE,
  DocumentAApprouver.JSON_PROPERTY_LIBELLE_AFFICHAGE,
  DocumentAApprouver.JSON_PROPERTY_CONTENU,
  DocumentAApprouver.JSON_PROPERTY_LIBELLE_ACCEPTATION,
  DocumentAApprouver.JSON_PROPERTY_LIBELLE_REFUS,
  DocumentAApprouver.JSON_PROPERTY_TEMOIN_BLOQUANT,
  DocumentAApprouver.JSON_PROPERTY_DATE_DEBUT_VALIDITE,
  DocumentAApprouver.JSON_PROPERTY_DATE_FIN_VALIDITE,
  DocumentAApprouver.JSON_PROPERTY_PRIORITE_AFFICHAGE,
  DocumentAApprouver.JSON_PROPERTY_TEMOIN_VISIBLE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-23T10:43:17.979817+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
public class DocumentAApprouver {
  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_CODE_STRUCTURE = "codeStructure";
  private String codeStructure;

  public static final String JSON_PROPERTY_LIBELLE_AFFICHAGE = "libelleAffichage";
  private String libelleAffichage;

  public static final String JSON_PROPERTY_CONTENU = "contenu";
  private String contenu;

  public static final String JSON_PROPERTY_LIBELLE_ACCEPTATION = "libelleAcceptation";
  private String libelleAcceptation;

  public static final String JSON_PROPERTY_LIBELLE_REFUS = "libelleRefus";
  private String libelleRefus;

  public static final String JSON_PROPERTY_TEMOIN_BLOQUANT = "temoinBloquant";
  private Boolean temoinBloquant;

  public static final String JSON_PROPERTY_DATE_DEBUT_VALIDITE = "dateDebutValidite";
  private String dateDebutValidite;

  public static final String JSON_PROPERTY_DATE_FIN_VALIDITE = "dateFinValidite";
  private String dateFinValidite;

  public static final String JSON_PROPERTY_PRIORITE_AFFICHAGE = "prioriteAffichage";
  private Integer prioriteAffichage;

  public static final String JSON_PROPERTY_TEMOIN_VISIBLE = "temoinVisible";
  private Boolean temoinVisible;

  public DocumentAApprouver() { 
  }

  public DocumentAApprouver code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Le code metier en saisie libre
   * @return code
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public DocumentAApprouver codeStructure(String codeStructure) {
    this.codeStructure = codeStructure;
    return this;
  }

  /**
   * Le code de l&#39;établissement (structure)
   * @return codeStructure
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCodeStructure() {
    return codeStructure;
  }


  @JsonProperty(JSON_PROPERTY_CODE_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCodeStructure(String codeStructure) {
    this.codeStructure = codeStructure;
  }


  public DocumentAApprouver libelleAffichage(String libelleAffichage) {
    this.libelleAffichage = libelleAffichage;
    return this;
  }

  /**
   * Le libellé d&#39;affichage
   * @return libelleAffichage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIBELLE_AFFICHAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLibelleAffichage() {
    return libelleAffichage;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_AFFICHAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLibelleAffichage(String libelleAffichage) {
    this.libelleAffichage = libelleAffichage;
  }


  public DocumentAApprouver contenu(String contenu) {
    this.contenu = contenu;
    return this;
  }

  /**
   * Le contenu
   * @return contenu
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getContenu() {
    return contenu;
  }


  @JsonProperty(JSON_PROPERTY_CONTENU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContenu(String contenu) {
    this.contenu = contenu;
  }


  public DocumentAApprouver libelleAcceptation(String libelleAcceptation) {
    this.libelleAcceptation = libelleAcceptation;
    return this;
  }

  /**
   * Le libellé d&#39;acceptation
   * @return libelleAcceptation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIBELLE_ACCEPTATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLibelleAcceptation() {
    return libelleAcceptation;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_ACCEPTATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLibelleAcceptation(String libelleAcceptation) {
    this.libelleAcceptation = libelleAcceptation;
  }


  public DocumentAApprouver libelleRefus(String libelleRefus) {
    this.libelleRefus = libelleRefus;
    return this;
  }

  /**
   * Le libellé de refus
   * @return libelleRefus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_REFUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleRefus() {
    return libelleRefus;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_REFUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleRefus(String libelleRefus) {
    this.libelleRefus = libelleRefus;
  }


  public DocumentAApprouver temoinBloquant(Boolean temoinBloquant) {
    this.temoinBloquant = temoinBloquant;
    return this;
  }

  /**
   * Si true, impose une réponse pour pouvoir continuer l&#39;inscription
   * @return temoinBloquant
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMOIN_BLOQUANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getTemoinBloquant() {
    return temoinBloquant;
  }


  @JsonProperty(JSON_PROPERTY_TEMOIN_BLOQUANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemoinBloquant(Boolean temoinBloquant) {
    this.temoinBloquant = temoinBloquant;
  }


  public DocumentAApprouver dateDebutValidite(String dateDebutValidite) {
    this.dateDebutValidite = dateDebutValidite;
    return this;
  }

  /**
   * La date de début de validité
   * @return dateDebutValidite
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_DEBUT_VALIDITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDateDebutValidite() {
    return dateDebutValidite;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DEBUT_VALIDITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateDebutValidite(String dateDebutValidite) {
    this.dateDebutValidite = dateDebutValidite;
  }


  public DocumentAApprouver dateFinValidite(String dateFinValidite) {
    this.dateFinValidite = dateFinValidite;
    return this;
  }

  /**
   * La date de fin de validité
   * @return dateFinValidite
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_FIN_VALIDITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDateFinValidite() {
    return dateFinValidite;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FIN_VALIDITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateFinValidite(String dateFinValidite) {
    this.dateFinValidite = dateFinValidite;
  }


  public DocumentAApprouver prioriteAffichage(Integer prioriteAffichage) {
    this.prioriteAffichage = prioriteAffichage;
    return this;
  }

  /**
   * La priorité d&#39;affichage : Plus le nombre est élevé, plus le document apparaît en priorité dans la liste de valeurs. 
   * @return prioriteAffichage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIORITE_AFFICHAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getPrioriteAffichage() {
    return prioriteAffichage;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITE_AFFICHAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrioriteAffichage(Integer prioriteAffichage) {
    this.prioriteAffichage = prioriteAffichage;
  }


  public DocumentAApprouver temoinVisible(Boolean temoinVisible) {
    this.temoinVisible = temoinVisible;
    return this;
  }

  /**
   * Si le document sera visible par l&#39;étudiant ou non.
   * @return temoinVisible
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMOIN_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getTemoinVisible() {
    return temoinVisible;
  }


  @JsonProperty(JSON_PROPERTY_TEMOIN_VISIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemoinVisible(Boolean temoinVisible) {
    this.temoinVisible = temoinVisible;
  }


  /**
   * Return true if this DocumentAApprouver object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentAApprouver documentAApprouver = (DocumentAApprouver) o;
    return Objects.equals(this.code, documentAApprouver.code) &&
        Objects.equals(this.codeStructure, documentAApprouver.codeStructure) &&
        Objects.equals(this.libelleAffichage, documentAApprouver.libelleAffichage) &&
        Objects.equals(this.contenu, documentAApprouver.contenu) &&
        Objects.equals(this.libelleAcceptation, documentAApprouver.libelleAcceptation) &&
        Objects.equals(this.libelleRefus, documentAApprouver.libelleRefus) &&
        Objects.equals(this.temoinBloquant, documentAApprouver.temoinBloquant) &&
        Objects.equals(this.dateDebutValidite, documentAApprouver.dateDebutValidite) &&
        Objects.equals(this.dateFinValidite, documentAApprouver.dateFinValidite) &&
        Objects.equals(this.prioriteAffichage, documentAApprouver.prioriteAffichage) &&
        Objects.equals(this.temoinVisible, documentAApprouver.temoinVisible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, codeStructure, libelleAffichage, contenu, libelleAcceptation, libelleRefus, temoinBloquant, dateDebutValidite, dateFinValidite, prioriteAffichage, temoinVisible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentAApprouver {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    codeStructure: ").append(toIndentedString(codeStructure)).append("\n");
    sb.append("    libelleAffichage: ").append(toIndentedString(libelleAffichage)).append("\n");
    sb.append("    contenu: ").append(toIndentedString(contenu)).append("\n");
    sb.append("    libelleAcceptation: ").append(toIndentedString(libelleAcceptation)).append("\n");
    sb.append("    libelleRefus: ").append(toIndentedString(libelleRefus)).append("\n");
    sb.append("    temoinBloquant: ").append(toIndentedString(temoinBloquant)).append("\n");
    sb.append("    dateDebutValidite: ").append(toIndentedString(dateDebutValidite)).append("\n");
    sb.append("    dateFinValidite: ").append(toIndentedString(dateFinValidite)).append("\n");
    sb.append("    prioriteAffichage: ").append(toIndentedString(prioriteAffichage)).append("\n");
    sb.append("    temoinVisible: ").append(toIndentedString(temoinVisible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%scode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `codeStructure` to the URL query string
    if (getCodeStructure() != null) {
      joiner.add(String.format("%scodeStructure%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCodeStructure()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleAffichage` to the URL query string
    if (getLibelleAffichage() != null) {
      joiner.add(String.format("%slibelleAffichage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleAffichage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `contenu` to the URL query string
    if (getContenu() != null) {
      joiner.add(String.format("%scontenu%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getContenu()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleAcceptation` to the URL query string
    if (getLibelleAcceptation() != null) {
      joiner.add(String.format("%slibelleAcceptation%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleAcceptation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleRefus` to the URL query string
    if (getLibelleRefus() != null) {
      joiner.add(String.format("%slibelleRefus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleRefus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `temoinBloquant` to the URL query string
    if (getTemoinBloquant() != null) {
      joiner.add(String.format("%stemoinBloquant%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTemoinBloquant()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateDebutValidite` to the URL query string
    if (getDateDebutValidite() != null) {
      joiner.add(String.format("%sdateDebutValidite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateDebutValidite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateFinValidite` to the URL query string
    if (getDateFinValidite() != null) {
      joiner.add(String.format("%sdateFinValidite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateFinValidite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `prioriteAffichage` to the URL query string
    if (getPrioriteAffichage() != null) {
      joiner.add(String.format("%sprioriteAffichage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPrioriteAffichage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `temoinVisible` to the URL query string
    if (getTemoinVisible() != null) {
      joiner.add(String.format("%stemoinVisible%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTemoinVisible()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

