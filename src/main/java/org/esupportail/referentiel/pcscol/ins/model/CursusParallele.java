/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * CursusParallele
 */
@JsonPropertyOrder({
  CursusParallele.JSON_PROPERTY_FILIERE,
  CursusParallele.JSON_PROPERTY_CONVENTION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class CursusParallele {
  public static final String JSON_PROPERTY_FILIERE = "filiere";
  @jakarta.annotation.Nullable
  private Filiere filiere;

  public static final String JSON_PROPERTY_CONVENTION = "convention";
  @jakarta.annotation.Nullable
  private Boolean convention;

  public CursusParallele() { 
  }

  public CursusParallele filiere(@jakarta.annotation.Nullable Filiere filiere) {
    this.filiere = filiere;
    return this;
  }

  /**
   * Get filiere
   * @return filiere
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILIERE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Filiere getFiliere() {
    return filiere;
  }


  @JsonProperty(JSON_PROPERTY_FILIERE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiliere(@jakarta.annotation.Nullable Filiere filiere) {
    this.filiere = filiere;
  }


  public CursusParallele convention(@jakarta.annotation.Nullable Boolean convention) {
    this.convention = convention;
    return this;
  }

  /**
   * L&#39;année d&#39;obtention du dernier diplôme au format AAAA
   * @return convention
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONVENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getConvention() {
    return convention;
  }


  @JsonProperty(JSON_PROPERTY_CONVENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConvention(@jakarta.annotation.Nullable Boolean convention) {
    this.convention = convention;
  }


  /**
   * Return true if this CursusParallele object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CursusParallele cursusParallele = (CursusParallele) o;
    return Objects.equals(this.filiere, cursusParallele.filiere) &&
        Objects.equals(this.convention, cursusParallele.convention);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filiere, convention);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CursusParallele {\n");
    sb.append("    filiere: ").append(toIndentedString(filiere)).append("\n");
    sb.append("    convention: ").append(toIndentedString(convention)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `filiere` to the URL query string
    if (getFiliere() != null) {
      joiner.add(getFiliere().toUrlQueryString(prefix + "filiere" + suffix));
    }

    // add `convention` to the URL query string
    if (getConvention() != null) {
      joiner.add(String.format("%sconvention%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getConvention()))));
    }

    return joiner.toString();
  }
}

