/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 24.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * InscriptionComplete
 */
@JsonPropertyOrder({
  InscriptionComplete.JSON_PROPERTY_CODE_ETABLISSEMENT,
  InscriptionComplete.JSON_PROPERTY_CIBLE,
  InscriptionComplete.JSON_PROPERTY_NO_CANDIDAT,
  InscriptionComplete.JSON_PROPERTY_ORIGINE,
  InscriptionComplete.JSON_PROPERTY_PRINCIPALE,
  InscriptionComplete.JSON_PROPERTY_STATUT_INSCRIPTION,
  InscriptionComplete.JSON_PROPERTY_CONTEXTE_INSCRIPTION,
  InscriptionComplete.JSON_PROPERTY_ENSEIGNEMENT_A_DISTANCE_DEPUIS_LA_FRANCE,
  InscriptionComplete.JSON_PROPERTY_STATUT_PAIEMENT,
  InscriptionComplete.JSON_PROPERTY_STATUT_PIECES,
  InscriptionComplete.JSON_PROPERTY_REGIME_INSCRIPTION,
  InscriptionComplete.JSON_PROPERTY_BOURSES_ET_AIDES,
  InscriptionComplete.JSON_PROPERTY_SITUATION_PERSONNELLE_INSCRIPTION,
  InscriptionComplete.JSON_PROPERTY_CVEC,
  InscriptionComplete.JSON_PROPERTY_ADMISSION,
  InscriptionComplete.JSON_PROPERTY_SITUATION_UNIVERSITAIRE,
  InscriptionComplete.JSON_PROPERTY_SITUATION_PRECEDENTE,
  InscriptionComplete.JSON_PROPERTY_CURSUS_PARALLELE,
  InscriptionComplete.JSON_PROPERTY_ECOLE_DOCTORALE,
  InscriptionComplete.JSON_PROPERTY_ACCORDS,
  InscriptionComplete.JSON_PROPERTY_PIECES,
  InscriptionComplete.JSON_PROPERTY_DATE_INSCRIPTION,
  InscriptionComplete.JSON_PROPERTY_TEMOIN_NEO_BACHELIER,
  InscriptionComplete.JSON_PROPERTY_DATE_DERNIERE_MODIFICATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-23T10:43:17.979817+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
public class InscriptionComplete {
  public static final String JSON_PROPERTY_CODE_ETABLISSEMENT = "codeEtablissement";
  private String codeEtablissement;

  public static final String JSON_PROPERTY_CIBLE = "cible";
  private CibleInscription cible;

  public static final String JSON_PROPERTY_NO_CANDIDAT = "noCandidat";
  private String noCandidat;

  public static final String JSON_PROPERTY_ORIGINE = "origine";
  private Origine origine;

  public static final String JSON_PROPERTY_PRINCIPALE = "principale";
  private Boolean principale;

  public static final String JSON_PROPERTY_STATUT_INSCRIPTION = "statutInscription";
  private StatutInscriptionVoeu statutInscription;

  public static final String JSON_PROPERTY_CONTEXTE_INSCRIPTION = "contexteInscription";
  private ContexteInscription contexteInscription;

  public static final String JSON_PROPERTY_ENSEIGNEMENT_A_DISTANCE_DEPUIS_LA_FRANCE = "enseignementADistanceDepuisLaFrance";
  private Boolean enseignementADistanceDepuisLaFrance;

  public static final String JSON_PROPERTY_STATUT_PAIEMENT = "statutPaiement";
  private StatutPaiementVoeu statutPaiement;

  public static final String JSON_PROPERTY_STATUT_PIECES = "statutPieces";
  private StatutPiecesVoeu statutPieces;

  public static final String JSON_PROPERTY_REGIME_INSCRIPTION = "regimeInscription";
  private OccurrenceNomenclature regimeInscription;

  public static final String JSON_PROPERTY_BOURSES_ET_AIDES = "boursesEtAides";
  private List<OccurrenceNomenclature> boursesEtAides = new ArrayList<>();

  public static final String JSON_PROPERTY_SITUATION_PERSONNELLE_INSCRIPTION = "situationPersonnelleInscription";
  private SituationPersonnelleInscription situationPersonnelleInscription;

  public static final String JSON_PROPERTY_CVEC = "cvec";
  private Cvec cvec;

  public static final String JSON_PROPERTY_ADMISSION = "admission";
  private Admission admission;

  public static final String JSON_PROPERTY_SITUATION_UNIVERSITAIRE = "situationUniversitaire";
  private SituationUniversitaire situationUniversitaire;

  public static final String JSON_PROPERTY_SITUATION_PRECEDENTE = "situationPrecedente";
  private SituationPrecedente situationPrecedente;

  public static final String JSON_PROPERTY_CURSUS_PARALLELE = "cursusParallele";
  private CursusParallele cursusParallele;

  public static final String JSON_PROPERTY_ECOLE_DOCTORALE = "ecoleDoctorale";
  private EcoleDoctorale ecoleDoctorale;

  public static final String JSON_PROPERTY_ACCORDS = "accords";
  private List<AccordComplet> accords = new ArrayList<>();

  public static final String JSON_PROPERTY_PIECES = "pieces";
  private List<PieceComplete> pieces = new ArrayList<>();

  public static final String JSON_PROPERTY_DATE_INSCRIPTION = "dateInscription";
  private String dateInscription;

  public static final String JSON_PROPERTY_TEMOIN_NEO_BACHELIER = "temoinNeoBachelier";
  private Boolean temoinNeoBachelier;

  public static final String JSON_PROPERTY_DATE_DERNIERE_MODIFICATION = "dateDerniereModification";
  private String dateDerniereModification;

  public InscriptionComplete() { 
  }

  public InscriptionComplete codeEtablissement(String codeEtablissement) {
    this.codeEtablissement = codeEtablissement;
    return this;
  }

  /**
   * Le code de l&#39;établissement dans lequel a été réalisée l&#39;inscription
   * @return codeEtablissement
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE_ETABLISSEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCodeEtablissement() {
    return codeEtablissement;
  }


  @JsonProperty(JSON_PROPERTY_CODE_ETABLISSEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCodeEtablissement(String codeEtablissement) {
    this.codeEtablissement = codeEtablissement;
  }


  public InscriptionComplete cible(CibleInscription cible) {
    this.cible = cible;
    return this;
  }

  /**
   * Get cible
   * @return cible
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CibleInscription getCible() {
    return cible;
  }


  @JsonProperty(JSON_PROPERTY_CIBLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCible(CibleInscription cible) {
    this.cible = cible;
  }


  public InscriptionComplete noCandidat(String noCandidat) {
    this.noCandidat = noCandidat;
    return this;
  }

  /**
   * Le numéro de candidature
   * @return noCandidat
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NO_CANDIDAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNoCandidat() {
    return noCandidat;
  }


  @JsonProperty(JSON_PROPERTY_NO_CANDIDAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNoCandidat(String noCandidat) {
    this.noCandidat = noCandidat;
  }


  public InscriptionComplete origine(Origine origine) {
    this.origine = origine;
    return this;
  }

  /**
   * Get origine
   * @return origine
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORIGINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Origine getOrigine() {
    return origine;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrigine(Origine origine) {
    this.origine = origine;
  }


  public InscriptionComplete principale(Boolean principale) {
    this.principale = principale;
    return this;
  }

  /**
   * le temoin indiquant si une inscription est principale ou pas
   * @return principale
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRINCIPALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getPrincipale() {
    return principale;
  }


  @JsonProperty(JSON_PROPERTY_PRINCIPALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrincipale(Boolean principale) {
    this.principale = principale;
  }


  public InscriptionComplete statutInscription(StatutInscriptionVoeu statutInscription) {
    this.statutInscription = statutInscription;
    return this;
  }

  /**
   * Get statutInscription
   * @return statutInscription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUT_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public StatutInscriptionVoeu getStatutInscription() {
    return statutInscription;
  }


  @JsonProperty(JSON_PROPERTY_STATUT_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatutInscription(StatutInscriptionVoeu statutInscription) {
    this.statutInscription = statutInscription;
  }


  public InscriptionComplete contexteInscription(ContexteInscription contexteInscription) {
    this.contexteInscription = contexteInscription;
    return this;
  }

  /**
   * Get contexteInscription
   * @return contexteInscription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTEXTE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public ContexteInscription getContexteInscription() {
    return contexteInscription;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXTE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContexteInscription(ContexteInscription contexteInscription) {
    this.contexteInscription = contexteInscription;
  }


  public InscriptionComplete enseignementADistanceDepuisLaFrance(Boolean enseignementADistanceDepuisLaFrance) {
    this.enseignementADistanceDepuisLaFrance = enseignementADistanceDepuisLaFrance;
    return this;
  }

  /**
   * le temoin indiquant si un télé-enseignement a lieu depuis la France ou l&#39;étranger.
   * @return enseignementADistanceDepuisLaFrance
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENSEIGNEMENT_A_DISTANCE_DEPUIS_LA_FRANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnseignementADistanceDepuisLaFrance() {
    return enseignementADistanceDepuisLaFrance;
  }


  @JsonProperty(JSON_PROPERTY_ENSEIGNEMENT_A_DISTANCE_DEPUIS_LA_FRANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnseignementADistanceDepuisLaFrance(Boolean enseignementADistanceDepuisLaFrance) {
    this.enseignementADistanceDepuisLaFrance = enseignementADistanceDepuisLaFrance;
  }


  public InscriptionComplete statutPaiement(StatutPaiementVoeu statutPaiement) {
    this.statutPaiement = statutPaiement;
    return this;
  }

  /**
   * Get statutPaiement
   * @return statutPaiement
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUT_PAIEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public StatutPaiementVoeu getStatutPaiement() {
    return statutPaiement;
  }


  @JsonProperty(JSON_PROPERTY_STATUT_PAIEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatutPaiement(StatutPaiementVoeu statutPaiement) {
    this.statutPaiement = statutPaiement;
  }


  public InscriptionComplete statutPieces(StatutPiecesVoeu statutPieces) {
    this.statutPieces = statutPieces;
    return this;
  }

  /**
   * Get statutPieces
   * @return statutPieces
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUT_PIECES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public StatutPiecesVoeu getStatutPieces() {
    return statutPieces;
  }


  @JsonProperty(JSON_PROPERTY_STATUT_PIECES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatutPieces(StatutPiecesVoeu statutPieces) {
    this.statutPieces = statutPieces;
  }


  public InscriptionComplete regimeInscription(OccurrenceNomenclature regimeInscription) {
    this.regimeInscription = regimeInscription;
    return this;
  }

  /**
   * Get regimeInscription
   * @return regimeInscription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGIME_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OccurrenceNomenclature getRegimeInscription() {
    return regimeInscription;
  }


  @JsonProperty(JSON_PROPERTY_REGIME_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegimeInscription(OccurrenceNomenclature regimeInscription) {
    this.regimeInscription = regimeInscription;
  }


  public InscriptionComplete boursesEtAides(List<OccurrenceNomenclature> boursesEtAides) {
    this.boursesEtAides = boursesEtAides;
    return this;
  }

  public InscriptionComplete addBoursesEtAidesItem(OccurrenceNomenclature boursesEtAidesItem) {
    if (this.boursesEtAides == null) {
      this.boursesEtAides = new ArrayList<>();
    }
    this.boursesEtAides.add(boursesEtAidesItem);
    return this;
  }

  /**
   * Les bourses et aides financières
   * @return boursesEtAides
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOURSES_ET_AIDES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<OccurrenceNomenclature> getBoursesEtAides() {
    return boursesEtAides;
  }


  @JsonProperty(JSON_PROPERTY_BOURSES_ET_AIDES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBoursesEtAides(List<OccurrenceNomenclature> boursesEtAides) {
    this.boursesEtAides = boursesEtAides;
  }


  public InscriptionComplete situationPersonnelleInscription(SituationPersonnelleInscription situationPersonnelleInscription) {
    this.situationPersonnelleInscription = situationPersonnelleInscription;
    return this;
  }

  /**
   * Get situationPersonnelleInscription
   * @return situationPersonnelleInscription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SITUATION_PERSONNELLE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public SituationPersonnelleInscription getSituationPersonnelleInscription() {
    return situationPersonnelleInscription;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_PERSONNELLE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSituationPersonnelleInscription(SituationPersonnelleInscription situationPersonnelleInscription) {
    this.situationPersonnelleInscription = situationPersonnelleInscription;
  }


  public InscriptionComplete cvec(Cvec cvec) {
    this.cvec = cvec;
    return this;
  }

  /**
   * Get cvec
   * @return cvec
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CVEC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Cvec getCvec() {
    return cvec;
  }


  @JsonProperty(JSON_PROPERTY_CVEC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCvec(Cvec cvec) {
    this.cvec = cvec;
  }


  public InscriptionComplete admission(Admission admission) {
    this.admission = admission;
    return this;
  }

  /**
   * Get admission
   * @return admission
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Admission getAdmission() {
    return admission;
  }


  @JsonProperty(JSON_PROPERTY_ADMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdmission(Admission admission) {
    this.admission = admission;
  }


  public InscriptionComplete situationUniversitaire(SituationUniversitaire situationUniversitaire) {
    this.situationUniversitaire = situationUniversitaire;
    return this;
  }

  /**
   * Get situationUniversitaire
   * @return situationUniversitaire
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SITUATION_UNIVERSITAIRE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public SituationUniversitaire getSituationUniversitaire() {
    return situationUniversitaire;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_UNIVERSITAIRE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSituationUniversitaire(SituationUniversitaire situationUniversitaire) {
    this.situationUniversitaire = situationUniversitaire;
  }


  public InscriptionComplete situationPrecedente(SituationPrecedente situationPrecedente) {
    this.situationPrecedente = situationPrecedente;
    return this;
  }

  /**
   * Get situationPrecedente
   * @return situationPrecedente
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SITUATION_PRECEDENTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public SituationPrecedente getSituationPrecedente() {
    return situationPrecedente;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_PRECEDENTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSituationPrecedente(SituationPrecedente situationPrecedente) {
    this.situationPrecedente = situationPrecedente;
  }


  public InscriptionComplete cursusParallele(CursusParallele cursusParallele) {
    this.cursusParallele = cursusParallele;
    return this;
  }

  /**
   * Get cursusParallele
   * @return cursusParallele
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURSUS_PARALLELE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CursusParallele getCursusParallele() {
    return cursusParallele;
  }


  @JsonProperty(JSON_PROPERTY_CURSUS_PARALLELE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCursusParallele(CursusParallele cursusParallele) {
    this.cursusParallele = cursusParallele;
  }


  public InscriptionComplete ecoleDoctorale(EcoleDoctorale ecoleDoctorale) {
    this.ecoleDoctorale = ecoleDoctorale;
    return this;
  }

  /**
   * Get ecoleDoctorale
   * @return ecoleDoctorale
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ECOLE_DOCTORALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public EcoleDoctorale getEcoleDoctorale() {
    return ecoleDoctorale;
  }


  @JsonProperty(JSON_PROPERTY_ECOLE_DOCTORALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEcoleDoctorale(EcoleDoctorale ecoleDoctorale) {
    this.ecoleDoctorale = ecoleDoctorale;
  }


  public InscriptionComplete accords(List<AccordComplet> accords) {
    this.accords = accords;
    return this;
  }

  public InscriptionComplete addAccordsItem(AccordComplet accordsItem) {
    if (this.accords == null) {
      this.accords = new ArrayList<>();
    }
    this.accords.add(accordsItem);
    return this;
  }

  /**
   * les documents soumis à approbation lors de l&#39;inscription
   * @return accords
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCORDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<AccordComplet> getAccords() {
    return accords;
  }


  @JsonProperty(JSON_PROPERTY_ACCORDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccords(List<AccordComplet> accords) {
    this.accords = accords;
  }


  public InscriptionComplete pieces(List<PieceComplete> pieces) {
    this.pieces = pieces;
    return this;
  }

  public InscriptionComplete addPiecesItem(PieceComplete piecesItem) {
    if (this.pieces == null) {
      this.pieces = new ArrayList<>();
    }
    this.pieces.add(piecesItem);
    return this;
  }

  /**
   * Get pieces
   * @return pieces
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PIECES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<PieceComplete> getPieces() {
    return pieces;
  }


  @JsonProperty(JSON_PROPERTY_PIECES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPieces(List<PieceComplete> pieces) {
    this.pieces = pieces;
  }


  public InscriptionComplete dateInscription(String dateInscription) {
    this.dateInscription = dateInscription;
    return this;
  }

  /**
   * La date de l&#39;inscription au format AAAA-MM-JJ
   * @return dateInscription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDateInscription() {
    return dateInscription;
  }


  @JsonProperty(JSON_PROPERTY_DATE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateInscription(String dateInscription) {
    this.dateInscription = dateInscription;
  }


  public InscriptionComplete temoinNeoBachelier(Boolean temoinNeoBachelier) {
    this.temoinNeoBachelier = temoinNeoBachelier;
    return this;
  }

  /**
   * Get temoinNeoBachelier
   * @return temoinNeoBachelier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMOIN_NEO_BACHELIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getTemoinNeoBachelier() {
    return temoinNeoBachelier;
  }


  @JsonProperty(JSON_PROPERTY_TEMOIN_NEO_BACHELIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemoinNeoBachelier(Boolean temoinNeoBachelier) {
    this.temoinNeoBachelier = temoinNeoBachelier;
  }


  public InscriptionComplete dateDerniereModification(String dateDerniereModification) {
    this.dateDerniereModification = dateDerniereModification;
    return this;
  }

  /**
   * la date de dernière modification de l&#39;inscription
   * @return dateDerniereModification
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_DERNIERE_MODIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDateDerniereModification() {
    return dateDerniereModification;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DERNIERE_MODIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateDerniereModification(String dateDerniereModification) {
    this.dateDerniereModification = dateDerniereModification;
  }


  /**
   * Return true if this InscriptionComplete object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InscriptionComplete inscriptionComplete = (InscriptionComplete) o;
    return Objects.equals(this.codeEtablissement, inscriptionComplete.codeEtablissement) &&
        Objects.equals(this.cible, inscriptionComplete.cible) &&
        Objects.equals(this.noCandidat, inscriptionComplete.noCandidat) &&
        Objects.equals(this.origine, inscriptionComplete.origine) &&
        Objects.equals(this.principale, inscriptionComplete.principale) &&
        Objects.equals(this.statutInscription, inscriptionComplete.statutInscription) &&
        Objects.equals(this.contexteInscription, inscriptionComplete.contexteInscription) &&
        Objects.equals(this.enseignementADistanceDepuisLaFrance, inscriptionComplete.enseignementADistanceDepuisLaFrance) &&
        Objects.equals(this.statutPaiement, inscriptionComplete.statutPaiement) &&
        Objects.equals(this.statutPieces, inscriptionComplete.statutPieces) &&
        Objects.equals(this.regimeInscription, inscriptionComplete.regimeInscription) &&
        Objects.equals(this.boursesEtAides, inscriptionComplete.boursesEtAides) &&
        Objects.equals(this.situationPersonnelleInscription, inscriptionComplete.situationPersonnelleInscription) &&
        Objects.equals(this.cvec, inscriptionComplete.cvec) &&
        Objects.equals(this.admission, inscriptionComplete.admission) &&
        Objects.equals(this.situationUniversitaire, inscriptionComplete.situationUniversitaire) &&
        Objects.equals(this.situationPrecedente, inscriptionComplete.situationPrecedente) &&
        Objects.equals(this.cursusParallele, inscriptionComplete.cursusParallele) &&
        Objects.equals(this.ecoleDoctorale, inscriptionComplete.ecoleDoctorale) &&
        Objects.equals(this.accords, inscriptionComplete.accords) &&
        Objects.equals(this.pieces, inscriptionComplete.pieces) &&
        Objects.equals(this.dateInscription, inscriptionComplete.dateInscription) &&
        Objects.equals(this.temoinNeoBachelier, inscriptionComplete.temoinNeoBachelier) &&
        Objects.equals(this.dateDerniereModification, inscriptionComplete.dateDerniereModification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codeEtablissement, cible, noCandidat, origine, principale, statutInscription, contexteInscription, enseignementADistanceDepuisLaFrance, statutPaiement, statutPieces, regimeInscription, boursesEtAides, situationPersonnelleInscription, cvec, admission, situationUniversitaire, situationPrecedente, cursusParallele, ecoleDoctorale, accords, pieces, dateInscription, temoinNeoBachelier, dateDerniereModification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InscriptionComplete {\n");
    sb.append("    codeEtablissement: ").append(toIndentedString(codeEtablissement)).append("\n");
    sb.append("    cible: ").append(toIndentedString(cible)).append("\n");
    sb.append("    noCandidat: ").append(toIndentedString(noCandidat)).append("\n");
    sb.append("    origine: ").append(toIndentedString(origine)).append("\n");
    sb.append("    principale: ").append(toIndentedString(principale)).append("\n");
    sb.append("    statutInscription: ").append(toIndentedString(statutInscription)).append("\n");
    sb.append("    contexteInscription: ").append(toIndentedString(contexteInscription)).append("\n");
    sb.append("    enseignementADistanceDepuisLaFrance: ").append(toIndentedString(enseignementADistanceDepuisLaFrance)).append("\n");
    sb.append("    statutPaiement: ").append(toIndentedString(statutPaiement)).append("\n");
    sb.append("    statutPieces: ").append(toIndentedString(statutPieces)).append("\n");
    sb.append("    regimeInscription: ").append(toIndentedString(regimeInscription)).append("\n");
    sb.append("    boursesEtAides: ").append(toIndentedString(boursesEtAides)).append("\n");
    sb.append("    situationPersonnelleInscription: ").append(toIndentedString(situationPersonnelleInscription)).append("\n");
    sb.append("    cvec: ").append(toIndentedString(cvec)).append("\n");
    sb.append("    admission: ").append(toIndentedString(admission)).append("\n");
    sb.append("    situationUniversitaire: ").append(toIndentedString(situationUniversitaire)).append("\n");
    sb.append("    situationPrecedente: ").append(toIndentedString(situationPrecedente)).append("\n");
    sb.append("    cursusParallele: ").append(toIndentedString(cursusParallele)).append("\n");
    sb.append("    ecoleDoctorale: ").append(toIndentedString(ecoleDoctorale)).append("\n");
    sb.append("    accords: ").append(toIndentedString(accords)).append("\n");
    sb.append("    pieces: ").append(toIndentedString(pieces)).append("\n");
    sb.append("    dateInscription: ").append(toIndentedString(dateInscription)).append("\n");
    sb.append("    temoinNeoBachelier: ").append(toIndentedString(temoinNeoBachelier)).append("\n");
    sb.append("    dateDerniereModification: ").append(toIndentedString(dateDerniereModification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `codeEtablissement` to the URL query string
    if (getCodeEtablissement() != null) {
      joiner.add(String.format("%scodeEtablissement%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCodeEtablissement()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cible` to the URL query string
    if (getCible() != null) {
      joiner.add(getCible().toUrlQueryString(prefix + "cible" + suffix));
    }

    // add `noCandidat` to the URL query string
    if (getNoCandidat() != null) {
      joiner.add(String.format("%snoCandidat%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNoCandidat()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `origine` to the URL query string
    if (getOrigine() != null) {
      joiner.add(String.format("%sorigine%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getOrigine()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `principale` to the URL query string
    if (getPrincipale() != null) {
      joiner.add(String.format("%sprincipale%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPrincipale()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statutInscription` to the URL query string
    if (getStatutInscription() != null) {
      joiner.add(String.format("%sstatutInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatutInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `contexteInscription` to the URL query string
    if (getContexteInscription() != null) {
      joiner.add(String.format("%scontexteInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getContexteInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `enseignementADistanceDepuisLaFrance` to the URL query string
    if (getEnseignementADistanceDepuisLaFrance() != null) {
      joiner.add(String.format("%senseignementADistanceDepuisLaFrance%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getEnseignementADistanceDepuisLaFrance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statutPaiement` to the URL query string
    if (getStatutPaiement() != null) {
      joiner.add(String.format("%sstatutPaiement%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatutPaiement()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statutPieces` to the URL query string
    if (getStatutPieces() != null) {
      joiner.add(String.format("%sstatutPieces%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatutPieces()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `regimeInscription` to the URL query string
    if (getRegimeInscription() != null) {
      joiner.add(getRegimeInscription().toUrlQueryString(prefix + "regimeInscription" + suffix));
    }

    // add `boursesEtAides` to the URL query string
    if (getBoursesEtAides() != null) {
      for (int i = 0; i < getBoursesEtAides().size(); i++) {
        if (getBoursesEtAides().get(i) != null) {
          joiner.add(getBoursesEtAides().get(i).toUrlQueryString(String.format("%sboursesEtAides%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `situationPersonnelleInscription` to the URL query string
    if (getSituationPersonnelleInscription() != null) {
      joiner.add(getSituationPersonnelleInscription().toUrlQueryString(prefix + "situationPersonnelleInscription" + suffix));
    }

    // add `cvec` to the URL query string
    if (getCvec() != null) {
      joiner.add(getCvec().toUrlQueryString(prefix + "cvec" + suffix));
    }

    // add `admission` to the URL query string
    if (getAdmission() != null) {
      joiner.add(getAdmission().toUrlQueryString(prefix + "admission" + suffix));
    }

    // add `situationUniversitaire` to the URL query string
    if (getSituationUniversitaire() != null) {
      joiner.add(getSituationUniversitaire().toUrlQueryString(prefix + "situationUniversitaire" + suffix));
    }

    // add `situationPrecedente` to the URL query string
    if (getSituationPrecedente() != null) {
      joiner.add(getSituationPrecedente().toUrlQueryString(prefix + "situationPrecedente" + suffix));
    }

    // add `cursusParallele` to the URL query string
    if (getCursusParallele() != null) {
      joiner.add(getCursusParallele().toUrlQueryString(prefix + "cursusParallele" + suffix));
    }

    // add `ecoleDoctorale` to the URL query string
    if (getEcoleDoctorale() != null) {
      joiner.add(getEcoleDoctorale().toUrlQueryString(prefix + "ecoleDoctorale" + suffix));
    }

    // add `accords` to the URL query string
    if (getAccords() != null) {
      for (int i = 0; i < getAccords().size(); i++) {
        if (getAccords().get(i) != null) {
          joiner.add(getAccords().get(i).toUrlQueryString(String.format("%saccords%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `pieces` to the URL query string
    if (getPieces() != null) {
      for (int i = 0; i < getPieces().size(); i++) {
        if (getPieces().get(i) != null) {
          joiner.add(getPieces().get(i).toUrlQueryString(String.format("%spieces%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `dateInscription` to the URL query string
    if (getDateInscription() != null) {
      joiner.add(String.format("%sdateInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `temoinNeoBachelier` to the URL query string
    if (getTemoinNeoBachelier() != null) {
      joiner.add(String.format("%stemoinNeoBachelier%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTemoinNeoBachelier()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateDerniereModification` to the URL query string
    if (getDateDerniereModification() != null) {
      joiner.add(String.format("%sdateDerniereModification%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateDerniereModification()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

