/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;
import org.esupportail.referentiel.pcscol.invoker.JSON;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
/**
 * L&#39;état d&#39;une voeu dans le formulaire, à définir
 */
@JsonPropertyOrder({
  Voeu.JSON_PROPERTY_CIBLE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
@JsonIgnoreProperties(
  value = "est1", // ignore manually set est1, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the est1 to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "est1", visible = true)

public class Voeu extends VoeuBase {
  public static final String JSON_PROPERTY_CIBLE = "cible";
  @jakarta.annotation.Nullable
  private CiblePourInscription cible;

  public Voeu() { 
  }

  public Voeu cible(@jakarta.annotation.Nullable CiblePourInscription cible) {
    this.cible = cible;
    return this;
  }

  /**
   * Get cible
   * @return cible
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CiblePourInscription getCible() {
    return cible;
  }


  @JsonProperty(JSON_PROPERTY_CIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCible(@jakarta.annotation.Nullable CiblePourInscription cible) {
    this.cible = cible;
  }


  @Override
  public Voeu est1(@jakarta.annotation.Nonnull String est1) {
    this.setEst1(est1);
    return this;
  }

  @Override
  public Voeu noCandidat(@jakarta.annotation.Nullable String noCandidat) {
    this.setNoCandidat(noCandidat);
    return this;
  }

  @Override
  public Voeu choisi(@jakarta.annotation.Nullable Boolean choisi) {
    this.setChoisi(choisi);
    return this;
  }

  @Override
  public Voeu origine(@jakarta.annotation.Nullable Origine origine) {
    this.setOrigine(origine);
    return this;
  }

  @Override
  public Voeu statutInscription(@jakarta.annotation.Nullable StatutInscriptionVoeu statutInscription) {
    this.setStatutInscription(statutInscription);
    return this;
  }

  @Override
  public Voeu statutPaiement(@jakarta.annotation.Nullable StatutPaiementVoeu statutPaiement) {
    this.setStatutPaiement(statutPaiement);
    return this;
  }

  @Override
  public Voeu codeRegimeInscription(@jakarta.annotation.Nullable String codeRegimeInscription) {
    this.setCodeRegimeInscription(codeRegimeInscription);
    return this;
  }

  @Override
  public Voeu boursesEtAides(@jakarta.annotation.Nullable List<String> boursesEtAides) {
    this.setBoursesEtAides(boursesEtAides);
    return this;
  }

  @Override
  public Voeu motifAnnulation(@jakarta.annotation.Nullable MotifAnnulation motifAnnulation) {
    this.setMotifAnnulation(motifAnnulation);
    return this;
  }

  /**
   * Return true if this Voeu object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Voeu voeu = (Voeu) o;
    return Objects.equals(this.cible, voeu.cible) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cible, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Voeu {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    cible: ").append(toIndentedString(cible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `est1` to the URL query string
    if (getEst1() != null) {
      joiner.add(String.format("%sest1%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEst1()))));
    }

    // add `noCandidat` to the URL query string
    if (getNoCandidat() != null) {
      joiner.add(String.format("%snoCandidat%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNoCandidat()))));
    }

    // add `choisi` to the URL query string
    if (getChoisi() != null) {
      joiner.add(String.format("%schoisi%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChoisi()))));
    }

    // add `origine` to the URL query string
    if (getOrigine() != null) {
      joiner.add(String.format("%sorigine%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrigine()))));
    }

    // add `statutInscription` to the URL query string
    if (getStatutInscription() != null) {
      joiner.add(String.format("%sstatutInscription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatutInscription()))));
    }

    // add `statutPaiement` to the URL query string
    if (getStatutPaiement() != null) {
      joiner.add(String.format("%sstatutPaiement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatutPaiement()))));
    }

    // add `codeRegimeInscription` to the URL query string
    if (getCodeRegimeInscription() != null) {
      joiner.add(String.format("%scodeRegimeInscription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCodeRegimeInscription()))));
    }

    // add `boursesEtAides` to the URL query string
    if (getBoursesEtAides() != null) {
      for (int i = 0; i < getBoursesEtAides().size(); i++) {
        joiner.add(String.format("%sboursesEtAides%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getBoursesEtAides().get(i)))));
      }
    }

    // add `motifAnnulation` to the URL query string
    if (getMotifAnnulation() != null) {
      joiner.add(String.format("%smotifAnnulation%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMotifAnnulation()))));
    }

    // add `cible` to the URL query string
    if (getCible() != null) {
      joiner.add(getCible().toUrlQueryString(prefix + "cible" + suffix));
    }

    return joiner.toString();
  }
static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("Voeu", Voeu.class);
  JSON.registerDiscriminator(Voeu.class, "est1", mappings);
}
}

