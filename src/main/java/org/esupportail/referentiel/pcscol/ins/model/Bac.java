/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.Date;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * Bac
 */
@JsonPropertyOrder({
  Bac.JSON_PROPERTY_TITRE_ACCES,
  Bac.JSON_PROPERTY_ANNEE_OBTENTION,
  Bac.JSON_PROPERTY_SERIE,
  Bac.JSON_PROPERTY_LIBELLE_SERIE,
  Bac.JSON_PROPERTY_PREMIERE_SPECIALITE_BAC,
  Bac.JSON_PROPERTY_LIBELLE_PREMIERE_SPECIALITE_BAC,
  Bac.JSON_PROPERTY_DEUXIEME_SPECIALITE_BAC,
  Bac.JSON_PROPERTY_LIBELLE_DEUXIEME_SPECIALITE_BAC,
  Bac.JSON_PROPERTY_MENTION,
  Bac.JSON_PROPERTY_LIBELLE_MENTION,
  Bac.JSON_PROPERTY_TYPE_ETABLISSEMENT,
  Bac.JSON_PROPERTY_PAYS,
  Bac.JSON_PROPERTY_LIBELLE_PAYS,
  Bac.JSON_PROPERTY_DEPARTEMENT,
  Bac.JSON_PROPERTY_LIBELLE_DEPARTEMENT,
  Bac.JSON_PROPERTY_ETABLISSEMENT,
  Bac.JSON_PROPERTY_INE,
  Bac.JSON_PROPERTY_STATUT_INE,
  Bac.JSON_PROPERTY_CODE_ERREUR_INE,
  Bac.JSON_PROPERTY_MESSAGE_ERREUR_INE,
  Bac.JSON_PROPERTY_DATE_DERNIER_APPEL_INES,
  Bac.JSON_PROPERTY_ETABLISSEMENT_LIBRE,
  Bac.JSON_PROPERTY_DETAIL_TITRE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class Bac {
  public static final String JSON_PROPERTY_TITRE_ACCES = "titreAcces";
  @jakarta.annotation.Nullable
  private String titreAcces;

  public static final String JSON_PROPERTY_ANNEE_OBTENTION = "anneeObtention";
  @jakarta.annotation.Nullable
  private String anneeObtention;

  public static final String JSON_PROPERTY_SERIE = "serie";
  @jakarta.annotation.Nullable
  private String serie;

  public static final String JSON_PROPERTY_LIBELLE_SERIE = "libelleSerie";
  @jakarta.annotation.Nullable
  private String libelleSerie;

  public static final String JSON_PROPERTY_PREMIERE_SPECIALITE_BAC = "premiereSpecialiteBac";
  @jakarta.annotation.Nullable
  private String premiereSpecialiteBac;

  public static final String JSON_PROPERTY_LIBELLE_PREMIERE_SPECIALITE_BAC = "libellePremiereSpecialiteBac";
  @jakarta.annotation.Nullable
  private String libellePremiereSpecialiteBac;

  public static final String JSON_PROPERTY_DEUXIEME_SPECIALITE_BAC = "deuxiemeSpecialiteBac";
  @jakarta.annotation.Nullable
  private String deuxiemeSpecialiteBac;

  public static final String JSON_PROPERTY_LIBELLE_DEUXIEME_SPECIALITE_BAC = "libelleDeuxiemeSpecialiteBac";
  @jakarta.annotation.Nullable
  private String libelleDeuxiemeSpecialiteBac;

  public static final String JSON_PROPERTY_MENTION = "mention";
  @jakarta.annotation.Nullable
  private String mention;

  public static final String JSON_PROPERTY_LIBELLE_MENTION = "libelleMention";
  @jakarta.annotation.Nullable
  private String libelleMention;

  public static final String JSON_PROPERTY_TYPE_ETABLISSEMENT = "typeEtablissement";
  @jakarta.annotation.Nullable
  private String typeEtablissement;

  public static final String JSON_PROPERTY_PAYS = "pays";
  @jakarta.annotation.Nullable
  private String pays;

  public static final String JSON_PROPERTY_LIBELLE_PAYS = "libellePays";
  @jakarta.annotation.Nullable
  private String libellePays;

  public static final String JSON_PROPERTY_DEPARTEMENT = "departement";
  @jakarta.annotation.Nullable
  private String departement;

  public static final String JSON_PROPERTY_LIBELLE_DEPARTEMENT = "libelleDepartement";
  @jakarta.annotation.Nullable
  private String libelleDepartement;

  public static final String JSON_PROPERTY_ETABLISSEMENT = "etablissement";
  @jakarta.annotation.Nullable
  private String etablissement;

  public static final String JSON_PROPERTY_INE = "ine";
  @jakarta.annotation.Nullable
  private String ine;

  public static final String JSON_PROPERTY_STATUT_INE = "statutIne";
  @jakarta.annotation.Nullable
  private StatutIne statutIne;

  public static final String JSON_PROPERTY_CODE_ERREUR_INE = "codeErreurIne";
  @jakarta.annotation.Nullable
  private String codeErreurIne;

  public static final String JSON_PROPERTY_MESSAGE_ERREUR_INE = "messageErreurIne";
  @jakarta.annotation.Nullable
  private String messageErreurIne;

  public static final String JSON_PROPERTY_DATE_DERNIER_APPEL_INES = "dateDernierAppelInes";
  @jakarta.annotation.Nullable
  private Date dateDernierAppelInes;

  public static final String JSON_PROPERTY_ETABLISSEMENT_LIBRE = "etablissementLibre";
  @jakarta.annotation.Nullable
  private String etablissementLibre;

  public static final String JSON_PROPERTY_DETAIL_TITRE = "detailTitre";
  @jakarta.annotation.Nullable
  private String detailTitre;

  public Bac() { 
  }

  public Bac titreAcces(@jakarta.annotation.Nullable String titreAcces) {
    this.titreAcces = titreAcces;
    return this;
  }

  /**
   * Le titre d&#39;accès du baccalaureat ou équivalent
   * @return titreAcces
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITRE_ACCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTitreAcces() {
    return titreAcces;
  }


  @JsonProperty(JSON_PROPERTY_TITRE_ACCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitreAcces(@jakarta.annotation.Nullable String titreAcces) {
    this.titreAcces = titreAcces;
  }


  public Bac anneeObtention(@jakarta.annotation.Nullable String anneeObtention) {
    this.anneeObtention = anneeObtention;
    return this;
  }

  /**
   * L&#39;annee d&#39;obtention du baccalaureat ou équivalent
   * @return anneeObtention
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNEE_OBTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAnneeObtention() {
    return anneeObtention;
  }


  @JsonProperty(JSON_PROPERTY_ANNEE_OBTENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnneeObtention(@jakarta.annotation.Nullable String anneeObtention) {
    this.anneeObtention = anneeObtention;
  }


  public Bac serie(@jakarta.annotation.Nullable String serie) {
    this.serie = serie;
    return this;
  }

  /**
   * Le code de la série du baccalauréat ou équivalent issu de la nomenclature Séries du baccalauréat et équivalences  Codes de la nomenclature sur 6 caractères. Préfixe des codes : BAC 
   * @return serie
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSerie() {
    return serie;
  }


  @JsonProperty(JSON_PROPERTY_SERIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSerie(@jakarta.annotation.Nullable String serie) {
    this.serie = serie;
  }


  public Bac libelleSerie(@jakarta.annotation.Nullable String libelleSerie) {
    this.libelleSerie = libelleSerie;
    return this;
  }

  /**
   * Le libelle de la série du baccalauréat ou équivalent issu de la nomenclature Séries du baccalauréat et équivalences 
   * @return libelleSerie
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_SERIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleSerie() {
    return libelleSerie;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_SERIE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleSerie(@jakarta.annotation.Nullable String libelleSerie) {
    this.libelleSerie = libelleSerie;
  }


  public Bac premiereSpecialiteBac(@jakarta.annotation.Nullable String premiereSpecialiteBac) {
    this.premiereSpecialiteBac = premiereSpecialiteBac;
    return this;
  }

  /**
   * Le code de la première spécialité du nouveau baccalaureat (NBGE) issu de la nomenclature Specialités Bac Général 
   * @return premiereSpecialiteBac
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREMIERE_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPremiereSpecialiteBac() {
    return premiereSpecialiteBac;
  }


  @JsonProperty(JSON_PROPERTY_PREMIERE_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPremiereSpecialiteBac(@jakarta.annotation.Nullable String premiereSpecialiteBac) {
    this.premiereSpecialiteBac = premiereSpecialiteBac;
  }


  public Bac libellePremiereSpecialiteBac(@jakarta.annotation.Nullable String libellePremiereSpecialiteBac) {
    this.libellePremiereSpecialiteBac = libellePremiereSpecialiteBac;
    return this;
  }

  /**
   * Le libelle de la première spécialité du nouveau baccalaureat (NBGE) issu de la nomenclature Specialités Bac Général 
   * @return libellePremiereSpecialiteBac
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_PREMIERE_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibellePremiereSpecialiteBac() {
    return libellePremiereSpecialiteBac;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_PREMIERE_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibellePremiereSpecialiteBac(@jakarta.annotation.Nullable String libellePremiereSpecialiteBac) {
    this.libellePremiereSpecialiteBac = libellePremiereSpecialiteBac;
  }


  public Bac deuxiemeSpecialiteBac(@jakarta.annotation.Nullable String deuxiemeSpecialiteBac) {
    this.deuxiemeSpecialiteBac = deuxiemeSpecialiteBac;
    return this;
  }

  /**
   * Le code de la deuxième spécialité du nouveau baccalaureat (NBGE) issu de la nomenclature Specialités Bac Général 
   * @return deuxiemeSpecialiteBac
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEUXIEME_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDeuxiemeSpecialiteBac() {
    return deuxiemeSpecialiteBac;
  }


  @JsonProperty(JSON_PROPERTY_DEUXIEME_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeuxiemeSpecialiteBac(@jakarta.annotation.Nullable String deuxiemeSpecialiteBac) {
    this.deuxiemeSpecialiteBac = deuxiemeSpecialiteBac;
  }


  public Bac libelleDeuxiemeSpecialiteBac(@jakarta.annotation.Nullable String libelleDeuxiemeSpecialiteBac) {
    this.libelleDeuxiemeSpecialiteBac = libelleDeuxiemeSpecialiteBac;
    return this;
  }

  /**
   * Le libelle de la deuxième spécialité du nouveau baccalaureat (NBGE) issu de la nomenclature Specialités Bac Général 
   * @return libelleDeuxiemeSpecialiteBac
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_DEUXIEME_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleDeuxiemeSpecialiteBac() {
    return libelleDeuxiemeSpecialiteBac;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_DEUXIEME_SPECIALITE_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleDeuxiemeSpecialiteBac(@jakarta.annotation.Nullable String libelleDeuxiemeSpecialiteBac) {
    this.libelleDeuxiemeSpecialiteBac = libelleDeuxiemeSpecialiteBac;
  }


  public Bac mention(@jakarta.annotation.Nullable String mention) {
    this.mention = mention;
    return this;
  }

  /**
   * Le code de la mention du candidat issu de la nomenclature des Mentions obtenues au baccalauréat  Codes de la nomenclature sur 6 caractères. Préfixe des codes : MEN 
   * @return mention
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMention() {
    return mention;
  }


  @JsonProperty(JSON_PROPERTY_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMention(@jakarta.annotation.Nullable String mention) {
    this.mention = mention;
  }


  public Bac libelleMention(@jakarta.annotation.Nullable String libelleMention) {
    this.libelleMention = libelleMention;
    return this;
  }

  /**
   * Le libelle de la mention du candidat issu de la nomenclature des Mentions obtenues au baccalauréat 
   * @return libelleMention
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleMention() {
    return libelleMention;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_MENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleMention(@jakarta.annotation.Nullable String libelleMention) {
    this.libelleMention = libelleMention;
  }


  public Bac typeEtablissement(@jakarta.annotation.Nullable String typeEtablissement) {
    this.typeEtablissement = typeEtablissement;
    return this;
  }

  /**
   * Le type de l&#39;établissement dans lequel le diplôme a été obtenu  Les valeurs &#x60;F&#x60; ou &#x60;E&#x60; sont acceptées: * la valeur &#x60;F&#x60; correspond au type établissement d&#39;un établissement   français en France, * la valeur &#x60;E&#x60; correspond au type établissement d&#39;un établissement français   à l&#39;étranger ou d&#39;un établissement étranger. 
   * @return typeEtablissement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_ETABLISSEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTypeEtablissement() {
    return typeEtablissement;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_ETABLISSEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeEtablissement(@jakarta.annotation.Nullable String typeEtablissement) {
    this.typeEtablissement = typeEtablissement;
  }


  public Bac pays(@jakarta.annotation.Nullable String pays) {
    this.pays = pays;
    return this;
  }

  /**
   * Le code du pays délivrant le diplôme issu de la nomenclature Pays et nationalités. 
   * @return pays
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPays() {
    return pays;
  }


  @JsonProperty(JSON_PROPERTY_PAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPays(@jakarta.annotation.Nullable String pays) {
    this.pays = pays;
  }


  public Bac libellePays(@jakarta.annotation.Nullable String libellePays) {
    this.libellePays = libellePays;
    return this;
  }

  /**
   * Le libelle du pays délivrant le diplôme issu de la nomenclature Pays et nationalités. 
   * @return libellePays
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_PAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibellePays() {
    return libellePays;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_PAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibellePays(@jakarta.annotation.Nullable String libellePays) {
    this.libellePays = libellePays;
  }


  public Bac departement(@jakarta.annotation.Nullable String departement) {
    this.departement = departement;
    return this;
  }

  /**
   * Le code du département de l&#39;établissement dans lequel le diplôme a été obtenu issu de la nomenclature Départements.  Codes de la nomenclature sur 3 caractères. Ex : 001 &#x3D; AIN 
   * @return departement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPARTEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDepartement() {
    return departement;
  }


  @JsonProperty(JSON_PROPERTY_DEPARTEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDepartement(@jakarta.annotation.Nullable String departement) {
    this.departement = departement;
  }


  public Bac libelleDepartement(@jakarta.annotation.Nullable String libelleDepartement) {
    this.libelleDepartement = libelleDepartement;
    return this;
  }

  /**
   * Le libelle du département de l&#39;établissement dans lequel le diplôme a été obtenu issu de la nomenclature Départements. 
   * @return libelleDepartement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_DEPARTEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleDepartement() {
    return libelleDepartement;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_DEPARTEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleDepartement(@jakarta.annotation.Nullable String libelleDepartement) {
    this.libelleDepartement = libelleDepartement;
  }


  public Bac etablissement(@jakarta.annotation.Nullable String etablissement) {
    this.etablissement = etablissement;
    return this;
  }

  /**
   * Le numéro UAI de l&#39;établissement dans lequel le diplôme a été obtenu issu de la nomenclature Etablissements français.  Codes de la nomenclature &#x3D; code UAI 
   * @return etablissement
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ETABLISSEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEtablissement() {
    return etablissement;
  }


  @JsonProperty(JSON_PROPERTY_ETABLISSEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEtablissement(@jakarta.annotation.Nullable String etablissement) {
    this.etablissement = etablissement;
  }


  public Bac ine(@jakarta.annotation.Nullable String ine) {
    this.ine = ine;
    return this;
  }

  /**
   * le code INE de l&#39;étudiant
   * @return ine
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getIne() {
    return ine;
  }


  @JsonProperty(JSON_PROPERTY_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIne(@jakarta.annotation.Nullable String ine) {
    this.ine = ine;
  }


  public Bac statutIne(@jakarta.annotation.Nullable StatutIne statutIne) {
    this.statutIne = statutIne;
    return this;
  }

  /**
   * Get statutIne
   * @return statutIne
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUT_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StatutIne getStatutIne() {
    return statutIne;
  }


  @JsonProperty(JSON_PROPERTY_STATUT_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatutIne(@jakarta.annotation.Nullable StatutIne statutIne) {
    this.statutIne = statutIne;
  }


  public Bac codeErreurIne(@jakarta.annotation.Nullable String codeErreurIne) {
    this.codeErreurIne = codeErreurIne;
    return this;
  }

  /**
   * Valorisé si il y a eu une erreur lors de la vérification du numéro INE, et si un code erreur est disponible 
   * @return codeErreurIne
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_ERREUR_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCodeErreurIne() {
    return codeErreurIne;
  }


  @JsonProperty(JSON_PROPERTY_CODE_ERREUR_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeErreurIne(@jakarta.annotation.Nullable String codeErreurIne) {
    this.codeErreurIne = codeErreurIne;
  }


  public Bac messageErreurIne(@jakarta.annotation.Nullable String messageErreurIne) {
    this.messageErreurIne = messageErreurIne;
    return this;
  }

  /**
   * Valorisé si il y a eu une erreur lors de la vérification du numéro INE 
   * @return messageErreurIne
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSAGE_ERREUR_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMessageErreurIne() {
    return messageErreurIne;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_ERREUR_INE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageErreurIne(@jakarta.annotation.Nullable String messageErreurIne) {
    this.messageErreurIne = messageErreurIne;
  }


  public Bac dateDernierAppelInes(@jakarta.annotation.Nullable Date dateDernierAppelInes) {
    this.dateDernierAppelInes = dateDernierAppelInes;
    return this;
  }

  /**
   * Date de la dernière vérification INES 
   * @return dateDernierAppelInes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_DERNIER_APPEL_INES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Date getDateDernierAppelInes() {
    return dateDernierAppelInes;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DERNIER_APPEL_INES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateDernierAppelInes(@jakarta.annotation.Nullable Date dateDernierAppelInes) {
    this.dateDernierAppelInes = dateDernierAppelInes;
  }


  public Bac etablissementLibre(@jakarta.annotation.Nullable String etablissementLibre) {
    this.etablissementLibre = etablissementLibre;
    return this;
  }

  /**
   * Etablissement en saisie libre dans le cas - d&#39;un Titre admis en dispense, - ou par équivalence du baccalauréat, - ou d&#39;un Titre étranger, - ou baccalauréat international. 
   * @return etablissementLibre
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ETABLISSEMENT_LIBRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEtablissementLibre() {
    return etablissementLibre;
  }


  @JsonProperty(JSON_PROPERTY_ETABLISSEMENT_LIBRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEtablissementLibre(@jakarta.annotation.Nullable String etablissementLibre) {
    this.etablissementLibre = etablissementLibre;
  }


  public Bac detailTitre(@jakarta.annotation.Nullable String detailTitre) {
    this.detailTitre = detailTitre;
    return this;
  }

  /**
   * Précision du titre admis en dispense du baccalauréat (texte libre).  Valeur demandée lorsque l’on choisit le type ou série « 0032/Titre français admis en dispense » pour un titre d’accès à l’enseignement supérieur « TITRE admis en dispense ou par équivalence du baccalauréat ». 
   * @return detailTitre
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAIL_TITRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDetailTitre() {
    return detailTitre;
  }


  @JsonProperty(JSON_PROPERTY_DETAIL_TITRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetailTitre(@jakarta.annotation.Nullable String detailTitre) {
    this.detailTitre = detailTitre;
  }


  /**
   * Return true if this Bac object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bac bac = (Bac) o;
    return Objects.equals(this.titreAcces, bac.titreAcces) &&
        Objects.equals(this.anneeObtention, bac.anneeObtention) &&
        Objects.equals(this.serie, bac.serie) &&
        Objects.equals(this.libelleSerie, bac.libelleSerie) &&
        Objects.equals(this.premiereSpecialiteBac, bac.premiereSpecialiteBac) &&
        Objects.equals(this.libellePremiereSpecialiteBac, bac.libellePremiereSpecialiteBac) &&
        Objects.equals(this.deuxiemeSpecialiteBac, bac.deuxiemeSpecialiteBac) &&
        Objects.equals(this.libelleDeuxiemeSpecialiteBac, bac.libelleDeuxiemeSpecialiteBac) &&
        Objects.equals(this.mention, bac.mention) &&
        Objects.equals(this.libelleMention, bac.libelleMention) &&
        Objects.equals(this.typeEtablissement, bac.typeEtablissement) &&
        Objects.equals(this.pays, bac.pays) &&
        Objects.equals(this.libellePays, bac.libellePays) &&
        Objects.equals(this.departement, bac.departement) &&
        Objects.equals(this.libelleDepartement, bac.libelleDepartement) &&
        Objects.equals(this.etablissement, bac.etablissement) &&
        Objects.equals(this.ine, bac.ine) &&
        Objects.equals(this.statutIne, bac.statutIne) &&
        Objects.equals(this.codeErreurIne, bac.codeErreurIne) &&
        Objects.equals(this.messageErreurIne, bac.messageErreurIne) &&
        Objects.equals(this.dateDernierAppelInes, bac.dateDernierAppelInes) &&
        Objects.equals(this.etablissementLibre, bac.etablissementLibre) &&
        Objects.equals(this.detailTitre, bac.detailTitre);
  }

  @Override
  public int hashCode() {
    return Objects.hash(titreAcces, anneeObtention, serie, libelleSerie, premiereSpecialiteBac, libellePremiereSpecialiteBac, deuxiemeSpecialiteBac, libelleDeuxiemeSpecialiteBac, mention, libelleMention, typeEtablissement, pays, libellePays, departement, libelleDepartement, etablissement, ine, statutIne, codeErreurIne, messageErreurIne, dateDernierAppelInes, etablissementLibre, detailTitre);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bac {\n");
    sb.append("    titreAcces: ").append(toIndentedString(titreAcces)).append("\n");
    sb.append("    anneeObtention: ").append(toIndentedString(anneeObtention)).append("\n");
    sb.append("    serie: ").append(toIndentedString(serie)).append("\n");
    sb.append("    libelleSerie: ").append(toIndentedString(libelleSerie)).append("\n");
    sb.append("    premiereSpecialiteBac: ").append(toIndentedString(premiereSpecialiteBac)).append("\n");
    sb.append("    libellePremiereSpecialiteBac: ").append(toIndentedString(libellePremiereSpecialiteBac)).append("\n");
    sb.append("    deuxiemeSpecialiteBac: ").append(toIndentedString(deuxiemeSpecialiteBac)).append("\n");
    sb.append("    libelleDeuxiemeSpecialiteBac: ").append(toIndentedString(libelleDeuxiemeSpecialiteBac)).append("\n");
    sb.append("    mention: ").append(toIndentedString(mention)).append("\n");
    sb.append("    libelleMention: ").append(toIndentedString(libelleMention)).append("\n");
    sb.append("    typeEtablissement: ").append(toIndentedString(typeEtablissement)).append("\n");
    sb.append("    pays: ").append(toIndentedString(pays)).append("\n");
    sb.append("    libellePays: ").append(toIndentedString(libellePays)).append("\n");
    sb.append("    departement: ").append(toIndentedString(departement)).append("\n");
    sb.append("    libelleDepartement: ").append(toIndentedString(libelleDepartement)).append("\n");
    sb.append("    etablissement: ").append(toIndentedString(etablissement)).append("\n");
    sb.append("    ine: ").append(toIndentedString(ine)).append("\n");
    sb.append("    statutIne: ").append(toIndentedString(statutIne)).append("\n");
    sb.append("    codeErreurIne: ").append(toIndentedString(codeErreurIne)).append("\n");
    sb.append("    messageErreurIne: ").append(toIndentedString(messageErreurIne)).append("\n");
    sb.append("    dateDernierAppelInes: ").append(toIndentedString(dateDernierAppelInes)).append("\n");
    sb.append("    etablissementLibre: ").append(toIndentedString(etablissementLibre)).append("\n");
    sb.append("    detailTitre: ").append(toIndentedString(detailTitre)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `titreAcces` to the URL query string
    if (getTitreAcces() != null) {
      joiner.add(String.format("%stitreAcces%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTitreAcces()))));
    }

    // add `anneeObtention` to the URL query string
    if (getAnneeObtention() != null) {
      joiner.add(String.format("%sanneeObtention%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAnneeObtention()))));
    }

    // add `serie` to the URL query string
    if (getSerie() != null) {
      joiner.add(String.format("%sserie%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSerie()))));
    }

    // add `libelleSerie` to the URL query string
    if (getLibelleSerie() != null) {
      joiner.add(String.format("%slibelleSerie%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibelleSerie()))));
    }

    // add `premiereSpecialiteBac` to the URL query string
    if (getPremiereSpecialiteBac() != null) {
      joiner.add(String.format("%spremiereSpecialiteBac%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPremiereSpecialiteBac()))));
    }

    // add `libellePremiereSpecialiteBac` to the URL query string
    if (getLibellePremiereSpecialiteBac() != null) {
      joiner.add(String.format("%slibellePremiereSpecialiteBac%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibellePremiereSpecialiteBac()))));
    }

    // add `deuxiemeSpecialiteBac` to the URL query string
    if (getDeuxiemeSpecialiteBac() != null) {
      joiner.add(String.format("%sdeuxiemeSpecialiteBac%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDeuxiemeSpecialiteBac()))));
    }

    // add `libelleDeuxiemeSpecialiteBac` to the URL query string
    if (getLibelleDeuxiemeSpecialiteBac() != null) {
      joiner.add(String.format("%slibelleDeuxiemeSpecialiteBac%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibelleDeuxiemeSpecialiteBac()))));
    }

    // add `mention` to the URL query string
    if (getMention() != null) {
      joiner.add(String.format("%smention%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMention()))));
    }

    // add `libelleMention` to the URL query string
    if (getLibelleMention() != null) {
      joiner.add(String.format("%slibelleMention%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibelleMention()))));
    }

    // add `typeEtablissement` to the URL query string
    if (getTypeEtablissement() != null) {
      joiner.add(String.format("%stypeEtablissement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTypeEtablissement()))));
    }

    // add `pays` to the URL query string
    if (getPays() != null) {
      joiner.add(String.format("%spays%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPays()))));
    }

    // add `libellePays` to the URL query string
    if (getLibellePays() != null) {
      joiner.add(String.format("%slibellePays%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibellePays()))));
    }

    // add `departement` to the URL query string
    if (getDepartement() != null) {
      joiner.add(String.format("%sdepartement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDepartement()))));
    }

    // add `libelleDepartement` to the URL query string
    if (getLibelleDepartement() != null) {
      joiner.add(String.format("%slibelleDepartement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibelleDepartement()))));
    }

    // add `etablissement` to the URL query string
    if (getEtablissement() != null) {
      joiner.add(String.format("%setablissement%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEtablissement()))));
    }

    // add `ine` to the URL query string
    if (getIne() != null) {
      joiner.add(String.format("%sine%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIne()))));
    }

    // add `statutIne` to the URL query string
    if (getStatutIne() != null) {
      joiner.add(String.format("%sstatutIne%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatutIne()))));
    }

    // add `codeErreurIne` to the URL query string
    if (getCodeErreurIne() != null) {
      joiner.add(String.format("%scodeErreurIne%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCodeErreurIne()))));
    }

    // add `messageErreurIne` to the URL query string
    if (getMessageErreurIne() != null) {
      joiner.add(String.format("%smessageErreurIne%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMessageErreurIne()))));
    }

    // add `dateDernierAppelInes` to the URL query string
    if (getDateDernierAppelInes() != null) {
      joiner.add(String.format("%sdateDernierAppelInes%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDateDernierAppelInes()))));
    }

    // add `etablissementLibre` to the URL query string
    if (getEtablissementLibre() != null) {
      joiner.add(String.format("%setablissementLibre%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEtablissementLibre()))));
    }

    // add `detailTitre` to the URL query string
    if (getDetailTitre() != null) {
      joiner.add(String.format("%sdetailTitre%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDetailTitre()))));
    }

    return joiner.toString();
  }
}

