/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 24.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.math.BigDecimal;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * SituationPrecedente
 */
@JsonPropertyOrder({
  SituationPrecedente.JSON_PROPERTY_ANNEE_PRECEDENTE,
  SituationPrecedente.JSON_PROPERTY_SITUATION_PRECEDENTE,
  SituationPrecedente.JSON_PROPERTY_ANNEE_OBTENTION_DU_DERNIER_DIPLOME,
  SituationPrecedente.JSON_PROPERTY_DERNIER_DIPLOME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-23T10:43:17.979817+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
public class SituationPrecedente {
  public static final String JSON_PROPERTY_ANNEE_PRECEDENTE = "anneePrecedente";
  private BigDecimal anneePrecedente;

  public static final String JSON_PROPERTY_SITUATION_PRECEDENTE = "situationPrecedente";
  private SituationAnneePrecedente situationPrecedente;

  public static final String JSON_PROPERTY_ANNEE_OBTENTION_DU_DERNIER_DIPLOME = "anneeObtentionDuDernierDiplome";
  private BigDecimal anneeObtentionDuDernierDiplome;

  public static final String JSON_PROPERTY_DERNIER_DIPLOME = "dernierDiplome";
  private String dernierDiplome;

  public SituationPrecedente() { 
  }

  public SituationPrecedente anneePrecedente(BigDecimal anneePrecedente) {
    this.anneePrecedente = anneePrecedente;
    return this;
  }

  /**
   * L&#39;année universitaire précédant l&#39;inscription en cours au format AAAA
   * @return anneePrecedente
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNEE_PRECEDENTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getAnneePrecedente() {
    return anneePrecedente;
  }


  @JsonProperty(JSON_PROPERTY_ANNEE_PRECEDENTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnneePrecedente(BigDecimal anneePrecedente) {
    this.anneePrecedente = anneePrecedente;
  }


  public SituationPrecedente situationPrecedente(SituationAnneePrecedente situationPrecedente) {
    this.situationPrecedente = situationPrecedente;
    return this;
  }

  /**
   * Get situationPrecedente
   * @return situationPrecedente
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITUATION_PRECEDENTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SituationAnneePrecedente getSituationPrecedente() {
    return situationPrecedente;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_PRECEDENTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSituationPrecedente(SituationAnneePrecedente situationPrecedente) {
    this.situationPrecedente = situationPrecedente;
  }


  public SituationPrecedente anneeObtentionDuDernierDiplome(BigDecimal anneeObtentionDuDernierDiplome) {
    this.anneeObtentionDuDernierDiplome = anneeObtentionDuDernierDiplome;
    return this;
  }

  /**
   * L&#39;année d&#39;obtention du dernier diplôme au format AAAA
   * @return anneeObtentionDuDernierDiplome
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNEE_OBTENTION_DU_DERNIER_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BigDecimal getAnneeObtentionDuDernierDiplome() {
    return anneeObtentionDuDernierDiplome;
  }


  @JsonProperty(JSON_PROPERTY_ANNEE_OBTENTION_DU_DERNIER_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnneeObtentionDuDernierDiplome(BigDecimal anneeObtentionDuDernierDiplome) {
    this.anneeObtentionDuDernierDiplome = anneeObtentionDuDernierDiplome;
  }


  public SituationPrecedente dernierDiplome(String dernierDiplome) {
    this.dernierDiplome = dernierDiplome;
    return this;
  }

  /**
   * Le code du type du dernier diplôme obtenu issu de la nomenclature Types du dernier diplôme obtenu.  Codes de la nomenclature sur 6 caractères. Préfixe des codes : DDO 
   * @return dernierDiplome
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DERNIER_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDernierDiplome() {
    return dernierDiplome;
  }


  @JsonProperty(JSON_PROPERTY_DERNIER_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDernierDiplome(String dernierDiplome) {
    this.dernierDiplome = dernierDiplome;
  }


  /**
   * Return true if this SituationPrecedente object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SituationPrecedente situationPrecedente = (SituationPrecedente) o;
    return Objects.equals(this.anneePrecedente, situationPrecedente.anneePrecedente) &&
        Objects.equals(this.situationPrecedente, situationPrecedente.situationPrecedente) &&
        Objects.equals(this.anneeObtentionDuDernierDiplome, situationPrecedente.anneeObtentionDuDernierDiplome) &&
        Objects.equals(this.dernierDiplome, situationPrecedente.dernierDiplome);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anneePrecedente, situationPrecedente, anneeObtentionDuDernierDiplome, dernierDiplome);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SituationPrecedente {\n");
    sb.append("    anneePrecedente: ").append(toIndentedString(anneePrecedente)).append("\n");
    sb.append("    situationPrecedente: ").append(toIndentedString(situationPrecedente)).append("\n");
    sb.append("    anneeObtentionDuDernierDiplome: ").append(toIndentedString(anneeObtentionDuDernierDiplome)).append("\n");
    sb.append("    dernierDiplome: ").append(toIndentedString(dernierDiplome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `anneePrecedente` to the URL query string
    if (getAnneePrecedente() != null) {
      joiner.add(String.format("%sanneePrecedente%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAnneePrecedente()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `situationPrecedente` to the URL query string
    if (getSituationPrecedente() != null) {
      joiner.add(getSituationPrecedente().toUrlQueryString(prefix + "situationPrecedente" + suffix));
    }

    // add `anneeObtentionDuDernierDiplome` to the URL query string
    if (getAnneeObtentionDuDernierDiplome() != null) {
      joiner.add(String.format("%sanneeObtentionDuDernierDiplome%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAnneeObtentionDuDernierDiplome()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dernierDiplome` to the URL query string
    if (getDernierDiplome() != null) {
      joiner.add(String.format("%sdernierDiplome%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDernierDiplome()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

