/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;
import org.esupportail.referentiel.pcscol.invoker.JSON;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * DemandeDeContactSimple
 */
@JsonPropertyOrder({
  DemandeDeContactSimple.JSON_PROPERTY_EST1,
  DemandeDeContactSimple.JSON_PROPERTY_CODE,
  DemandeDeContactSimple.JSON_PROPERTY_CODE_STRUCTURE,
  DemandeDeContactSimple.JSON_PROPERTY_LIBELLE_AFFICHAGE,
  DemandeDeContactSimple.JSON_PROPERTY_CANAL_COMMUNICATION,
  DemandeDeContactSimple.JSON_PROPERTY_TEMOIN_SAISIE,
  DemandeDeContactSimple.JSON_PROPERTY_TEMOIN_SAISIE_PROPRIETAIRE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
@JsonIgnoreProperties(
  value = "est1", // ignore manually set est1, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the est1 to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "est1", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = DemandeDeContact.class, name = "DemandeDeContact"),
})

public class DemandeDeContactSimple {
  public static final String JSON_PROPERTY_EST1 = "est1";
  @jakarta.annotation.Nonnull
  private String est1;

  public static final String JSON_PROPERTY_CODE = "code";
  @jakarta.annotation.Nonnull
  private String code;

  public static final String JSON_PROPERTY_CODE_STRUCTURE = "codeStructure";
  @jakarta.annotation.Nonnull
  private String codeStructure;

  public static final String JSON_PROPERTY_LIBELLE_AFFICHAGE = "libelleAffichage";
  @jakarta.annotation.Nonnull
  private String libelleAffichage;

  /**
   * le canal de communication
   */
  public enum CanalCommunicationEnum {
    MAIL(String.valueOf("MAIL")),
    
    TEL(String.valueOf("TEL")),
    
    ADRESSE(String.valueOf("ADRESSE"));

    private String value;

    CanalCommunicationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CanalCommunicationEnum fromValue(String value) {
      for (CanalCommunicationEnum b : CanalCommunicationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CANAL_COMMUNICATION = "canalCommunication";
  @jakarta.annotation.Nonnull
  private CanalCommunicationEnum canalCommunication;

  public static final String JSON_PROPERTY_TEMOIN_SAISIE = "temoinSaisie";
  @jakarta.annotation.Nonnull
  private TemoinSaisie temoinSaisie;

  public static final String JSON_PROPERTY_TEMOIN_SAISIE_PROPRIETAIRE = "temoinSaisieProprietaire";
  @jakarta.annotation.Nonnull
  private TemoinSaisie temoinSaisieProprietaire;

  public DemandeDeContactSimple() { 
  }

  public DemandeDeContactSimple est1(@jakarta.annotation.Nonnull String est1) {
    this.est1 = est1;
    return this;
  }

  /**
   * Get est1
   * @return est1
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EST1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEst1() {
    return est1;
  }


  @JsonProperty(JSON_PROPERTY_EST1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEst1(@jakarta.annotation.Nonnull String est1) {
    this.est1 = est1;
  }


  public DemandeDeContactSimple code(@jakarta.annotation.Nonnull String code) {
    this.code = code;
    return this;
  }

  /**
   * Le code metier en saisie libre
   * @return code
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(@jakarta.annotation.Nonnull String code) {
    this.code = code;
  }


  public DemandeDeContactSimple codeStructure(@jakarta.annotation.Nonnull String codeStructure) {
    this.codeStructure = codeStructure;
    return this;
  }

  /**
   * Le code de l&#39;établissement (structure)
   * @return codeStructure
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCodeStructure() {
    return codeStructure;
  }


  @JsonProperty(JSON_PROPERTY_CODE_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCodeStructure(@jakarta.annotation.Nonnull String codeStructure) {
    this.codeStructure = codeStructure;
  }


  public DemandeDeContactSimple libelleAffichage(@jakarta.annotation.Nonnull String libelleAffichage) {
    this.libelleAffichage = libelleAffichage;
    return this;
  }

  /**
   * Le libellé d&#39;affichage
   * @return libelleAffichage
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LIBELLE_AFFICHAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLibelleAffichage() {
    return libelleAffichage;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_AFFICHAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLibelleAffichage(@jakarta.annotation.Nonnull String libelleAffichage) {
    this.libelleAffichage = libelleAffichage;
  }


  public DemandeDeContactSimple canalCommunication(@jakarta.annotation.Nonnull CanalCommunicationEnum canalCommunication) {
    this.canalCommunication = canalCommunication;
    return this;
  }

  /**
   * le canal de communication
   * @return canalCommunication
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CANAL_COMMUNICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CanalCommunicationEnum getCanalCommunication() {
    return canalCommunication;
  }


  @JsonProperty(JSON_PROPERTY_CANAL_COMMUNICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanalCommunication(@jakarta.annotation.Nonnull CanalCommunicationEnum canalCommunication) {
    this.canalCommunication = canalCommunication;
  }


  public DemandeDeContactSimple temoinSaisie(@jakarta.annotation.Nonnull TemoinSaisie temoinSaisie) {
    this.temoinSaisie = temoinSaisie;
    return this;
  }

  /**
   * Get temoinSaisie
   * @return temoinSaisie
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMOIN_SAISIE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TemoinSaisie getTemoinSaisie() {
    return temoinSaisie;
  }


  @JsonProperty(JSON_PROPERTY_TEMOIN_SAISIE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemoinSaisie(@jakarta.annotation.Nonnull TemoinSaisie temoinSaisie) {
    this.temoinSaisie = temoinSaisie;
  }


  public DemandeDeContactSimple temoinSaisieProprietaire(@jakarta.annotation.Nonnull TemoinSaisie temoinSaisieProprietaire) {
    this.temoinSaisieProprietaire = temoinSaisieProprietaire;
    return this;
  }

  /**
   * Get temoinSaisieProprietaire
   * @return temoinSaisieProprietaire
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMOIN_SAISIE_PROPRIETAIRE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TemoinSaisie getTemoinSaisieProprietaire() {
    return temoinSaisieProprietaire;
  }


  @JsonProperty(JSON_PROPERTY_TEMOIN_SAISIE_PROPRIETAIRE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemoinSaisieProprietaire(@jakarta.annotation.Nonnull TemoinSaisie temoinSaisieProprietaire) {
    this.temoinSaisieProprietaire = temoinSaisieProprietaire;
  }


  /**
   * Return true if this DemandeDeContactSimple object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemandeDeContactSimple demandeDeContactSimple = (DemandeDeContactSimple) o;
    return Objects.equals(this.est1, demandeDeContactSimple.est1) &&
        Objects.equals(this.code, demandeDeContactSimple.code) &&
        Objects.equals(this.codeStructure, demandeDeContactSimple.codeStructure) &&
        Objects.equals(this.libelleAffichage, demandeDeContactSimple.libelleAffichage) &&
        Objects.equals(this.canalCommunication, demandeDeContactSimple.canalCommunication) &&
        Objects.equals(this.temoinSaisie, demandeDeContactSimple.temoinSaisie) &&
        Objects.equals(this.temoinSaisieProprietaire, demandeDeContactSimple.temoinSaisieProprietaire);
  }

  @Override
  public int hashCode() {
    return Objects.hash(est1, code, codeStructure, libelleAffichage, canalCommunication, temoinSaisie, temoinSaisieProprietaire);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemandeDeContactSimple {\n");
    sb.append("    est1: ").append(toIndentedString(est1)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    codeStructure: ").append(toIndentedString(codeStructure)).append("\n");
    sb.append("    libelleAffichage: ").append(toIndentedString(libelleAffichage)).append("\n");
    sb.append("    canalCommunication: ").append(toIndentedString(canalCommunication)).append("\n");
    sb.append("    temoinSaisie: ").append(toIndentedString(temoinSaisie)).append("\n");
    sb.append("    temoinSaisieProprietaire: ").append(toIndentedString(temoinSaisieProprietaire)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `est1` to the URL query string
    if (getEst1() != null) {
      joiner.add(String.format("%sest1%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEst1()))));
    }

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%scode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCode()))));
    }

    // add `codeStructure` to the URL query string
    if (getCodeStructure() != null) {
      joiner.add(String.format("%scodeStructure%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCodeStructure()))));
    }

    // add `libelleAffichage` to the URL query string
    if (getLibelleAffichage() != null) {
      joiner.add(String.format("%slibelleAffichage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLibelleAffichage()))));
    }

    // add `canalCommunication` to the URL query string
    if (getCanalCommunication() != null) {
      joiner.add(String.format("%scanalCommunication%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCanalCommunication()))));
    }

    // add `temoinSaisie` to the URL query string
    if (getTemoinSaisie() != null) {
      joiner.add(String.format("%stemoinSaisie%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTemoinSaisie()))));
    }

    // add `temoinSaisieProprietaire` to the URL query string
    if (getTemoinSaisieProprietaire() != null) {
      joiner.add(String.format("%stemoinSaisieProprietaire%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTemoinSaisieProprietaire()))));
    }

    return joiner.toString();
  }
static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("DemandeDeContact", DemandeDeContact.class);
  mappings.put("DemandeDeContactSimple", DemandeDeContactSimple.class);
  JSON.registerDiscriminator(DemandeDeContactSimple.class, "est1", mappings);
}
}

