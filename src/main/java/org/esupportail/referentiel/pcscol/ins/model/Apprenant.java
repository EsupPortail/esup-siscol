/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * Les données de l&#39;apprenant
 */
@JsonPropertyOrder({
  Apprenant.JSON_PROPERTY_CODE,
  Apprenant.JSON_PROPERTY_ETAT_CIVIL,
  Apprenant.JSON_PROPERTY_NAISSANCE,
  Apprenant.JSON_PROPERTY_SITUATION_PERSONNELLE,
  Apprenant.JSON_PROPERTY_PROFESSION,
  Apprenant.JSON_PROPERTY_CONTACTS,
  Apprenant.JSON_PROPERTY_BAC,
  Apprenant.JSON_PROPERTY_PREMIERES_INSCRIPTIONS,
  Apprenant.JSON_PROPERTY_DATE_CONTEXTE_APPRENANT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class Apprenant {
  public static final String JSON_PROPERTY_CODE = "code";
  @jakarta.annotation.Nullable
  private String code;

  public static final String JSON_PROPERTY_ETAT_CIVIL = "etatCivil";
  @jakarta.annotation.Nullable
  private EtatCivil etatCivil;

  public static final String JSON_PROPERTY_NAISSANCE = "naissance";
  @jakarta.annotation.Nullable
  private Naissance naissance;

  public static final String JSON_PROPERTY_SITUATION_PERSONNELLE = "situationPersonnelle";
  @jakarta.annotation.Nullable
  private SituationPersonnelleApprenant situationPersonnelle;

  public static final String JSON_PROPERTY_PROFESSION = "profession";
  @jakarta.annotation.Nullable
  private Profession profession;

  public static final String JSON_PROPERTY_CONTACTS = "contacts";
  @jakarta.annotation.Nullable
  private List<ContactComplet> contacts = new ArrayList<>();

  public static final String JSON_PROPERTY_BAC = "bac";
  @jakarta.annotation.Nullable
  private Bac bac;

  public static final String JSON_PROPERTY_PREMIERES_INSCRIPTIONS = "premieresInscriptions";
  @jakarta.annotation.Nullable
  private PremieresInscriptions premieresInscriptions;

  public static final String JSON_PROPERTY_DATE_CONTEXTE_APPRENANT = "dateContexteApprenant";
  @jakarta.annotation.Nullable
  private Date dateContexteApprenant;

  public Apprenant() { 
  }

  public Apprenant code(@jakarta.annotation.Nullable String code) {
    this.code = code;
    return this;
  }

  /**
   * le code de l&#39;apprenant
   * @return code
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(@jakarta.annotation.Nullable String code) {
    this.code = code;
  }


  public Apprenant etatCivil(@jakarta.annotation.Nullable EtatCivil etatCivil) {
    this.etatCivil = etatCivil;
    return this;
  }

  /**
   * Get etatCivil
   * @return etatCivil
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ETAT_CIVIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EtatCivil getEtatCivil() {
    return etatCivil;
  }


  @JsonProperty(JSON_PROPERTY_ETAT_CIVIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEtatCivil(@jakarta.annotation.Nullable EtatCivil etatCivil) {
    this.etatCivil = etatCivil;
  }


  public Apprenant naissance(@jakarta.annotation.Nullable Naissance naissance) {
    this.naissance = naissance;
    return this;
  }

  /**
   * Get naissance
   * @return naissance
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Naissance getNaissance() {
    return naissance;
  }


  @JsonProperty(JSON_PROPERTY_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNaissance(@jakarta.annotation.Nullable Naissance naissance) {
    this.naissance = naissance;
  }


  public Apprenant situationPersonnelle(@jakarta.annotation.Nullable SituationPersonnelleApprenant situationPersonnelle) {
    this.situationPersonnelle = situationPersonnelle;
    return this;
  }

  /**
   * Get situationPersonnelle
   * @return situationPersonnelle
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SITUATION_PERSONNELLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SituationPersonnelleApprenant getSituationPersonnelle() {
    return situationPersonnelle;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_PERSONNELLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSituationPersonnelle(@jakarta.annotation.Nullable SituationPersonnelleApprenant situationPersonnelle) {
    this.situationPersonnelle = situationPersonnelle;
  }


  public Apprenant profession(@jakarta.annotation.Nullable Profession profession) {
    this.profession = profession;
    return this;
  }

  /**
   * Get profession
   * @return profession
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Profession getProfession() {
    return profession;
  }


  @JsonProperty(JSON_PROPERTY_PROFESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfession(@jakarta.annotation.Nullable Profession profession) {
    this.profession = profession;
  }


  public Apprenant contacts(@jakarta.annotation.Nullable List<ContactComplet> contacts) {
    this.contacts = contacts;
    return this;
  }

  public Apprenant addContactsItem(ContactComplet contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

  /**
   * Liste des contacts sous forme d&#39;objet, avec le code du contact pour clé principale
   * @return contacts
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ContactComplet> getContacts() {
    return contacts;
  }


  @JsonProperty(JSON_PROPERTY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContacts(@jakarta.annotation.Nullable List<ContactComplet> contacts) {
    this.contacts = contacts;
  }


  public Apprenant bac(@jakarta.annotation.Nullable Bac bac) {
    this.bac = bac;
    return this;
  }

  /**
   * Get bac
   * @return bac
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Bac getBac() {
    return bac;
  }


  @JsonProperty(JSON_PROPERTY_BAC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBac(@jakarta.annotation.Nullable Bac bac) {
    this.bac = bac;
  }


  public Apprenant premieresInscriptions(@jakarta.annotation.Nullable PremieresInscriptions premieresInscriptions) {
    this.premieresInscriptions = premieresInscriptions;
    return this;
  }

  /**
   * Get premieresInscriptions
   * @return premieresInscriptions
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREMIERES_INSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PremieresInscriptions getPremieresInscriptions() {
    return premieresInscriptions;
  }


  @JsonProperty(JSON_PROPERTY_PREMIERES_INSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPremieresInscriptions(@jakarta.annotation.Nullable PremieresInscriptions premieresInscriptions) {
    this.premieresInscriptions = premieresInscriptions;
  }


  public Apprenant dateContexteApprenant(@jakarta.annotation.Nullable Date dateContexteApprenant) {
    this.dateContexteApprenant = dateContexteApprenant;
    return this;
  }

  /**
   * date de contexte de l&#39;apprenant
   * @return dateContexteApprenant
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_CONTEXTE_APPRENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Date getDateContexteApprenant() {
    return dateContexteApprenant;
  }


  @JsonProperty(JSON_PROPERTY_DATE_CONTEXTE_APPRENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateContexteApprenant(@jakarta.annotation.Nullable Date dateContexteApprenant) {
    this.dateContexteApprenant = dateContexteApprenant;
  }


  /**
   * Return true if this Apprenant object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Apprenant apprenant = (Apprenant) o;
    return Objects.equals(this.code, apprenant.code) &&
        Objects.equals(this.etatCivil, apprenant.etatCivil) &&
        Objects.equals(this.naissance, apprenant.naissance) &&
        Objects.equals(this.situationPersonnelle, apprenant.situationPersonnelle) &&
        Objects.equals(this.profession, apprenant.profession) &&
        Objects.equals(this.contacts, apprenant.contacts) &&
        Objects.equals(this.bac, apprenant.bac) &&
        Objects.equals(this.premieresInscriptions, apprenant.premieresInscriptions) &&
        Objects.equals(this.dateContexteApprenant, apprenant.dateContexteApprenant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, etatCivil, naissance, situationPersonnelle, profession, contacts, bac, premieresInscriptions, dateContexteApprenant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Apprenant {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    etatCivil: ").append(toIndentedString(etatCivil)).append("\n");
    sb.append("    naissance: ").append(toIndentedString(naissance)).append("\n");
    sb.append("    situationPersonnelle: ").append(toIndentedString(situationPersonnelle)).append("\n");
    sb.append("    profession: ").append(toIndentedString(profession)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    bac: ").append(toIndentedString(bac)).append("\n");
    sb.append("    premieresInscriptions: ").append(toIndentedString(premieresInscriptions)).append("\n");
    sb.append("    dateContexteApprenant: ").append(toIndentedString(dateContexteApprenant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%scode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCode()))));
    }

    // add `etatCivil` to the URL query string
    if (getEtatCivil() != null) {
      joiner.add(getEtatCivil().toUrlQueryString(prefix + "etatCivil" + suffix));
    }

    // add `naissance` to the URL query string
    if (getNaissance() != null) {
      joiner.add(getNaissance().toUrlQueryString(prefix + "naissance" + suffix));
    }

    // add `situationPersonnelle` to the URL query string
    if (getSituationPersonnelle() != null) {
      joiner.add(getSituationPersonnelle().toUrlQueryString(prefix + "situationPersonnelle" + suffix));
    }

    // add `profession` to the URL query string
    if (getProfession() != null) {
      joiner.add(getProfession().toUrlQueryString(prefix + "profession" + suffix));
    }

    // add `contacts` to the URL query string
    if (getContacts() != null) {
      for (int i = 0; i < getContacts().size(); i++) {
        if (getContacts().get(i) != null) {
          joiner.add(getContacts().get(i).toUrlQueryString(String.format("%scontacts%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `bac` to the URL query string
    if (getBac() != null) {
      joiner.add(getBac().toUrlQueryString(prefix + "bac" + suffix));
    }

    // add `premieresInscriptions` to the URL query string
    if (getPremieresInscriptions() != null) {
      joiner.add(getPremieresInscriptions().toUrlQueryString(prefix + "premieresInscriptions" + suffix));
    }

    // add `dateContexteApprenant` to the URL query string
    if (getDateContexteApprenant() != null) {
      joiner.add(String.format("%sdateContexteApprenant%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDateContexteApprenant()))));
    }

    return joiner.toString();
  }
}

