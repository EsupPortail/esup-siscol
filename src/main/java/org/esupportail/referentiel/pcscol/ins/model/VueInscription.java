/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 24.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * VueInscription
 */
@JsonPropertyOrder({
  VueInscription.JSON_PROPERTY_U_A_I,
  VueInscription.JSON_PROPERTY_CODE_APPRENANT,
  VueInscription.JSON_PROPERTY_DATE_INSCRIPTION,
  VueInscription.JSON_PROPERTY_DERNIERE_MODIFICATION,
  VueInscription.JSON_PROPERTY_I_N_E,
  VueInscription.JSON_PROPERTY_CIVILITE,
  VueInscription.JSON_PROPERTY_NOM_USAGE,
  VueInscription.JSON_PROPERTY_NOM_FAMILLE,
  VueInscription.JSON_PROPERTY_PRENOM,
  VueInscription.JSON_PROPERTY_DATE_DE_NAISSANCE,
  VueInscription.JSON_PROPERTY_NATIONALITE,
  VueInscription.JSON_PROPERTY_DROIT_PHOTO,
  VueInscription.JSON_PROPERTY_PHOTO,
  VueInscription.JSON_PROPERTY_REGIME,
  VueInscription.JSON_PROPERTY_BOURSES,
  VueInscription.JSON_PROPERTY_BOURSES_COMPLETES,
  VueInscription.JSON_PROPERTY_PROFILS_EXONERANTS,
  VueInscription.JSON_PROPERTY_MOBILITE,
  VueInscription.JSON_PROPERTY_STATUT_PAIEMENT,
  VueInscription.JSON_PROPERTY_STATUT_INSCRIPTION,
  VueInscription.JSON_PROPERTY_INSCRIPTION_PRINCIPALE,
  VueInscription.JSON_PROPERTY_FORMATION,
  VueInscription.JSON_PROPERTY_ANNEE_UNIVERSITAIRE,
  VueInscription.JSON_PROPERTY_PERIODE,
  VueInscription.JSON_PROPERTY_CHEMIN,
  VueInscription.JSON_PROPERTY_UA_I_STRUCTURE_PRINCIPALE,
  VueInscription.JSON_PROPERTY_CODE_DIPLOME_S_I_S_E,
  VueInscription.JSON_PROPERTY_ADRESSES,
  VueInscription.JSON_PROPERTY_MELS,
  VueInscription.JSON_PROPERTY_TELEPHONES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-23T10:43:17.979817+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
public class VueInscription {
  public static final String JSON_PROPERTY_U_A_I = "UAI";
  private String UAI;

  public static final String JSON_PROPERTY_CODE_APPRENANT = "codeApprenant";
  private String codeApprenant;

  public static final String JSON_PROPERTY_DATE_INSCRIPTION = "dateInscription";
  private String dateInscription;

  public static final String JSON_PROPERTY_DERNIERE_MODIFICATION = "derniereModification";
  private Long derniereModification;

  public static final String JSON_PROPERTY_I_N_E = "INE";
  private String INE;

  /**
   * La civilité M ou F de l&#39;apprenant⋅e
   */
  public enum CiviliteEnum {
    F("F"),
    
    M("M");

    private String value;

    CiviliteEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CiviliteEnum fromValue(String value) {
      for (CiviliteEnum b : CiviliteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CIVILITE = "civilite";
  private CiviliteEnum civilite;

  public static final String JSON_PROPERTY_NOM_USAGE = "nomUsage";
  private String nomUsage;

  public static final String JSON_PROPERTY_NOM_FAMILLE = "nomFamille";
  private String nomFamille;

  public static final String JSON_PROPERTY_PRENOM = "prenom";
  private String prenom;

  public static final String JSON_PROPERTY_DATE_DE_NAISSANCE = "dateDeNaissance";
  private String dateDeNaissance;

  public static final String JSON_PROPERTY_NATIONALITE = "nationalite";
  private String nationalite;

  public static final String JSON_PROPERTY_DROIT_PHOTO = "droitPhoto";
  private Boolean droitPhoto;

  public static final String JSON_PROPERTY_PHOTO = "photo";
  private byte[] photo;

  public static final String JSON_PROPERTY_REGIME = "regime";
  private String regime;

  public static final String JSON_PROPERTY_BOURSES = "bourses";
  private List<String> bourses = new ArrayList<>();

  public static final String JSON_PROPERTY_BOURSES_COMPLETES = "boursesCompletes";
  private List<VueBourse> boursesCompletes = new ArrayList<>();

  public static final String JSON_PROPERTY_PROFILS_EXONERANTS = "profilsExonerants";
  private List<VueProfilExonerant> profilsExonerants = new ArrayList<>();

  /**
   * Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)
   */
  public enum MobiliteEnum {
    SANS("SANS"),
    
    ENTRANTE("ENTRANTE"),
    
    SORTANTE("SORTANTE");

    private String value;

    MobiliteEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MobiliteEnum fromValue(String value) {
      for (MobiliteEnum b : MobiliteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MOBILITE = "mobilite";
  private MobiliteEnum mobilite;

  /**
   * Statut du paiement généré à la confirmation du paiement
   */
  public enum StatutPaiementEnum {
    NON_PAYE("non_paye"),
    
    EN_ATTENTE("en_attente"),
    
    PAYE("paye"),
    
    VALIDE("valide");

    private String value;

    StatutPaiementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatutPaiementEnum fromValue(String value) {
      for (StatutPaiementEnum b : StatutPaiementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUT_PAIEMENT = "statutPaiement";
  private StatutPaiementEnum statutPaiement;

  /**
   * Statut validé ou annulé de l&#39;inscription
   */
  public enum StatutInscriptionEnum {
    VALIDE("valide"),
    
    ANNULEE("annulee");

    private String value;

    StatutInscriptionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatutInscriptionEnum fromValue(String value) {
      for (StatutInscriptionEnum b : StatutInscriptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUT_INSCRIPTION = "statutInscription";
  private StatutInscriptionEnum statutInscription;

  public static final String JSON_PROPERTY_INSCRIPTION_PRINCIPALE = "inscriptionPrincipale";
  private Boolean inscriptionPrincipale;

  public static final String JSON_PROPERTY_FORMATION = "formation";
  private String formation;

  public static final String JSON_PROPERTY_ANNEE_UNIVERSITAIRE = "anneeUniversitaire";
  private Integer anneeUniversitaire;

  public static final String JSON_PROPERTY_PERIODE = "periode";
  private String periode;

  public static final String JSON_PROPERTY_CHEMIN = "chemin";
  private List<VueCheminCible> chemin = new ArrayList<>();

  public static final String JSON_PROPERTY_UA_I_STRUCTURE_PRINCIPALE = "UAIStructurePrincipale";
  private String uaIStructurePrincipale;

  public static final String JSON_PROPERTY_CODE_DIPLOME_S_I_S_E = "codeDiplomeSISE";
  private String codeDiplomeSISE;

  public static final String JSON_PROPERTY_ADRESSES = "adresses";
  private List<VueContactAdresse> adresses = new ArrayList<>();

  public static final String JSON_PROPERTY_MELS = "mels";
  private List<VueContactMel> mels = new ArrayList<>();

  public static final String JSON_PROPERTY_TELEPHONES = "telephones";
  private List<VueContactTelephone> telephones = new ArrayList<>();

  public VueInscription() { 
  }

  public VueInscription UAI(String UAI) {
    this.UAI = UAI;
    return this;
  }

  /**
   * Le code UAI
   * @return UAI
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_U_A_I)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getUAI() {
    return UAI;
  }


  @JsonProperty(JSON_PROPERTY_U_A_I)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUAI(String UAI) {
    this.UAI = UAI;
  }


  public VueInscription codeApprenant(String codeApprenant) {
    this.codeApprenant = codeApprenant;
    return this;
  }

  /**
   * Le code Pegase de l&#39;apprenant
   * @return codeApprenant
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE_APPRENANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getCodeApprenant() {
    return codeApprenant;
  }


  @JsonProperty(JSON_PROPERTY_CODE_APPRENANT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCodeApprenant(String codeApprenant) {
    this.codeApprenant = codeApprenant;
  }


  public VueInscription dateInscription(String dateInscription) {
    this.dateInscription = dateInscription;
    return this;
  }

  /**
   * La date de l&#39;inscription au format ISO-8601 (AAAA-MM-JJThh:mm)
   * @return dateInscription
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDateInscription() {
    return dateInscription;
  }


  @JsonProperty(JSON_PROPERTY_DATE_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateInscription(String dateInscription) {
    this.dateInscription = dateInscription;
  }


  public VueInscription derniereModification(Long derniereModification) {
    this.derniereModification = derniereModification;
    return this;
  }

  /**
   * L&#39;horodatage de la dernière modification (Timestamp nombre de secondes depuis le 01/01/1970 à 00:00)
   * @return derniereModification
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DERNIERE_MODIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getDerniereModification() {
    return derniereModification;
  }


  @JsonProperty(JSON_PROPERTY_DERNIERE_MODIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDerniereModification(Long derniereModification) {
    this.derniereModification = derniereModification;
  }


  public VueInscription INE(String INE) {
    this.INE = INE;
    return this;
  }

  /**
   * Le numéro INE de l&#39;apprenant si connu
   * @return INE
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_I_N_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getINE() {
    return INE;
  }


  @JsonProperty(JSON_PROPERTY_I_N_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setINE(String INE) {
    this.INE = INE;
  }


  public VueInscription civilite(CiviliteEnum civilite) {
    this.civilite = civilite;
    return this;
  }

  /**
   * La civilité M ou F de l&#39;apprenant⋅e
   * @return civilite
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CIVILITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CiviliteEnum getCivilite() {
    return civilite;
  }


  @JsonProperty(JSON_PROPERTY_CIVILITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCivilite(CiviliteEnum civilite) {
    this.civilite = civilite;
  }


  public VueInscription nomUsage(String nomUsage) {
    this.nomUsage = nomUsage;
    return this;
  }

  /**
   * Le nom d&#39;usage de l&#39;apprenant⋅e
   * @return nomUsage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOM_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getNomUsage() {
    return nomUsage;
  }


  @JsonProperty(JSON_PROPERTY_NOM_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNomUsage(String nomUsage) {
    this.nomUsage = nomUsage;
  }


  public VueInscription nomFamille(String nomFamille) {
    this.nomFamille = nomFamille;
    return this;
  }

  /**
   * Le nom patronymique de l&#39;apprenant⋅e
   * @return nomFamille
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NOM_FAMILLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getNomFamille() {
    return nomFamille;
  }


  @JsonProperty(JSON_PROPERTY_NOM_FAMILLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNomFamille(String nomFamille) {
    this.nomFamille = nomFamille;
  }


  public VueInscription prenom(String prenom) {
    this.prenom = prenom;
    return this;
  }

  /**
   * Le prénom de l&#39;apprenant⋅e
   * @return prenom
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRENOM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPrenom() {
    return prenom;
  }


  @JsonProperty(JSON_PROPERTY_PRENOM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrenom(String prenom) {
    this.prenom = prenom;
  }


  public VueInscription dateDeNaissance(String dateDeNaissance) {
    this.dateDeNaissance = dateDeNaissance;
    return this;
  }

  /**
   * La date de naissance au format ISO-8601 (AAAA-MM-JJ)
   * @return dateDeNaissance
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDateDeNaissance() {
    return dateDeNaissance;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateDeNaissance(String dateDeNaissance) {
    this.dateDeNaissance = dateDeNaissance;
  }


  public VueInscription nationalite(String nationalite) {
    this.nationalite = nationalite;
    return this;
  }

  /**
   * Le code INSEE de la nationalité (100 pour française)
   * @return nationalite
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NATIONALITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getNationalite() {
    return nationalite;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNationalite(String nationalite) {
    this.nationalite = nationalite;
  }


  public VueInscription droitPhoto(Boolean droitPhoto) {
    this.droitPhoto = droitPhoto;
    return this;
  }

  /**
   * Autorisation accordée ou non par l&#39;apprenant⋅e pour l&#39;utilisation de sa photo dans un trombinoscope
   * @return droitPhoto
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DROIT_PHOTO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getDroitPhoto() {
    return droitPhoto;
  }


  @JsonProperty(JSON_PROPERTY_DROIT_PHOTO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDroitPhoto(Boolean droitPhoto) {
    this.droitPhoto = droitPhoto;
  }


  public VueInscription photo(byte[] photo) {
    this.photo = photo;
    return this;
  }

  /**
   * Si demandée en paramètre photo; La photographie d&#39;identité de l&#39;apprenant (Format binaire, png ou jpeg en ligne)
   * @return photo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHOTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public byte[] getPhoto() {
    return photo;
  }


  @JsonProperty(JSON_PROPERTY_PHOTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoto(byte[] photo) {
    this.photo = photo;
  }


  public VueInscription regime(String regime) {
    this.regime = regime;
    return this;
  }

  /**
   * Le code BCN du regime d&#39;inscription
   * @return regime
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getRegime() {
    return regime;
  }


  @JsonProperty(JSON_PROPERTY_REGIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegime(String regime) {
    this.regime = regime;
  }


  public VueInscription bourses(List<String> bourses) {
    this.bourses = bourses;
    return this;
  }

  public VueInscription addBoursesItem(String boursesItem) {
    if (this.bourses == null) {
      this.bourses = new ArrayList<>();
    }
    this.bourses.add(boursesItem);
    return this;
  }

  /**
   * Déprécié -&gt; Les codes des bourses de l&#39;inscription
   * @return bourses
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOURSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getBourses() {
    return bourses;
  }


  @JsonProperty(JSON_PROPERTY_BOURSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBourses(List<String> bourses) {
    this.bourses = bourses;
  }


  public VueInscription boursesCompletes(List<VueBourse> boursesCompletes) {
    this.boursesCompletes = boursesCompletes;
    return this;
  }

  public VueInscription addBoursesCompletesItem(VueBourse boursesCompletesItem) {
    if (this.boursesCompletes == null) {
      this.boursesCompletes = new ArrayList<>();
    }
    this.boursesCompletes.add(boursesCompletesItem);
    return this;
  }

  /**
   * Les codes des bourses de l&#39;inscription
   * @return boursesCompletes
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOURSES_COMPLETES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<VueBourse> getBoursesCompletes() {
    return boursesCompletes;
  }


  @JsonProperty(JSON_PROPERTY_BOURSES_COMPLETES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBoursesCompletes(List<VueBourse> boursesCompletes) {
    this.boursesCompletes = boursesCompletes;
  }


  public VueInscription profilsExonerants(List<VueProfilExonerant> profilsExonerants) {
    this.profilsExonerants = profilsExonerants;
    return this;
  }

  public VueInscription addProfilsExonerantsItem(VueProfilExonerant profilsExonerantsItem) {
    if (this.profilsExonerants == null) {
      this.profilsExonerants = new ArrayList<>();
    }
    this.profilsExonerants.add(profilsExonerantsItem);
    return this;
  }

  /**
   * Les codes des profils exonerants
   * @return profilsExonerants
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILS_EXONERANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<VueProfilExonerant> getProfilsExonerants() {
    return profilsExonerants;
  }


  @JsonProperty(JSON_PROPERTY_PROFILS_EXONERANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfilsExonerants(List<VueProfilExonerant> profilsExonerants) {
    this.profilsExonerants = profilsExonerants;
  }


  public VueInscription mobilite(MobiliteEnum mobilite) {
    this.mobilite = mobilite;
    return this;
  }

  /**
   * Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)
   * @return mobilite
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MOBILITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public MobiliteEnum getMobilite() {
    return mobilite;
  }


  @JsonProperty(JSON_PROPERTY_MOBILITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMobilite(MobiliteEnum mobilite) {
    this.mobilite = mobilite;
  }


  public VueInscription statutPaiement(StatutPaiementEnum statutPaiement) {
    this.statutPaiement = statutPaiement;
    return this;
  }

  /**
   * Statut du paiement généré à la confirmation du paiement
   * @return statutPaiement
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUT_PAIEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public StatutPaiementEnum getStatutPaiement() {
    return statutPaiement;
  }


  @JsonProperty(JSON_PROPERTY_STATUT_PAIEMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatutPaiement(StatutPaiementEnum statutPaiement) {
    this.statutPaiement = statutPaiement;
  }


  public VueInscription statutInscription(StatutInscriptionEnum statutInscription) {
    this.statutInscription = statutInscription;
    return this;
  }

  /**
   * Statut validé ou annulé de l&#39;inscription
   * @return statutInscription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUT_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StatutInscriptionEnum getStatutInscription() {
    return statutInscription;
  }


  @JsonProperty(JSON_PROPERTY_STATUT_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatutInscription(StatutInscriptionEnum statutInscription) {
    this.statutInscription = statutInscription;
  }


  public VueInscription inscriptionPrincipale(Boolean inscriptionPrincipale) {
    this.inscriptionPrincipale = inscriptionPrincipale;
    return this;
  }

  /**
   * Témoin indiquant s&#39;il s&#39;agit d&#39;une inscription principale (true) ou d&#39;une inscription complémentaire (false)
   * @return inscriptionPrincipale
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSCRIPTION_PRINCIPALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getInscriptionPrincipale() {
    return inscriptionPrincipale;
  }


  @JsonProperty(JSON_PROPERTY_INSCRIPTION_PRINCIPALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInscriptionPrincipale(Boolean inscriptionPrincipale) {
    this.inscriptionPrincipale = inscriptionPrincipale;
  }


  public VueInscription formation(String formation) {
    this.formation = formation;
    return this;
  }

  /**
   * Le code SISE de la formation
   * @return formation
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getFormation() {
    return formation;
  }


  @JsonProperty(JSON_PROPERTY_FORMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFormation(String formation) {
    this.formation = formation;
  }


  public VueInscription anneeUniversitaire(Integer anneeUniversitaire) {
    this.anneeUniversitaire = anneeUniversitaire;
    return this;
  }

  /**
   * L&#39;année universitaire si renseigné dans la période
   * @return anneeUniversitaire
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNEE_UNIVERSITAIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getAnneeUniversitaire() {
    return anneeUniversitaire;
  }


  @JsonProperty(JSON_PROPERTY_ANNEE_UNIVERSITAIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnneeUniversitaire(Integer anneeUniversitaire) {
    this.anneeUniversitaire = anneeUniversitaire;
  }


  public VueInscription periode(String periode) {
    this.periode = periode;
    return this;
  }

  /**
   * Le libelle de la période de mise en œuvre
   * @return periode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERIODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPeriode() {
    return periode;
  }


  @JsonProperty(JSON_PROPERTY_PERIODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPeriode(String periode) {
    this.periode = periode;
  }


  public VueInscription chemin(List<VueCheminCible> chemin) {
    this.chemin = chemin;
    return this;
  }

  public VueInscription addCheminItem(VueCheminCible cheminItem) {
    if (this.chemin == null) {
      this.chemin = new ArrayList<>();
    }
    this.chemin.add(cheminItem);
    return this;
  }

  /**
   * Sous-liste avec le chemin cible de la formation racine jusqu&#39;à l&#39;objet de la maquette de formation sur lequel s&#39;est inscrit l&#39;étudiant
   * @return chemin
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHEMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<VueCheminCible> getChemin() {
    return chemin;
  }


  @JsonProperty(JSON_PROPERTY_CHEMIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChemin(List<VueCheminCible> chemin) {
    this.chemin = chemin;
  }


  public VueInscription uaIStructurePrincipale(String uaIStructurePrincipale) {
    this.uaIStructurePrincipale = uaIStructurePrincipale;
    return this;
  }

  /**
   * Le code UAI de la structure
   * @return uaIStructurePrincipale
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UA_I_STRUCTURE_PRINCIPALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUaIStructurePrincipale() {
    return uaIStructurePrincipale;
  }


  @JsonProperty(JSON_PROPERTY_UA_I_STRUCTURE_PRINCIPALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUaIStructurePrincipale(String uaIStructurePrincipale) {
    this.uaIStructurePrincipale = uaIStructurePrincipale;
  }


  public VueInscription codeDiplomeSISE(String codeDiplomeSISE) {
    this.codeDiplomeSISE = codeDiplomeSISE;
    return this;
  }

  /**
   * Le code SISE du diplome
   * @return codeDiplomeSISE
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_DIPLOME_S_I_S_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCodeDiplomeSISE() {
    return codeDiplomeSISE;
  }


  @JsonProperty(JSON_PROPERTY_CODE_DIPLOME_S_I_S_E)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeDiplomeSISE(String codeDiplomeSISE) {
    this.codeDiplomeSISE = codeDiplomeSISE;
  }


  public VueInscription adresses(List<VueContactAdresse> adresses) {
    this.adresses = adresses;
    return this;
  }

  public VueInscription addAdressesItem(VueContactAdresse adressesItem) {
    if (this.adresses == null) {
      this.adresses = new ArrayList<>();
    }
    this.adresses.add(adressesItem);
    return this;
  }

  /**
   * Adresses détaillées
   * @return adresses
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADRESSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<VueContactAdresse> getAdresses() {
    return adresses;
  }


  @JsonProperty(JSON_PROPERTY_ADRESSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdresses(List<VueContactAdresse> adresses) {
    this.adresses = adresses;
  }


  public VueInscription mels(List<VueContactMel> mels) {
    this.mels = mels;
    return this;
  }

  public VueInscription addMelsItem(VueContactMel melsItem) {
    if (this.mels == null) {
      this.mels = new ArrayList<>();
    }
    this.mels.add(melsItem);
    return this;
  }

  /**
   * Adresses mel détaillées
   * @return mels
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MELS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<VueContactMel> getMels() {
    return mels;
  }


  @JsonProperty(JSON_PROPERTY_MELS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMels(List<VueContactMel> mels) {
    this.mels = mels;
  }


  public VueInscription telephones(List<VueContactTelephone> telephones) {
    this.telephones = telephones;
    return this;
  }

  public VueInscription addTelephonesItem(VueContactTelephone telephonesItem) {
    if (this.telephones == null) {
      this.telephones = new ArrayList<>();
    }
    this.telephones.add(telephonesItem);
    return this;
  }

  /**
   * Adresses téléphoniques détaillées
   * @return telephones
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TELEPHONES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<VueContactTelephone> getTelephones() {
    return telephones;
  }


  @JsonProperty(JSON_PROPERTY_TELEPHONES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTelephones(List<VueContactTelephone> telephones) {
    this.telephones = telephones;
  }


  /**
   * Return true if this VueInscription object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VueInscription vueInscription = (VueInscription) o;
    return Objects.equals(this.UAI, vueInscription.UAI) &&
        Objects.equals(this.codeApprenant, vueInscription.codeApprenant) &&
        Objects.equals(this.dateInscription, vueInscription.dateInscription) &&
        Objects.equals(this.derniereModification, vueInscription.derniereModification) &&
        Objects.equals(this.INE, vueInscription.INE) &&
        Objects.equals(this.civilite, vueInscription.civilite) &&
        Objects.equals(this.nomUsage, vueInscription.nomUsage) &&
        Objects.equals(this.nomFamille, vueInscription.nomFamille) &&
        Objects.equals(this.prenom, vueInscription.prenom) &&
        Objects.equals(this.dateDeNaissance, vueInscription.dateDeNaissance) &&
        Objects.equals(this.nationalite, vueInscription.nationalite) &&
        Objects.equals(this.droitPhoto, vueInscription.droitPhoto) &&
        Arrays.equals(this.photo, vueInscription.photo) &&
        Objects.equals(this.regime, vueInscription.regime) &&
        Objects.equals(this.bourses, vueInscription.bourses) &&
        Objects.equals(this.boursesCompletes, vueInscription.boursesCompletes) &&
        Objects.equals(this.profilsExonerants, vueInscription.profilsExonerants) &&
        Objects.equals(this.mobilite, vueInscription.mobilite) &&
        Objects.equals(this.statutPaiement, vueInscription.statutPaiement) &&
        Objects.equals(this.statutInscription, vueInscription.statutInscription) &&
        Objects.equals(this.inscriptionPrincipale, vueInscription.inscriptionPrincipale) &&
        Objects.equals(this.formation, vueInscription.formation) &&
        Objects.equals(this.anneeUniversitaire, vueInscription.anneeUniversitaire) &&
        Objects.equals(this.periode, vueInscription.periode) &&
        Objects.equals(this.chemin, vueInscription.chemin) &&
        Objects.equals(this.uaIStructurePrincipale, vueInscription.uaIStructurePrincipale) &&
        Objects.equals(this.codeDiplomeSISE, vueInscription.codeDiplomeSISE) &&
        Objects.equals(this.adresses, vueInscription.adresses) &&
        Objects.equals(this.mels, vueInscription.mels) &&
        Objects.equals(this.telephones, vueInscription.telephones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(UAI, codeApprenant, dateInscription, derniereModification, INE, civilite, nomUsage, nomFamille, prenom, dateDeNaissance, nationalite, droitPhoto, Arrays.hashCode(photo), regime, bourses, boursesCompletes, profilsExonerants, mobilite, statutPaiement, statutInscription, inscriptionPrincipale, formation, anneeUniversitaire, periode, chemin, uaIStructurePrincipale, codeDiplomeSISE, adresses, mels, telephones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VueInscription {\n");
    sb.append("    UAI: ").append(toIndentedString(UAI)).append("\n");
    sb.append("    codeApprenant: ").append(toIndentedString(codeApprenant)).append("\n");
    sb.append("    dateInscription: ").append(toIndentedString(dateInscription)).append("\n");
    sb.append("    derniereModification: ").append(toIndentedString(derniereModification)).append("\n");
    sb.append("    INE: ").append(toIndentedString(INE)).append("\n");
    sb.append("    civilite: ").append(toIndentedString(civilite)).append("\n");
    sb.append("    nomUsage: ").append(toIndentedString(nomUsage)).append("\n");
    sb.append("    nomFamille: ").append(toIndentedString(nomFamille)).append("\n");
    sb.append("    prenom: ").append(toIndentedString(prenom)).append("\n");
    sb.append("    dateDeNaissance: ").append(toIndentedString(dateDeNaissance)).append("\n");
    sb.append("    nationalite: ").append(toIndentedString(nationalite)).append("\n");
    sb.append("    droitPhoto: ").append(toIndentedString(droitPhoto)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    regime: ").append(toIndentedString(regime)).append("\n");
    sb.append("    bourses: ").append(toIndentedString(bourses)).append("\n");
    sb.append("    boursesCompletes: ").append(toIndentedString(boursesCompletes)).append("\n");
    sb.append("    profilsExonerants: ").append(toIndentedString(profilsExonerants)).append("\n");
    sb.append("    mobilite: ").append(toIndentedString(mobilite)).append("\n");
    sb.append("    statutPaiement: ").append(toIndentedString(statutPaiement)).append("\n");
    sb.append("    statutInscription: ").append(toIndentedString(statutInscription)).append("\n");
    sb.append("    inscriptionPrincipale: ").append(toIndentedString(inscriptionPrincipale)).append("\n");
    sb.append("    formation: ").append(toIndentedString(formation)).append("\n");
    sb.append("    anneeUniversitaire: ").append(toIndentedString(anneeUniversitaire)).append("\n");
    sb.append("    periode: ").append(toIndentedString(periode)).append("\n");
    sb.append("    chemin: ").append(toIndentedString(chemin)).append("\n");
    sb.append("    uaIStructurePrincipale: ").append(toIndentedString(uaIStructurePrincipale)).append("\n");
    sb.append("    codeDiplomeSISE: ").append(toIndentedString(codeDiplomeSISE)).append("\n");
    sb.append("    adresses: ").append(toIndentedString(adresses)).append("\n");
    sb.append("    mels: ").append(toIndentedString(mels)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `UAI` to the URL query string
    if (getUAI() != null) {
      joiner.add(String.format("%sUAI%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getUAI()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `codeApprenant` to the URL query string
    if (getCodeApprenant() != null) {
      joiner.add(String.format("%scodeApprenant%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCodeApprenant()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateInscription` to the URL query string
    if (getDateInscription() != null) {
      joiner.add(String.format("%sdateInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `derniereModification` to the URL query string
    if (getDerniereModification() != null) {
      joiner.add(String.format("%sderniereModification%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDerniereModification()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `INE` to the URL query string
    if (getINE() != null) {
      joiner.add(String.format("%sINE%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getINE()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `civilite` to the URL query string
    if (getCivilite() != null) {
      joiner.add(String.format("%scivilite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCivilite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `nomUsage` to the URL query string
    if (getNomUsage() != null) {
      joiner.add(String.format("%snomUsage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNomUsage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `nomFamille` to the URL query string
    if (getNomFamille() != null) {
      joiner.add(String.format("%snomFamille%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNomFamille()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `prenom` to the URL query string
    if (getPrenom() != null) {
      joiner.add(String.format("%sprenom%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPrenom()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateDeNaissance` to the URL query string
    if (getDateDeNaissance() != null) {
      joiner.add(String.format("%sdateDeNaissance%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateDeNaissance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `nationalite` to the URL query string
    if (getNationalite() != null) {
      joiner.add(String.format("%snationalite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getNationalite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `droitPhoto` to the URL query string
    if (getDroitPhoto() != null) {
      joiner.add(String.format("%sdroitPhoto%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDroitPhoto()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `photo` to the URL query string
    if (getPhoto() != null) {
      joiner.add(String.format("%sphoto%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPhoto()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `regime` to the URL query string
    if (getRegime() != null) {
      joiner.add(String.format("%sregime%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRegime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `bourses` to the URL query string
    if (getBourses() != null) {
      for (int i = 0; i < getBourses().size(); i++) {
        joiner.add(String.format("%sbourses%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getBourses().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `boursesCompletes` to the URL query string
    if (getBoursesCompletes() != null) {
      for (int i = 0; i < getBoursesCompletes().size(); i++) {
        if (getBoursesCompletes().get(i) != null) {
          joiner.add(getBoursesCompletes().get(i).toUrlQueryString(String.format("%sboursesCompletes%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `profilsExonerants` to the URL query string
    if (getProfilsExonerants() != null) {
      for (int i = 0; i < getProfilsExonerants().size(); i++) {
        if (getProfilsExonerants().get(i) != null) {
          joiner.add(getProfilsExonerants().get(i).toUrlQueryString(String.format("%sprofilsExonerants%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `mobilite` to the URL query string
    if (getMobilite() != null) {
      joiner.add(String.format("%smobilite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMobilite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statutPaiement` to the URL query string
    if (getStatutPaiement() != null) {
      joiner.add(String.format("%sstatutPaiement%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatutPaiement()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `statutInscription` to the URL query string
    if (getStatutInscription() != null) {
      joiner.add(String.format("%sstatutInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatutInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `inscriptionPrincipale` to the URL query string
    if (getInscriptionPrincipale() != null) {
      joiner.add(String.format("%sinscriptionPrincipale%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInscriptionPrincipale()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `formation` to the URL query string
    if (getFormation() != null) {
      joiner.add(String.format("%sformation%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getFormation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `anneeUniversitaire` to the URL query string
    if (getAnneeUniversitaire() != null) {
      joiner.add(String.format("%sanneeUniversitaire%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAnneeUniversitaire()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `periode` to the URL query string
    if (getPeriode() != null) {
      joiner.add(String.format("%speriode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPeriode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `chemin` to the URL query string
    if (getChemin() != null) {
      for (int i = 0; i < getChemin().size(); i++) {
        if (getChemin().get(i) != null) {
          joiner.add(getChemin().get(i).toUrlQueryString(String.format("%schemin%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `UAIStructurePrincipale` to the URL query string
    if (getUaIStructurePrincipale() != null) {
      joiner.add(String.format("%sUAIStructurePrincipale%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getUaIStructurePrincipale()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `codeDiplomeSISE` to the URL query string
    if (getCodeDiplomeSISE() != null) {
      joiner.add(String.format("%scodeDiplomeSISE%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCodeDiplomeSISE()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `adresses` to the URL query string
    if (getAdresses() != null) {
      for (int i = 0; i < getAdresses().size(); i++) {
        if (getAdresses().get(i) != null) {
          joiner.add(getAdresses().get(i).toUrlQueryString(String.format("%sadresses%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `mels` to the URL query string
    if (getMels() != null) {
      for (int i = 0; i < getMels().size(); i++) {
        if (getMels().get(i) != null) {
          joiner.add(getMels().get(i).toUrlQueryString(String.format("%smels%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `telephones` to the URL query string
    if (getTelephones() != null) {
      for (int i = 0; i < getTelephones().size(); i++) {
        if (getTelephones().get(i) != null) {
          joiner.add(getTelephones().get(i).toUrlQueryString(String.format("%stelephones%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

