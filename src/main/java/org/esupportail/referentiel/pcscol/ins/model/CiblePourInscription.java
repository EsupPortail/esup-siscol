/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 24.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * Décrit une Formation ou un chemin depuis une Formation vers un ObjetFormation sur lequel on peut s&#39;inscrire
 */
@JsonPropertyOrder({
  CiblePourInscription.JSON_PROPERTY_CODE_STRUCTURE,
  CiblePourInscription.JSON_PROPERTY_FORMATION,
  CiblePourInscription.JSON_PROPERTY_PERIODE,
  CiblePourInscription.JSON_PROPERTY_CALENDRIER,
  CiblePourInscription.JSON_PROPERTY_CHEMIN,
  CiblePourInscription.JSON_PROPERTY_REGIMES_INSCRIPTION,
  CiblePourInscription.JSON_PROPERTY_BOURSES_OU_AIDES,
  CiblePourInscription.JSON_PROPERTY_OUVERTE_A_INSCRIPTION,
  CiblePourInscription.JSON_PROPERTY_JAMAIS_OUVERTE_A_INSCRIPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-23T10:43:17.979817+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
public class CiblePourInscription {
  public static final String JSON_PROPERTY_CODE_STRUCTURE = "codeStructure";
  private String codeStructure;

  public static final String JSON_PROPERTY_FORMATION = "formation";
  private Formation formation;

  public static final String JSON_PROPERTY_PERIODE = "periode";
  private Periode periode;

  public static final String JSON_PROPERTY_CALENDRIER = "calendrier";
  private Calendrier calendrier;

  public static final String JSON_PROPERTY_CHEMIN = "chemin";
  private List<ObjetFormationOuGroupement> chemin = new ArrayList<>();

  public static final String JSON_PROPERTY_REGIMES_INSCRIPTION = "regimesInscription";
  private List<RegimeInscription> regimesInscription = new ArrayList<>();

  public static final String JSON_PROPERTY_BOURSES_OU_AIDES = "boursesOuAides";
  private List<BourseOuAide> boursesOuAides = new ArrayList<>();

  public static final String JSON_PROPERTY_OUVERTE_A_INSCRIPTION = "ouverteAInscription";
  private Boolean ouverteAInscription;

  public static final String JSON_PROPERTY_JAMAIS_OUVERTE_A_INSCRIPTION = "jamaisOuverteAInscription";
  private Boolean jamaisOuverteAInscription;

  public CiblePourInscription() { 
  }

  public CiblePourInscription codeStructure(String codeStructure) {
    this.codeStructure = codeStructure;
    return this;
  }

  /**
   * Le code uai de la structure
   * @return codeStructure
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCodeStructure() {
    return codeStructure;
  }


  @JsonProperty(JSON_PROPERTY_CODE_STRUCTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeStructure(String codeStructure) {
    this.codeStructure = codeStructure;
  }


  public CiblePourInscription formation(Formation formation) {
    this.formation = formation;
    return this;
  }

  /**
   * Get formation
   * @return formation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Formation getFormation() {
    return formation;
  }


  @JsonProperty(JSON_PROPERTY_FORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormation(Formation formation) {
    this.formation = formation;
  }


  public CiblePourInscription periode(Periode periode) {
    this.periode = periode;
    return this;
  }

  /**
   * Get periode
   * @return periode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERIODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Periode getPeriode() {
    return periode;
  }


  @JsonProperty(JSON_PROPERTY_PERIODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeriode(Periode periode) {
    this.periode = periode;
  }


  public CiblePourInscription calendrier(Calendrier calendrier) {
    this.calendrier = calendrier;
    return this;
  }

  /**
   * Get calendrier
   * @return calendrier
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CALENDRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Calendrier getCalendrier() {
    return calendrier;
  }


  @JsonProperty(JSON_PROPERTY_CALENDRIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCalendrier(Calendrier calendrier) {
    this.calendrier = calendrier;
  }


  public CiblePourInscription chemin(List<ObjetFormationOuGroupement> chemin) {
    this.chemin = chemin;
    return this;
  }

  public CiblePourInscription addCheminItem(ObjetFormationOuGroupement cheminItem) {
    if (this.chemin == null) {
      this.chemin = new ArrayList<>();
    }
    this.chemin.add(cheminItem);
    return this;
  }

  /**
   * liste des ObjetFormation ou Groupement depuis la Formation racine jusqu&#39;à l&#39;ObjetFormation feuille (même code que CiblePourInscription), peut être vide
   * @return chemin
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHEMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ObjetFormationOuGroupement> getChemin() {
    return chemin;
  }


  @JsonProperty(JSON_PROPERTY_CHEMIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChemin(List<ObjetFormationOuGroupement> chemin) {
    this.chemin = chemin;
  }


  public CiblePourInscription regimesInscription(List<RegimeInscription> regimesInscription) {
    this.regimesInscription = regimesInscription;
    return this;
  }

  public CiblePourInscription addRegimesInscriptionItem(RegimeInscription regimesInscriptionItem) {
    if (this.regimesInscription == null) {
      this.regimesInscription = new ArrayList<>();
    }
    this.regimesInscription.add(regimesInscriptionItem);
    return this;
  }

  /**
   * liste des regimes d&#39;inscription récupérée au moment de la mise en œuvre de la cible
   * @return regimesInscription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REGIMES_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<RegimeInscription> getRegimesInscription() {
    return regimesInscription;
  }


  @JsonProperty(JSON_PROPERTY_REGIMES_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegimesInscription(List<RegimeInscription> regimesInscription) {
    this.regimesInscription = regimesInscription;
  }


  public CiblePourInscription boursesOuAides(List<BourseOuAide> boursesOuAides) {
    this.boursesOuAides = boursesOuAides;
    return this;
  }

  public CiblePourInscription addBoursesOuAidesItem(BourseOuAide boursesOuAidesItem) {
    if (this.boursesOuAides == null) {
      this.boursesOuAides = new ArrayList<>();
    }
    this.boursesOuAides.add(boursesOuAidesItem);
    return this;
  }

  /**
   * liste des bourses ou aides récupérée au moment de la mise en œuvre de la cible
   * @return boursesOuAides
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOURSES_OU_AIDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<BourseOuAide> getBoursesOuAides() {
    return boursesOuAides;
  }


  @JsonProperty(JSON_PROPERTY_BOURSES_OU_AIDES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBoursesOuAides(List<BourseOuAide> boursesOuAides) {
    this.boursesOuAides = boursesOuAides;
  }


  public CiblePourInscription ouverteAInscription(Boolean ouverteAInscription) {
    this.ouverteAInscription = ouverteAInscription;
    return this;
  }

  /**
   * Temoin indiquant que la cible est ouverte à l&#39;inscription
   * @return ouverteAInscription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUVERTE_A_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getOuverteAInscription() {
    return ouverteAInscription;
  }


  @JsonProperty(JSON_PROPERTY_OUVERTE_A_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOuverteAInscription(Boolean ouverteAInscription) {
    this.ouverteAInscription = ouverteAInscription;
  }


  public CiblePourInscription jamaisOuverteAInscription(Boolean jamaisOuverteAInscription) {
    this.jamaisOuverteAInscription = jamaisOuverteAInscription;
    return this;
  }

  /**
   * Temoin indiquant que la cible est jamais ouverte à l&#39;inscription
   * @return jamaisOuverteAInscription
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_JAMAIS_OUVERTE_A_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getJamaisOuverteAInscription() {
    return jamaisOuverteAInscription;
  }


  @JsonProperty(JSON_PROPERTY_JAMAIS_OUVERTE_A_INSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJamaisOuverteAInscription(Boolean jamaisOuverteAInscription) {
    this.jamaisOuverteAInscription = jamaisOuverteAInscription;
  }


  /**
   * Return true if this CiblePourInscription object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CiblePourInscription ciblePourInscription = (CiblePourInscription) o;
    return Objects.equals(this.codeStructure, ciblePourInscription.codeStructure) &&
        Objects.equals(this.formation, ciblePourInscription.formation) &&
        Objects.equals(this.periode, ciblePourInscription.periode) &&
        Objects.equals(this.calendrier, ciblePourInscription.calendrier) &&
        Objects.equals(this.chemin, ciblePourInscription.chemin) &&
        Objects.equals(this.regimesInscription, ciblePourInscription.regimesInscription) &&
        Objects.equals(this.boursesOuAides, ciblePourInscription.boursesOuAides) &&
        Objects.equals(this.ouverteAInscription, ciblePourInscription.ouverteAInscription) &&
        Objects.equals(this.jamaisOuverteAInscription, ciblePourInscription.jamaisOuverteAInscription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codeStructure, formation, periode, calendrier, chemin, regimesInscription, boursesOuAides, ouverteAInscription, jamaisOuverteAInscription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CiblePourInscription {\n");
    sb.append("    codeStructure: ").append(toIndentedString(codeStructure)).append("\n");
    sb.append("    formation: ").append(toIndentedString(formation)).append("\n");
    sb.append("    periode: ").append(toIndentedString(periode)).append("\n");
    sb.append("    calendrier: ").append(toIndentedString(calendrier)).append("\n");
    sb.append("    chemin: ").append(toIndentedString(chemin)).append("\n");
    sb.append("    regimesInscription: ").append(toIndentedString(regimesInscription)).append("\n");
    sb.append("    boursesOuAides: ").append(toIndentedString(boursesOuAides)).append("\n");
    sb.append("    ouverteAInscription: ").append(toIndentedString(ouverteAInscription)).append("\n");
    sb.append("    jamaisOuverteAInscription: ").append(toIndentedString(jamaisOuverteAInscription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `codeStructure` to the URL query string
    if (getCodeStructure() != null) {
      joiner.add(String.format("%scodeStructure%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCodeStructure()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `formation` to the URL query string
    if (getFormation() != null) {
      joiner.add(getFormation().toUrlQueryString(prefix + "formation" + suffix));
    }

    // add `periode` to the URL query string
    if (getPeriode() != null) {
      joiner.add(getPeriode().toUrlQueryString(prefix + "periode" + suffix));
    }

    // add `calendrier` to the URL query string
    if (getCalendrier() != null) {
      joiner.add(getCalendrier().toUrlQueryString(prefix + "calendrier" + suffix));
    }

    // add `chemin` to the URL query string
    if (getChemin() != null) {
      for (int i = 0; i < getChemin().size(); i++) {
        if (getChemin().get(i) != null) {
          joiner.add(getChemin().get(i).toUrlQueryString(String.format("%schemin%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `regimesInscription` to the URL query string
    if (getRegimesInscription() != null) {
      for (int i = 0; i < getRegimesInscription().size(); i++) {
        if (getRegimesInscription().get(i) != null) {
          joiner.add(getRegimesInscription().get(i).toUrlQueryString(String.format("%sregimesInscription%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `boursesOuAides` to the URL query string
    if (getBoursesOuAides() != null) {
      for (int i = 0; i < getBoursesOuAides().size(); i++) {
        if (getBoursesOuAides().get(i) != null) {
          joiner.add(getBoursesOuAides().get(i).toUrlQueryString(String.format("%sboursesOuAides%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `ouverteAInscription` to the URL query string
    if (getOuverteAInscription() != null) {
      joiner.add(String.format("%souverteAInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getOuverteAInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `jamaisOuverteAInscription` to the URL query string
    if (getJamaisOuverteAInscription() != null) {
      joiner.add(String.format("%sjamaisOuverteAInscription%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getJamaisOuverteAInscription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

