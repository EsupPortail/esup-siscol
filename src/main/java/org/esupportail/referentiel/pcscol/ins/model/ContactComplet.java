/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;
import org.esupportail.referentiel.pcscol.invoker.JSON;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ContactComplet
 */
@JsonPropertyOrder({
  ContactComplet.JSON_PROPERTY_CANAL_COMMUNICATION,
  ContactComplet.JSON_PROPERTY_DEMANDE_DE_CONTACT,
  ContactComplet.JSON_PROPERTY_PROPRIETAIRE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
@JsonIgnoreProperties(
  value = "canalCommunication", // ignore manually set canalCommunication, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the canalCommunication to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "canalCommunication", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ContactAdresseComplet.class, name = "ContactAdresseComplet"),
  @JsonSubTypes.Type(value = ContactMelComplet.class, name = "ContactMelComplet"),
  @JsonSubTypes.Type(value = ContactTelephoneComplet.class, name = "ContactTelephoneComplet"),
})

public class ContactComplet {
  /**
   * type de contact
   */
  public enum CanalCommunicationEnum {
    CONTACT_ADRESSE_COMPLET(String.valueOf("ContactAdresseComplet")),
    
    CONTACT_MEL_COMPLET(String.valueOf("ContactMelComplet")),
    
    CONTACT_TELEPHONE_COMPLET(String.valueOf("ContactTelephoneComplet"));

    private String value;

    CanalCommunicationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CanalCommunicationEnum fromValue(String value) {
      for (CanalCommunicationEnum b : CanalCommunicationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CANAL_COMMUNICATION = "canalCommunication";
  @jakarta.annotation.Nonnull
  private CanalCommunicationEnum canalCommunication;

  public static final String JSON_PROPERTY_DEMANDE_DE_CONTACT = "demandeDeContact";
  @jakarta.annotation.Nonnull
  private DemandeDeContactSimple demandeDeContact;

  public static final String JSON_PROPERTY_PROPRIETAIRE = "proprietaire";
  @jakarta.annotation.Nullable
  private String proprietaire;

  public ContactComplet() { 
  }

  public ContactComplet canalCommunication(@jakarta.annotation.Nonnull CanalCommunicationEnum canalCommunication) {
    this.canalCommunication = canalCommunication;
    return this;
  }

  /**
   * type de contact
   * @return canalCommunication
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CANAL_COMMUNICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public CanalCommunicationEnum getCanalCommunication() {
    return canalCommunication;
  }


  @JsonProperty(JSON_PROPERTY_CANAL_COMMUNICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCanalCommunication(@jakarta.annotation.Nonnull CanalCommunicationEnum canalCommunication) {
    this.canalCommunication = canalCommunication;
  }


  public ContactComplet demandeDeContact(@jakarta.annotation.Nonnull DemandeDeContactSimple demandeDeContact) {
    this.demandeDeContact = demandeDeContact;
    return this;
  }

  /**
   * Get demandeDeContact
   * @return demandeDeContact
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEMANDE_DE_CONTACT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public DemandeDeContactSimple getDemandeDeContact() {
    return demandeDeContact;
  }


  @JsonProperty(JSON_PROPERTY_DEMANDE_DE_CONTACT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDemandeDeContact(@jakarta.annotation.Nonnull DemandeDeContactSimple demandeDeContact) {
    this.demandeDeContact = demandeDeContact;
  }


  public ContactComplet proprietaire(@jakarta.annotation.Nullable String proprietaire) {
    this.proprietaire = proprietaire;
    return this;
  }

  /**
   * Personne à contacter si différent de l&#39;apprenant
   * @return proprietaire
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPRIETAIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getProprietaire() {
    return proprietaire;
  }


  @JsonProperty(JSON_PROPERTY_PROPRIETAIRE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProprietaire(@jakarta.annotation.Nullable String proprietaire) {
    this.proprietaire = proprietaire;
  }


  /**
   * Return true if this ContactComplet object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactComplet contactComplet = (ContactComplet) o;
    return Objects.equals(this.canalCommunication, contactComplet.canalCommunication) &&
        Objects.equals(this.demandeDeContact, contactComplet.demandeDeContact) &&
        Objects.equals(this.proprietaire, contactComplet.proprietaire);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canalCommunication, demandeDeContact, proprietaire);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactComplet {\n");
    sb.append("    canalCommunication: ").append(toIndentedString(canalCommunication)).append("\n");
    sb.append("    demandeDeContact: ").append(toIndentedString(demandeDeContact)).append("\n");
    sb.append("    proprietaire: ").append(toIndentedString(proprietaire)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `canalCommunication` to the URL query string
    if (getCanalCommunication() != null) {
      joiner.add(String.format("%scanalCommunication%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCanalCommunication()))));
    }

    // add `demandeDeContact` to the URL query string
    if (getDemandeDeContact() != null) {
      joiner.add(getDemandeDeContact().toUrlQueryString(prefix + "demandeDeContact" + suffix));
    }

    // add `proprietaire` to the URL query string
    if (getProprietaire() != null) {
      joiner.add(String.format("%sproprietaire%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProprietaire()))));
    }

    return joiner.toString();
  }
static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("ContactAdresseComplet", ContactAdresseComplet.class);
  mappings.put("ContactMelComplet", ContactMelComplet.class);
  mappings.put("ContactTelephoneComplet", ContactTelephoneComplet.class);
  mappings.put("ContactComplet", ContactComplet.class);
  JSON.registerDiscriminator(ContactComplet.class, "canalCommunication", mappings);
}
}

