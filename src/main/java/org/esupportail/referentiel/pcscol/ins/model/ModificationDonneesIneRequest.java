/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 24.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * ModificationDonneesIneRequest
 */
@JsonPropertyOrder({
  ModificationDonneesIneRequest.JSON_PROPERTY_INE,
  ModificationDonneesIneRequest.JSON_PROPERTY_DATE_DE_NAISSANCE,
  ModificationDonneesIneRequest.JSON_PROPERTY_PAYS_DE_NAISSANCE,
  ModificationDonneesIneRequest.JSON_PROPERTY_COMMUNE_DE_NAISSANCE,
  ModificationDonneesIneRequest.JSON_PROPERTY_ETAT_CIVIL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-23T10:43:17.979817+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
public class ModificationDonneesIneRequest {
  public static final String JSON_PROPERTY_INE = "ine";
  private String ine;

  public static final String JSON_PROPERTY_DATE_DE_NAISSANCE = "dateDeNaissance";
  private String dateDeNaissance;

  public static final String JSON_PROPERTY_PAYS_DE_NAISSANCE = "paysDeNaissance";
  private String paysDeNaissance;

  public static final String JSON_PROPERTY_COMMUNE_DE_NAISSANCE = "communeDeNaissance";
  private String communeDeNaissance;

  public static final String JSON_PROPERTY_ETAT_CIVIL = "etatCivil";
  private EtatCivil etatCivil;

  public ModificationDonneesIneRequest() { 
  }

  public ModificationDonneesIneRequest ine(String ine) {
    this.ine = ine;
    return this;
  }

  /**
   * nouveau ine de l&#39;apprenant
   * @return ine
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getIne() {
    return ine;
  }


  @JsonProperty(JSON_PROPERTY_INE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIne(String ine) {
    this.ine = ine;
  }


  public ModificationDonneesIneRequest dateDeNaissance(String dateDeNaissance) {
    this.dateDeNaissance = dateDeNaissance;
    return this;
  }

  /**
   * La date de naissance au format AAAA-MM-JJ
   * @return dateDeNaissance
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATE_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDateDeNaissance() {
    return dateDeNaissance;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateDeNaissance(String dateDeNaissance) {
    this.dateDeNaissance = dateDeNaissance;
  }


  public ModificationDonneesIneRequest paysDeNaissance(String paysDeNaissance) {
    this.paysDeNaissance = paysDeNaissance;
    return this;
  }

  /**
   * Le code pays du pays de naissance issu de la nomenclature Pays et Nationalités Ex : 100 &#x3D; France 
   * @return paysDeNaissance
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYS_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPaysDeNaissance() {
    return paysDeNaissance;
  }


  @JsonProperty(JSON_PROPERTY_PAYS_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaysDeNaissance(String paysDeNaissance) {
    this.paysDeNaissance = paysDeNaissance;
  }


  public ModificationDonneesIneRequest communeDeNaissance(String communeDeNaissance) {
    this.communeDeNaissance = communeDeNaissance;
    return this;
  }

  /**
   * Le code INSEE de la commune de naissance en France Ex : 67482 &#x3D; Strasbourg 
   * @return communeDeNaissance
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMUNE_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCommuneDeNaissance() {
    return communeDeNaissance;
  }


  @JsonProperty(JSON_PROPERTY_COMMUNE_DE_NAISSANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommuneDeNaissance(String communeDeNaissance) {
    this.communeDeNaissance = communeDeNaissance;
  }


  public ModificationDonneesIneRequest etatCivil(EtatCivil etatCivil) {
    this.etatCivil = etatCivil;
    return this;
  }

  /**
   * Get etatCivil
   * @return etatCivil
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ETAT_CIVIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public EtatCivil getEtatCivil() {
    return etatCivil;
  }


  @JsonProperty(JSON_PROPERTY_ETAT_CIVIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEtatCivil(EtatCivil etatCivil) {
    this.etatCivil = etatCivil;
  }


  /**
   * Return true if this ModificationDonneesIneRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModificationDonneesIneRequest modificationDonneesIneRequest = (ModificationDonneesIneRequest) o;
    return Objects.equals(this.ine, modificationDonneesIneRequest.ine) &&
        Objects.equals(this.dateDeNaissance, modificationDonneesIneRequest.dateDeNaissance) &&
        Objects.equals(this.paysDeNaissance, modificationDonneesIneRequest.paysDeNaissance) &&
        Objects.equals(this.communeDeNaissance, modificationDonneesIneRequest.communeDeNaissance) &&
        Objects.equals(this.etatCivil, modificationDonneesIneRequest.etatCivil);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ine, dateDeNaissance, paysDeNaissance, communeDeNaissance, etatCivil);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModificationDonneesIneRequest {\n");
    sb.append("    ine: ").append(toIndentedString(ine)).append("\n");
    sb.append("    dateDeNaissance: ").append(toIndentedString(dateDeNaissance)).append("\n");
    sb.append("    paysDeNaissance: ").append(toIndentedString(paysDeNaissance)).append("\n");
    sb.append("    communeDeNaissance: ").append(toIndentedString(communeDeNaissance)).append("\n");
    sb.append("    etatCivil: ").append(toIndentedString(etatCivil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ine` to the URL query string
    if (getIne() != null) {
      joiner.add(String.format("%sine%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIne()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateDeNaissance` to the URL query string
    if (getDateDeNaissance() != null) {
      joiner.add(String.format("%sdateDeNaissance%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateDeNaissance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `paysDeNaissance` to the URL query string
    if (getPaysDeNaissance() != null) {
      joiner.add(String.format("%spaysDeNaissance%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPaysDeNaissance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `communeDeNaissance` to the URL query string
    if (getCommuneDeNaissance() != null) {
      joiner.add(String.format("%scommuneDeNaissance%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCommuneDeNaissance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `etatCivil` to the URL query string
    if (getEtatCivil() != null) {
      joiner.add(getEtatCivil().toUrlQueryString(prefix + "etatCivil" + suffix));
    }

    return joiner.toString();
  }
}

