/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 27.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ins.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
/**
 * Selections
 */
@JsonPropertyOrder({
  Selections.JSON_PROPERTY_PROFILS_SPECIFIQUES,
  Selections.JSON_PROPERTY_AMENAGEMENTS_SPECIFIQUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-24T10:28:25.069148496+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class Selections {
  public static final String JSON_PROPERTY_PROFILS_SPECIFIQUES = "profilsSpecifiques";
  @jakarta.annotation.Nullable
  private List<String> profilsSpecifiques = new ArrayList<>();

  public static final String JSON_PROPERTY_AMENAGEMENTS_SPECIFIQUES = "amenagementsSpecifiques";
  @jakarta.annotation.Nullable
  private List<String> amenagementsSpecifiques = new ArrayList<>();

  public Selections() { 
  }

  public Selections profilsSpecifiques(@jakarta.annotation.Nullable List<String> profilsSpecifiques) {
    this.profilsSpecifiques = profilsSpecifiques;
    return this;
  }

  public Selections addProfilsSpecifiquesItem(String profilsSpecifiquesItem) {
    if (this.profilsSpecifiques == null) {
      this.profilsSpecifiques = new ArrayList<>();
    }
    this.profilsSpecifiques.add(profilsSpecifiquesItem);
    return this;
  }

  /**
   * Code du profil spécifique issu de la nomenclature Profils exonérants  Codes de la nomenclature sur 6 caractères. Préfixe des codes : PRF 
   * @return profilsSpecifiques
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROFILS_SPECIFIQUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getProfilsSpecifiques() {
    return profilsSpecifiques;
  }


  @JsonProperty(JSON_PROPERTY_PROFILS_SPECIFIQUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfilsSpecifiques(@jakarta.annotation.Nullable List<String> profilsSpecifiques) {
    this.profilsSpecifiques = profilsSpecifiques;
  }


  public Selections amenagementsSpecifiques(@jakarta.annotation.Nullable List<String> amenagementsSpecifiques) {
    this.amenagementsSpecifiques = amenagementsSpecifiques;
    return this;
  }

  public Selections addAmenagementsSpecifiquesItem(String amenagementsSpecifiquesItem) {
    if (this.amenagementsSpecifiques == null) {
      this.amenagementsSpecifiques = new ArrayList<>();
    }
    this.amenagementsSpecifiques.add(amenagementsSpecifiquesItem);
    return this;
  }

  /**
   * Liste des situations donnant droit à des aménagements spécifiques
   * @return amenagementsSpecifiques
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMENAGEMENTS_SPECIFIQUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getAmenagementsSpecifiques() {
    return amenagementsSpecifiques;
  }


  @JsonProperty(JSON_PROPERTY_AMENAGEMENTS_SPECIFIQUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmenagementsSpecifiques(@jakarta.annotation.Nullable List<String> amenagementsSpecifiques) {
    this.amenagementsSpecifiques = amenagementsSpecifiques;
  }


  /**
   * Return true if this Selections object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Selections selections = (Selections) o;
    return Objects.equals(this.profilsSpecifiques, selections.profilsSpecifiques) &&
        Objects.equals(this.amenagementsSpecifiques, selections.amenagementsSpecifiques);
  }

  @Override
  public int hashCode() {
    return Objects.hash(profilsSpecifiques, amenagementsSpecifiques);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Selections {\n");
    sb.append("    profilsSpecifiques: ").append(toIndentedString(profilsSpecifiques)).append("\n");
    sb.append("    amenagementsSpecifiques: ").append(toIndentedString(amenagementsSpecifiques)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `profilsSpecifiques` to the URL query string
    if (getProfilsSpecifiques() != null) {
      for (int i = 0; i < getProfilsSpecifiques().size(); i++) {
        joiner.add(String.format("%sprofilsSpecifiques%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getProfilsSpecifiques().get(i)))));
      }
    }

    // add `amenagementsSpecifiques` to the URL query string
    if (getAmenagementsSpecifiques() != null) {
      for (int i = 0; i < getAmenagementsSpecifiques().size(); i++) {
        joiner.add(String.format("%samenagementsSpecifiques%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getAmenagementsSpecifiques().get(i)))));
      }
    }

    return joiner.toString();
  }
}

