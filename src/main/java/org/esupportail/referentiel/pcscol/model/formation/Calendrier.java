/*
 * MOF Application v1 - Mise en œuvre de l'offre de formation - Bloc «application»
 * Liste l'ensemble des services et des opérations utilisées par l'application front du module MOF (Mise en œuvre de l'offre de formation)  ### Authentification/autorisation obligatoire  Pour tout appel à une opération vous devez être authentifié/authorisé (voir le paragraphe [Authentification](#section/Authentication) pour les détails).  ### Type de données  Sauf indications spécifiques données au niveau de l'opération, les types de données utilisés dans cette API sont les suivants :  * string - Chaîne de caractères encodée en UTF8 (ex : `Une chaîne de caractère`)    * Dans le cas des descripteurs de type `codeXxx`, seuls les caractères de A à Z, de 0 à 9 et le tiret(-) sont autorisés    * Dans le cas des descripteurs de type montant ou nombre avec une partie décimale, seuls les caractères de 0 à 9 et le point(.) sont autorisés (ex : `12525.99`)  * string($date) - Une date sous la forme d'une chaîne de caractères (ex : `2020-02-25`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))  * string($date-time) - Une date et heure avec fuseau horaire sous la forme d'une chaîne de caractères (ex : `2020-02-25T18:36:22+02:00`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))  * integer($int64) - Un entier sur 64 bits (de -9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) (ex : `2542`)  * integer($int32) - Un entier sur 32 bits (de –2 147 483 648 à 2 147 483 647) (ex : `2542`)  * boolean - Un booléen représenté par `true` ou `false`  ### Code retour   * 200 - Ok : L'opération s'est déroulée avec succès  * 201 - Created : L'opération a aboutie à la création d'une ressource  * 400 - Bad request :    * Un ou des paramètres d'entrées sont erronées    * Une erreur fonctionnelle s'est produite  * 404 - Not Found : La ressource demandée n'est pas trouvé    * Remarque : Dans le cas des opérations retournant une liste, on recevra un code 200 avec en résultat une liste vide  * 500 - Internal server error : Erreur inattendue et non gérés 
 *
 * The version of the OpenAPI document: 2.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.model.formation;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModelProperty;


/**
 * Calendrier
 */
@JsonPropertyOrder({
  Calendrier.JSON_PROPERTY_CODE,
  Calendrier.JSON_PROPERTY_LIBELLE,
  Calendrier.JSON_PROPERTY_LIBELLE_COURT,
  Calendrier.JSON_PROPERTY_LIBELLE_LONG,
  Calendrier.JSON_PROPERTY_LISTE_CONTEXTE,
  Calendrier.JSON_PROPERTY_DATE_DEBUT,
  Calendrier.JSON_PROPERTY_DATE_FIN,
  Calendrier.JSON_PROPERTY_ACTIF
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-16T08:54:45.925006+01:00[Europe/Paris]")
public class Calendrier {
  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_LIBELLE = "libelle";
  private String libelle;

  public static final String JSON_PROPERTY_LIBELLE_COURT = "libelleCourt";
  private String libelleCourt;

  public static final String JSON_PROPERTY_LIBELLE_LONG = "libelleLong";
  private String libelleLong;

  public static final String JSON_PROPERTY_LISTE_CONTEXTE = "listeContexte";
  private List<ObjetLibelle> listeContexte = new ArrayList<>();

  public static final String JSON_PROPERTY_DATE_DEBUT = "dateDebut";
  private Date dateDebut;

  public static final String JSON_PROPERTY_DATE_FIN = "dateFin";
  private Date dateFin;

  public static final String JSON_PROPERTY_ACTIF = "actif";
  private Boolean actif;

  public Calendrier() { 
  }

  public Calendrier code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Le code du calendrier
   * @return code
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le code du calendrier")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public Calendrier libelle(String libelle) {
    this.libelle = libelle;
    return this;
  }

   /**
   * Le libellé du calendrier à afficher
   * @return libelle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le libellé du calendrier à afficher")
  @JsonProperty(JSON_PROPERTY_LIBELLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLibelle() {
    return libelle;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLibelle(String libelle) {
    this.libelle = libelle;
  }


  public Calendrier libelleCourt(String libelleCourt) {
    this.libelleCourt = libelleCourt;
    return this;
  }

   /**
   * Le libellé court du calendrier à afficher
   * @return libelleCourt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le libellé court du calendrier à afficher")
  @JsonProperty(JSON_PROPERTY_LIBELLE_COURT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLibelleCourt() {
    return libelleCourt;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_COURT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLibelleCourt(String libelleCourt) {
    this.libelleCourt = libelleCourt;
  }


  public Calendrier libelleLong(String libelleLong) {
    this.libelleLong = libelleLong;
    return this;
  }

   /**
   * Le libellé long du calendrier à afficher
   * @return libelleLong
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le libellé long du calendrier à afficher")
  @JsonProperty(JSON_PROPERTY_LIBELLE_LONG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLibelleLong() {
    return libelleLong;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_LONG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLibelleLong(String libelleLong) {
    this.libelleLong = libelleLong;
  }


  public Calendrier listeContexte(List<ObjetLibelle> listeContexte) {
    this.listeContexte = listeContexte;
    return this;
  }

  public Calendrier addListeContexteItem(ObjetLibelle listeContexteItem) {
    this.listeContexte.add(listeContexteItem);
    return this;
  }

   /**
   * Get listeContexte
   * @return listeContexte
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LISTE_CONTEXTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ObjetLibelle> getListeContexte() {
    return listeContexte;
  }


  @JsonProperty(JSON_PROPERTY_LISTE_CONTEXTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setListeContexte(List<ObjetLibelle> listeContexte) {
    this.listeContexte = listeContexte;
  }


  public Calendrier dateDebut(Date dateDebut) {
    this.dateDebut = dateDebut;
    return this;
  }

   /**
   * La date de début du calendrier
   * @return dateDebut
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "La date de début du calendrier")
  @JsonProperty(JSON_PROPERTY_DATE_DEBUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Date getDateDebut() {
    return dateDebut;
  }


  @JsonProperty(JSON_PROPERTY_DATE_DEBUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateDebut(Date dateDebut) {
    this.dateDebut = dateDebut;
  }


  public Calendrier dateFin(Date dateFin) {
    this.dateFin = dateFin;
    return this;
  }

   /**
   * La date de fin du calendrier
   * @return dateFin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "La date de fin du calendrier")
  @JsonProperty(JSON_PROPERTY_DATE_FIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Date getDateFin() {
    return dateFin;
  }


  @JsonProperty(JSON_PROPERTY_DATE_FIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateFin(Date dateFin) {
    this.dateFin = dateFin;
  }


  public Calendrier actif(Boolean actif) {
    this.actif = actif;
    return this;
  }

   /**
   * Le calendrier est-if actif ?
   * @return actif
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le calendrier est-if actif ?")
  @JsonProperty(JSON_PROPERTY_ACTIF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getActif() {
    return actif;
  }


  @JsonProperty(JSON_PROPERTY_ACTIF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActif(Boolean actif) {
    this.actif = actif;
  }


  /**
   * Return true if this Calendrier object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Calendrier calendrier = (Calendrier) o;
    return Objects.equals(this.code, calendrier.code) &&
        Objects.equals(this.libelle, calendrier.libelle) &&
        Objects.equals(this.libelleCourt, calendrier.libelleCourt) &&
        Objects.equals(this.libelleLong, calendrier.libelleLong) &&
        Objects.equals(this.listeContexte, calendrier.listeContexte) &&
        Objects.equals(this.dateDebut, calendrier.dateDebut) &&
        Objects.equals(this.dateFin, calendrier.dateFin) &&
        Objects.equals(this.actif, calendrier.actif);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, libelle, libelleCourt, libelleLong, listeContexte, dateDebut, dateFin, actif);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Calendrier {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    libelle: ").append(toIndentedString(libelle)).append("\n");
    sb.append("    libelleCourt: ").append(toIndentedString(libelleCourt)).append("\n");
    sb.append("    libelleLong: ").append(toIndentedString(libelleLong)).append("\n");
    sb.append("    listeContexte: ").append(toIndentedString(listeContexte)).append("\n");
    sb.append("    dateDebut: ").append(toIndentedString(dateDebut)).append("\n");
    sb.append("    dateFin: ").append(toIndentedString(dateFin)).append("\n");
    sb.append("    actif: ").append(toIndentedString(actif)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

