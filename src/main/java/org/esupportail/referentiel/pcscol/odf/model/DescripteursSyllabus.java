/*
 * OffreDeFormation V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module OFFRE DE FORMATION  Description service ODF  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       |
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.esupportail.referentiel.pcscol.odf.model;


import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;
import org.esupportail.referentiel.pcscol.invoker.JSON;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;

/** DescripteursSyllabus */
@JsonPropertyOrder({
    DescripteursSyllabus.JSON_PROPERTY_TYPE_OBJET_MAQUETTE,
    DescripteursSyllabus.JSON_PROPERTY_DESCRIPTION,
    DescripteursSyllabus.JSON_PROPERTY_OBJECTIF,
    DescripteursSyllabus.JSON_PROPERTY_OUVERTURE_A_LA_MOBILITE_ENTRANTE,
    DescripteursSyllabus.JSON_PROPERTY_LANGUE_ENSEIGNEMENT,
    DescripteursSyllabus.JSON_PROPERTY_PREREQUIS_PEDAGOGIQUE,
    DescripteursSyllabus.JSON_PROPERTY_BIBLIOGRAPHIE,
    DescripteursSyllabus.JSON_PROPERTY_CONTACTS,
    DescripteursSyllabus.JSON_PROPERTY_AUTRES_INFORMATIONS,
    DescripteursSyllabus.JSON_PROPERTY_MODALITES_ENSEIGNEMENTS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2024-07-04T09:22:32.722688+02:00[Europe/Paris]",
        comments = "Generator version: 7.7.0")
@JsonIgnoreProperties(
        value = "typeObjetMaquette", // ignore manually set typeObjetMaquette, it will be
        // automatically generated by Jackson during serialization
        allowSetters = true // allows the typeObjetMaquette to be set during deserialization
        )
@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.PROPERTY,
        property = "typeObjetMaquette",
        visible = true)
@JsonSubTypes({
    @JsonSubTypes.Type(value = DescripteursFormationSyllabus.class, name = "FORMATION"),
    @JsonSubTypes.Type(value = DescripteursGroupementSyllabus.class, name = "GROUPEMENT"),
    @JsonSubTypes.Type(value = DescripteursObjetFormationSyllabus.class, name = "OBJET-FORMATION"),
})
public class DescripteursSyllabus {
    public static final String JSON_PROPERTY_TYPE_OBJET_MAQUETTE = "typeObjetMaquette";
    private TypeObjetMaquette typeObjetMaquette;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_OBJECTIF = "objectif";
    private String objectif;

    public static final String JSON_PROPERTY_OUVERTURE_A_LA_MOBILITE_ENTRANTE =
            "ouvertureALaMobiliteEntrante";
    private Boolean ouvertureALaMobiliteEntrante;

    public static final String JSON_PROPERTY_LANGUE_ENSEIGNEMENT = "langueEnseignement";
    private String langueEnseignement;

    public static final String JSON_PROPERTY_PREREQUIS_PEDAGOGIQUE = "prerequisPedagogique";
    private String prerequisPedagogique;

    public static final String JSON_PROPERTY_BIBLIOGRAPHIE = "bibliographie";
    private String bibliographie;

    public static final String JSON_PROPERTY_CONTACTS = "contacts";
    private String contacts;

    public static final String JSON_PROPERTY_AUTRES_INFORMATIONS = "autresInformations";
    private String autresInformations;

    public static final String JSON_PROPERTY_MODALITES_ENSEIGNEMENTS = "modalitesEnseignements";
    private String modalitesEnseignements;

    public DescripteursSyllabus() {}

    public DescripteursSyllabus typeObjetMaquette(TypeObjetMaquette typeObjetMaquette) {
        this.typeObjetMaquette = typeObjetMaquette;
        return this;
    }

    /**
     * Get typeObjetMaquette
     *
     * @return typeObjetMaquette
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TYPE_OBJET_MAQUETTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TypeObjetMaquette getTypeObjetMaquette() {
        return typeObjetMaquette;
    }

    @JsonProperty(JSON_PROPERTY_TYPE_OBJET_MAQUETTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTypeObjetMaquette(TypeObjetMaquette typeObjetMaquette) {
        this.typeObjetMaquette = typeObjetMaquette;
    }

    public DescripteursSyllabus description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public DescripteursSyllabus objectif(String objectif) {
        this.objectif = objectif;
        return this;
    }

    /**
     * Get objectif
     *
     * @return objectif
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OBJECTIF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getObjectif() {
        return objectif;
    }

    @JsonProperty(JSON_PROPERTY_OBJECTIF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setObjectif(String objectif) {
        this.objectif = objectif;
    }

    public DescripteursSyllabus ouvertureALaMobiliteEntrante(Boolean ouvertureALaMobiliteEntrante) {
        this.ouvertureALaMobiliteEntrante = ouvertureALaMobiliteEntrante;
        return this;
    }

    /**
     * Get ouvertureALaMobiliteEntrante
     *
     * @return ouvertureALaMobiliteEntrante
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OUVERTURE_A_LA_MOBILITE_ENTRANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getOuvertureALaMobiliteEntrante() {
        return ouvertureALaMobiliteEntrante;
    }

    @JsonProperty(JSON_PROPERTY_OUVERTURE_A_LA_MOBILITE_ENTRANTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOuvertureALaMobiliteEntrante(Boolean ouvertureALaMobiliteEntrante) {
        this.ouvertureALaMobiliteEntrante = ouvertureALaMobiliteEntrante;
    }

    public DescripteursSyllabus langueEnseignement(String langueEnseignement) {
        this.langueEnseignement = langueEnseignement;
        return this;
    }

    /**
     * Get langueEnseignement
     *
     * @return langueEnseignement
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LANGUE_ENSEIGNEMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLangueEnseignement() {
        return langueEnseignement;
    }

    @JsonProperty(JSON_PROPERTY_LANGUE_ENSEIGNEMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLangueEnseignement(String langueEnseignement) {
        this.langueEnseignement = langueEnseignement;
    }

    public DescripteursSyllabus prerequisPedagogique(String prerequisPedagogique) {
        this.prerequisPedagogique = prerequisPedagogique;
        return this;
    }

    /**
     * Get prerequisPedagogique
     *
     * @return prerequisPedagogique
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PREREQUIS_PEDAGOGIQUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPrerequisPedagogique() {
        return prerequisPedagogique;
    }

    @JsonProperty(JSON_PROPERTY_PREREQUIS_PEDAGOGIQUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrerequisPedagogique(String prerequisPedagogique) {
        this.prerequisPedagogique = prerequisPedagogique;
    }

    public DescripteursSyllabus bibliographie(String bibliographie) {
        this.bibliographie = bibliographie;
        return this;
    }

    /**
     * Get bibliographie
     *
     * @return bibliographie
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BIBLIOGRAPHIE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBibliographie() {
        return bibliographie;
    }

    @JsonProperty(JSON_PROPERTY_BIBLIOGRAPHIE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBibliographie(String bibliographie) {
        this.bibliographie = bibliographie;
    }

    public DescripteursSyllabus contacts(String contacts) {
        this.contacts = contacts;
        return this;
    }

    /**
     * Get contacts
     *
     * @return contacts
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CONTACTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getContacts() {
        return contacts;
    }

    @JsonProperty(JSON_PROPERTY_CONTACTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContacts(String contacts) {
        this.contacts = contacts;
    }

    public DescripteursSyllabus autresInformations(String autresInformations) {
        this.autresInformations = autresInformations;
        return this;
    }

    /**
     * Get autresInformations
     *
     * @return autresInformations
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AUTRES_INFORMATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAutresInformations() {
        return autresInformations;
    }

    @JsonProperty(JSON_PROPERTY_AUTRES_INFORMATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAutresInformations(String autresInformations) {
        this.autresInformations = autresInformations;
    }

    public DescripteursSyllabus modalitesEnseignements(String modalitesEnseignements) {
        this.modalitesEnseignements = modalitesEnseignements;
        return this;
    }

    /**
     * Texte libre indiquant les modalités d&#39;enseignement prévisionnelles
     *
     * @return modalitesEnseignements
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_MODALITES_ENSEIGNEMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getModalitesEnseignements() {
        return modalitesEnseignements;
    }

    @JsonProperty(JSON_PROPERTY_MODALITES_ENSEIGNEMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setModalitesEnseignements(String modalitesEnseignements) {
        this.modalitesEnseignements = modalitesEnseignements;
    }

    /** Return true if this DescripteursSyllabus object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DescripteursSyllabus descripteursSyllabus = (DescripteursSyllabus) o;
        return Objects.equals(this.typeObjetMaquette, descripteursSyllabus.typeObjetMaquette)
                && Objects.equals(this.description, descripteursSyllabus.description)
                && Objects.equals(this.objectif, descripteursSyllabus.objectif)
                && Objects.equals(
                        this.ouvertureALaMobiliteEntrante,
                        descripteursSyllabus.ouvertureALaMobiliteEntrante)
                && Objects.equals(this.langueEnseignement, descripteursSyllabus.langueEnseignement)
                && Objects.equals(
                        this.prerequisPedagogique, descripteursSyllabus.prerequisPedagogique)
                && Objects.equals(this.bibliographie, descripteursSyllabus.bibliographie)
                && Objects.equals(this.contacts, descripteursSyllabus.contacts)
                && Objects.equals(this.autresInformations, descripteursSyllabus.autresInformations)
                && Objects.equals(
                        this.modalitesEnseignements, descripteursSyllabus.modalitesEnseignements);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                typeObjetMaquette,
                description,
                objectif,
                ouvertureALaMobiliteEntrante,
                langueEnseignement,
                prerequisPedagogique,
                bibliographie,
                contacts,
                autresInformations,
                modalitesEnseignements);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DescripteursSyllabus {\n");
        sb.append("    typeObjetMaquette: ")
                .append(toIndentedString(typeObjetMaquette))
                .append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    objectif: ").append(toIndentedString(objectif)).append("\n");
        sb.append("    ouvertureALaMobiliteEntrante: ")
                .append(toIndentedString(ouvertureALaMobiliteEntrante))
                .append("\n");
        sb.append("    langueEnseignement: ")
                .append(toIndentedString(langueEnseignement))
                .append("\n");
        sb.append("    prerequisPedagogique: ")
                .append(toIndentedString(prerequisPedagogique))
                .append("\n");
        sb.append("    bibliographie: ").append(toIndentedString(bibliographie)).append("\n");
        sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
        sb.append("    autresInformations: ")
                .append(toIndentedString(autresInformations))
                .append("\n");
        sb.append("    modalitesEnseignements: ")
                .append(toIndentedString(modalitesEnseignements))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `typeObjetMaquette` to the URL query string
        if (getTypeObjetMaquette() != null) {
            joiner.add(
                    String.format(
                            "%stypeObjetMaquette%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getTypeObjetMaquette()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `description` to the URL query string
        if (getDescription() != null) {
            joiner.add(
                    String.format(
                            "%sdescription%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDescription()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `objectif` to the URL query string
        if (getObjectif() != null) {
            joiner.add(
                    String.format(
                            "%sobjectif%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getObjectif()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `ouvertureALaMobiliteEntrante` to the URL query string
        if (getOuvertureALaMobiliteEntrante() != null) {
            joiner.add(
                    String.format(
                            "%souvertureALaMobiliteEntrante%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(
                                                    getOuvertureALaMobiliteEntrante()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `langueEnseignement` to the URL query string
        if (getLangueEnseignement() != null) {
            joiner.add(
                    String.format(
                            "%slangueEnseignement%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getLangueEnseignement()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `prerequisPedagogique` to the URL query string
        if (getPrerequisPedagogique() != null) {
            joiner.add(
                    String.format(
                            "%sprerequisPedagogique%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getPrerequisPedagogique()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `bibliographie` to the URL query string
        if (getBibliographie() != null) {
            joiner.add(
                    String.format(
                            "%sbibliographie%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getBibliographie()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `contacts` to the URL query string
        if (getContacts() != null) {
            joiner.add(
                    String.format(
                            "%scontacts%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getContacts()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `autresInformations` to the URL query string
        if (getAutresInformations() != null) {
            joiner.add(
                    String.format(
                            "%sautresInformations%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getAutresInformations()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `modalitesEnseignements` to the URL query string
        if (getModalitesEnseignements() != null) {
            joiner.add(
                    String.format(
                            "%smodalitesEnseignements%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getModalitesEnseignements()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }

    static {
        // Initialize and register the discriminator mappings.
        Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
        mappings.put("FORMATION", DescripteursFormationSyllabus.class);
        mappings.put("GROUPEMENT", DescripteursGroupementSyllabus.class);
        mappings.put("OBJET-FORMATION", DescripteursObjetFormationSyllabus.class);
        mappings.put("DescripteursSyllabus", DescripteursSyllabus.class);
        JSON.registerDiscriminator(DescripteursSyllabus.class, "typeObjetMaquette", mappings);
    }
}
