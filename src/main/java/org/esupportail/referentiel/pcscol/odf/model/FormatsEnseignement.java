/*
 * OffreDeFormation V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module OFFRE DE FORMATION  Description service ODF  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       |
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.esupportail.referentiel.pcscol.odf.model;


import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.UUID;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/** FormatsEnseignement */
@JsonPropertyOrder({
    FormatsEnseignement.JSON_PROPERTY_STRUCTURES_PORTEUSE,
    FormatsEnseignement.JSON_PROPERTY_FORMATION_PORTEUSE,
    FormatsEnseignement.JSON_PROPERTY_FORMATS_ENSEIGNEMENT
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2024-07-04T09:22:32.722688+02:00[Europe/Paris]",
        comments = "Generator version: 7.7.0")
public class FormatsEnseignement {
    public static final String JSON_PROPERTY_STRUCTURES_PORTEUSE = "structuresPorteuse";
    private List<String> structuresPorteuse = new ArrayList<>();

    public static final String JSON_PROPERTY_FORMATION_PORTEUSE = "formationPorteuse";
    private UUID formationPorteuse;

    public static final String JSON_PROPERTY_FORMATS_ENSEIGNEMENT = "formatsEnseignement";
    private List<FormatEnseignement> formatsEnseignement = new ArrayList<>();

    public FormatsEnseignement() {}

    public FormatsEnseignement structuresPorteuse(List<String> structuresPorteuse) {
        this.structuresPorteuse = structuresPorteuse;
        return this;
    }

    public FormatsEnseignement addStructuresPorteuseItem(String structuresPorteuseItem) {
        if (this.structuresPorteuse == null) {
            this.structuresPorteuse = new ArrayList<>();
        }
        this.structuresPorteuse.add(structuresPorteuseItem);
        return this;
    }

    /**
     * Get structuresPorteuse
     *
     * @return structuresPorteuse
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STRUCTURES_PORTEUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getStructuresPorteuse() {
        return structuresPorteuse;
    }

    @JsonProperty(JSON_PROPERTY_STRUCTURES_PORTEUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStructuresPorteuse(List<String> structuresPorteuse) {
        this.structuresPorteuse = structuresPorteuse;
    }

    public FormatsEnseignement formationPorteuse(UUID formationPorteuse) {
        this.formationPorteuse = formationPorteuse;
        return this;
    }

    /**
     * Identifiant de ressource
     *
     * @return formationPorteuse
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FORMATION_PORTEUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getFormationPorteuse() {
        return formationPorteuse;
    }

    @JsonProperty(JSON_PROPERTY_FORMATION_PORTEUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormationPorteuse(UUID formationPorteuse) {
        this.formationPorteuse = formationPorteuse;
    }

    public FormatsEnseignement formatsEnseignement(List<FormatEnseignement> formatsEnseignement) {
        this.formatsEnseignement = formatsEnseignement;
        return this;
    }

    public FormatsEnseignement addFormatsEnseignementItem(
            FormatEnseignement formatsEnseignementItem) {
        if (this.formatsEnseignement == null) {
            this.formatsEnseignement = new ArrayList<>();
        }
        this.formatsEnseignement.add(formatsEnseignementItem);
        return this;
    }

    /**
     * Get formatsEnseignement
     *
     * @return formatsEnseignement
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FORMATS_ENSEIGNEMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<FormatEnseignement> getFormatsEnseignement() {
        return formatsEnseignement;
    }

    @JsonProperty(JSON_PROPERTY_FORMATS_ENSEIGNEMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFormatsEnseignement(List<FormatEnseignement> formatsEnseignement) {
        this.formatsEnseignement = formatsEnseignement;
    }

    /** Return true if this FormatsEnseignement object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormatsEnseignement formatsEnseignement = (FormatsEnseignement) o;
        return Objects.equals(this.structuresPorteuse, formatsEnseignement.structuresPorteuse)
                && Objects.equals(this.formationPorteuse, formatsEnseignement.formationPorteuse)
                && Objects.equals(
                        this.formatsEnseignement, formatsEnseignement.formatsEnseignement);
    }

    @Override
    public int hashCode() {
        return Objects.hash(structuresPorteuse, formationPorteuse, formatsEnseignement);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FormatsEnseignement {\n");
        sb.append("    structuresPorteuse: ")
                .append(toIndentedString(structuresPorteuse))
                .append("\n");
        sb.append("    formationPorteuse: ")
                .append(toIndentedString(formationPorteuse))
                .append("\n");
        sb.append("    formatsEnseignement: ")
                .append(toIndentedString(formatsEnseignement))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `structuresPorteuse` to the URL query string
        if (getStructuresPorteuse() != null) {
            for (int i = 0; i < getStructuresPorteuse().size(); i++) {
                joiner.add(
                        String.format(
                                "%sstructuresPorteuse%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                ApiClient.valueToString(
                                                        getStructuresPorteuse().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `formationPorteuse` to the URL query string
        if (getFormationPorteuse() != null) {
            joiner.add(
                    String.format(
                            "%sformationPorteuse%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getFormationPorteuse()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `formatsEnseignement` to the URL query string
        if (getFormatsEnseignement() != null) {
            for (int i = 0; i < getFormatsEnseignement().size(); i++) {
                if (getFormatsEnseignement().get(i) != null) {
                    joiner.add(
                            getFormatsEnseignement()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sformatsEnseignement%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        return joiner.toString();
    }
}
