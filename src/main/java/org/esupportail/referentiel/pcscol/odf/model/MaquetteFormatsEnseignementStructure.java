/*
 * OffreDeFormation V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module OFFRE DE FORMATION  Description service ODF  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       |
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.esupportail.referentiel.pcscol.odf.model;


import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/** MaquetteFormatsEnseignementStructure */
@JsonPropertyOrder({MaquetteFormatsEnseignementStructure.JSON_PROPERTY_RACINE})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2024-07-04T09:22:32.722688+02:00[Europe/Paris]",
        comments = "Generator version: 7.7.0")
public class MaquetteFormatsEnseignementStructure {
    public static final String JSON_PROPERTY_RACINE = "racine";
    private ObjetMaquetteFormatsEnseignementStructure racine;

    public MaquetteFormatsEnseignementStructure() {}

    public MaquetteFormatsEnseignementStructure racine(
            ObjetMaquetteFormatsEnseignementStructure racine) {
        this.racine = racine;
        return this;
    }

    /**
     * Get racine
     *
     * @return racine
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RACINE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ObjetMaquetteFormatsEnseignementStructure getRacine() {
        return racine;
    }

    @JsonProperty(JSON_PROPERTY_RACINE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRacine(ObjetMaquetteFormatsEnseignementStructure racine) {
        this.racine = racine;
    }

    /** Return true if this MaquetteFormatsEnseignementStructure object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MaquetteFormatsEnseignementStructure maquetteFormatsEnseignementStructure =
                (MaquetteFormatsEnseignementStructure) o;
        return Objects.equals(this.racine, maquetteFormatsEnseignementStructure.racine);
    }

    @Override
    public int hashCode() {
        return Objects.hash(racine);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MaquetteFormatsEnseignementStructure {\n");
        sb.append("    racine: ").append(toIndentedString(racine)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `racine` to the URL query string
        if (getRacine() != null) {
            joiner.add(getRacine().toUrlQueryString(prefix + "racine" + suffix));
        }

        return joiner.toString();
    }
}
