/*
 * OffreDeFormation V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module OFFRE DE FORMATION  Description service ODF  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       |
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.esupportail.referentiel.pcscol.odf.model;


import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;
import org.openapitools.jackson.nullable.JsonNullable;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/** DescripteursAglae */
@JsonPropertyOrder({
    DescripteursAglae.JSON_PROPERTY_HABILITE_POUR_BOURSES_AGLAE,
    DescripteursAglae.JSON_PROPERTY_NIVEAU_AGLAE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2024-07-04T09:22:32.722688+02:00[Europe/Paris]",
        comments = "Generator version: 7.7.0")
public class DescripteursAglae {
    public static final String JSON_PROPERTY_HABILITE_POUR_BOURSES_AGLAE =
            "habilitePourBoursesAglae";
    private Boolean habilitePourBoursesAglae;

    public static final String JSON_PROPERTY_NIVEAU_AGLAE = "niveauAglae";
    private JsonNullable<String> niveauAglae = JsonNullable.<String>undefined();

    public DescripteursAglae() {}

    public DescripteursAglae habilitePourBoursesAglae(Boolean habilitePourBoursesAglae) {
        this.habilitePourBoursesAglae = habilitePourBoursesAglae;
        return this;
    }

    /**
     * Un diplôme habilité national (au titre &#39;Aglaé&#39;) permet aux apprenants inscrits sur ce
     * diplôme à demander une bourse Aglaé. Un diplôme NON national PEUT permettre aux apprenants
     * inscrits sur ce diplôme à demander une bourse Aglaé
     *
     * @return habilitePourBoursesAglae
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_HABILITE_POUR_BOURSES_AGLAE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getHabilitePourBoursesAglae() {
        return habilitePourBoursesAglae;
    }

    @JsonProperty(JSON_PROPERTY_HABILITE_POUR_BOURSES_AGLAE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHabilitePourBoursesAglae(Boolean habilitePourBoursesAglae) {
        this.habilitePourBoursesAglae = habilitePourBoursesAglae;
    }

    public DescripteursAglae niveauAglae(String niveauAglae) {
        this.niveauAglae = JsonNullable.<String>of(niveauAglae);
        return this;
    }

    /**
     * Niveau aglaé dans le diplôme: 2 caractères numériques
     *
     * @return niveauAglae
     */
    @jakarta.annotation.Nullable
    @JsonIgnore
    public String getNiveauAglae() {
        return niveauAglae.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NIVEAU_AGLAE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getNiveauAglae_JsonNullable() {
        return niveauAglae;
    }

    @JsonProperty(JSON_PROPERTY_NIVEAU_AGLAE)
    public void setNiveauAglae_JsonNullable(JsonNullable<String> niveauAglae) {
        this.niveauAglae = niveauAglae;
    }

    public void setNiveauAglae(String niveauAglae) {
        this.niveauAglae = JsonNullable.<String>of(niveauAglae);
    }

    /** Return true if this DescripteursAglae object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DescripteursAglae descripteursAglae = (DescripteursAglae) o;
        return Objects.equals(
                        this.habilitePourBoursesAglae, descripteursAglae.habilitePourBoursesAglae)
                && equalsNullable(this.niveauAglae, descripteursAglae.niveauAglae);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b
                || (a != null
                        && b != null
                        && a.isPresent()
                        && b.isPresent()
                        && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode() {
        return Objects.hash(habilitePourBoursesAglae, hashCodeNullable(niveauAglae));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DescripteursAglae {\n");
        sb.append("    habilitePourBoursesAglae: ")
                .append(toIndentedString(habilitePourBoursesAglae))
                .append("\n");
        sb.append("    niveauAglae: ").append(toIndentedString(niveauAglae)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `habilitePourBoursesAglae` to the URL query string
        if (getHabilitePourBoursesAglae() != null) {
            joiner.add(
                    String.format(
                            "%shabilitePourBoursesAglae%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getHabilitePourBoursesAglae()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `niveauAglae` to the URL query string
        if (getNiveauAglae() != null) {
            joiner.add(
                    String.format(
                            "%sniveauAglae%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getNiveauAglae()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
