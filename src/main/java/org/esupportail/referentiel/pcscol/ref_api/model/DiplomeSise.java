/*
 * REF v1 - Référentiel
 * Liste l'ensemble des services et des opérations disponibles dans le module Referentiel
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.esupportail.referentiel.pcscol.ref_api.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;

import org.esupportail.referentiel.pcscol.invoker.ApiClient;
import org.esupportail.referentiel.pcscol.invoker.JSON;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
/**
 * Nomenclature des diplômes SISE
 */
@JsonPropertyOrder({
  DiplomeSise.JSON_PROPERTY_TYPE_NOMENCLATURE,
  DiplomeSise.JSON_PROPERTY_TYPE_DIPLOME,
  DiplomeSise.JSON_PROPERTY_VOIE_LMD,
  DiplomeSise.JSON_PROPERTY_LIBELLE_INTITULE1,
  DiplomeSise.JSON_PROPERTY_LIBELLE_INTITULE2,
  DiplomeSise.JSON_PROPERTY_GROUPE_SPECIALITE,
  DiplomeSise.JSON_PROPERTY_LETTRE_SPECIALITE,
  DiplomeSise.JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_SISE,
  DiplomeSise.JSON_PROPERTY_CITE_DOMAINE_FORMATION,
  DiplomeSise.JSON_PROPERTY_DUREE,
  DiplomeSise.JSON_PROPERTY_NATURE_DIPLOME,
  DiplomeSise.JSON_PROPERTY_CATEGORIE_FORMATION_SISE,
  DiplomeSise.JSON_PROPERTY_CITE_DOMAINE_DETAILLE,
  DiplomeSise.JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_DETAILLE_SISE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-30T09:24:02.851634+02:00[Europe/Paris]", comments = "Generator version: 7.7.0")
@JsonIgnoreProperties(
  value = "typeNomenclature", // ignore manually set typeNomenclature, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the typeNomenclature to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "typeNomenclature", visible = true)

public class DiplomeSise extends Nomenclature {
  public static final String JSON_PROPERTY_TYPE_NOMENCLATURE = "typeNomenclature";
  private String typeNomenclature;

  public static final String JSON_PROPERTY_TYPE_DIPLOME = "typeDiplome";
  private TypeDiplome typeDiplome;

  public static final String JSON_PROPERTY_VOIE_LMD = "voieLmd";
  private String voieLmd;

  public static final String JSON_PROPERTY_LIBELLE_INTITULE1 = "libelleIntitule1";
  private String libelleIntitule1;

  public static final String JSON_PROPERTY_LIBELLE_INTITULE2 = "libelleIntitule2";
  private String libelleIntitule2;

  public static final String JSON_PROPERTY_GROUPE_SPECIALITE = "groupeSpecialite";
  private String groupeSpecialite;

  public static final String JSON_PROPERTY_LETTRE_SPECIALITE = "lettreSpecialite";
  private String lettreSpecialite;

  public static final String JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_SISE = "secteurDisciplinaireSise";
  private String secteurDisciplinaireSise;

  public static final String JSON_PROPERTY_CITE_DOMAINE_FORMATION = "citeDomaineFormation";
  private String citeDomaineFormation;

  public static final String JSON_PROPERTY_DUREE = "duree";
  private String duree;

  public static final String JSON_PROPERTY_NATURE_DIPLOME = "natureDiplome";
  private NatureDiplome natureDiplome;

  public static final String JSON_PROPERTY_CATEGORIE_FORMATION_SISE = "categorieFormationSise";
  private String categorieFormationSise;

  public static final String JSON_PROPERTY_CITE_DOMAINE_DETAILLE = "citeDomaineDetaille";
  private String citeDomaineDetaille;

  public static final String JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_DETAILLE_SISE = "secteurDisciplinaireDetailleSise";
  private String secteurDisciplinaireDetailleSise;

  public DiplomeSise() { 
  }

  public DiplomeSise typeNomenclature(String typeNomenclature) {
    this.typeNomenclature = typeNomenclature;
    return this;
  }

  /**
   * Discriminant
   * @return typeNomenclature
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_NOMENCLATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTypeNomenclature() {
    return typeNomenclature;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_NOMENCLATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeNomenclature(String typeNomenclature) {
    this.typeNomenclature = typeNomenclature;
  }


  public DiplomeSise typeDiplome(TypeDiplome typeDiplome) {
    this.typeDiplome = typeDiplome;
    return this;
  }

  /**
   * Get typeDiplome
   * @return typeDiplome
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeDiplome getTypeDiplome() {
    return typeDiplome;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeDiplome(TypeDiplome typeDiplome) {
    this.typeDiplome = typeDiplome;
  }


  public DiplomeSise voieLmd(String voieLmd) {
    this.voieLmd = voieLmd;
    return this;
  }

  /**
   * Le code LMD
   * @return voieLmd
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOIE_LMD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getVoieLmd() {
    return voieLmd;
  }


  @JsonProperty(JSON_PROPERTY_VOIE_LMD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVoieLmd(String voieLmd) {
    this.voieLmd = voieLmd;
  }


  public DiplomeSise libelleIntitule1(String libelleIntitule1) {
    this.libelleIntitule1 = libelleIntitule1;
    return this;
  }

  /**
   * Le libellé intitulé 1
   * @return libelleIntitule1
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_INTITULE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleIntitule1() {
    return libelleIntitule1;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_INTITULE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleIntitule1(String libelleIntitule1) {
    this.libelleIntitule1 = libelleIntitule1;
  }


  public DiplomeSise libelleIntitule2(String libelleIntitule2) {
    this.libelleIntitule2 = libelleIntitule2;
    return this;
  }

  /**
   * Le libellé intitulé 2
   * @return libelleIntitule2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBELLE_INTITULE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLibelleIntitule2() {
    return libelleIntitule2;
  }


  @JsonProperty(JSON_PROPERTY_LIBELLE_INTITULE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLibelleIntitule2(String libelleIntitule2) {
    this.libelleIntitule2 = libelleIntitule2;
  }


  public DiplomeSise groupeSpecialite(String groupeSpecialite) {
    this.groupeSpecialite = groupeSpecialite;
    return this;
  }

  /**
   * Le groupe de la spécialité
   * @return groupeSpecialite
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GROUPE_SPECIALITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGroupeSpecialite() {
    return groupeSpecialite;
  }


  @JsonProperty(JSON_PROPERTY_GROUPE_SPECIALITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupeSpecialite(String groupeSpecialite) {
    this.groupeSpecialite = groupeSpecialite;
  }


  public DiplomeSise lettreSpecialite(String lettreSpecialite) {
    this.lettreSpecialite = lettreSpecialite;
    return this;
  }

  /**
   * La lettre de la spécialité
   * @return lettreSpecialite
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LETTRE_SPECIALITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLettreSpecialite() {
    return lettreSpecialite;
  }


  @JsonProperty(JSON_PROPERTY_LETTRE_SPECIALITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLettreSpecialite(String lettreSpecialite) {
    this.lettreSpecialite = lettreSpecialite;
  }


  public DiplomeSise secteurDisciplinaireSise(String secteurDisciplinaireSise) {
    this.secteurDisciplinaireSise = secteurDisciplinaireSise;
    return this;
  }

  /**
   * Le secteur disciplinaire SISE
   * @return secteurDisciplinaireSise
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_SISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSecteurDisciplinaireSise() {
    return secteurDisciplinaireSise;
  }


  @JsonProperty(JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_SISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecteurDisciplinaireSise(String secteurDisciplinaireSise) {
    this.secteurDisciplinaireSise = secteurDisciplinaireSise;
  }


  public DiplomeSise citeDomaineFormation(String citeDomaineFormation) {
    this.citeDomaineFormation = citeDomaineFormation;
    return this;
  }

  /**
   * Le CITE domaine formation
   * @return citeDomaineFormation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITE_DOMAINE_FORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCiteDomaineFormation() {
    return citeDomaineFormation;
  }


  @JsonProperty(JSON_PROPERTY_CITE_DOMAINE_FORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCiteDomaineFormation(String citeDomaineFormation) {
    this.citeDomaineFormation = citeDomaineFormation;
  }


  public DiplomeSise duree(String duree) {
    this.duree = duree;
    return this;
  }

  /**
   * La durée
   * @return duree
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDuree() {
    return duree;
  }


  @JsonProperty(JSON_PROPERTY_DUREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuree(String duree) {
    this.duree = duree;
  }


  public DiplomeSise natureDiplome(NatureDiplome natureDiplome) {
    this.natureDiplome = natureDiplome;
    return this;
  }

  /**
   * Get natureDiplome
   * @return natureDiplome
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATURE_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public NatureDiplome getNatureDiplome() {
    return natureDiplome;
  }


  @JsonProperty(JSON_PROPERTY_NATURE_DIPLOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNatureDiplome(NatureDiplome natureDiplome) {
    this.natureDiplome = natureDiplome;
  }


  public DiplomeSise categorieFormationSise(String categorieFormationSise) {
    this.categorieFormationSise = categorieFormationSise;
    return this;
  }

  /**
   * La catégorie formation SISE
   * @return categorieFormationSise
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIE_FORMATION_SISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCategorieFormationSise() {
    return categorieFormationSise;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIE_FORMATION_SISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategorieFormationSise(String categorieFormationSise) {
    this.categorieFormationSise = categorieFormationSise;
  }


  public DiplomeSise citeDomaineDetaille(String citeDomaineDetaille) {
    this.citeDomaineDetaille = citeDomaineDetaille;
    return this;
  }

  /**
   * Le CITE domaine détaillé
   * @return citeDomaineDetaille
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITE_DOMAINE_DETAILLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCiteDomaineDetaille() {
    return citeDomaineDetaille;
  }


  @JsonProperty(JSON_PROPERTY_CITE_DOMAINE_DETAILLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCiteDomaineDetaille(String citeDomaineDetaille) {
    this.citeDomaineDetaille = citeDomaineDetaille;
  }


  public DiplomeSise secteurDisciplinaireDetailleSise(String secteurDisciplinaireDetailleSise) {
    this.secteurDisciplinaireDetailleSise = secteurDisciplinaireDetailleSise;
    return this;
  }

  /**
   * Le secteur disciplinaire détaillé SISE
   * @return secteurDisciplinaireDetailleSise
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_DETAILLE_SISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSecteurDisciplinaireDetailleSise() {
    return secteurDisciplinaireDetailleSise;
  }


  @JsonProperty(JSON_PROPERTY_SECTEUR_DISCIPLINAIRE_DETAILLE_SISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecteurDisciplinaireDetailleSise(String secteurDisciplinaireDetailleSise) {
    this.secteurDisciplinaireDetailleSise = secteurDisciplinaireDetailleSise;
  }


  @Override
  public DiplomeSise code(String code) {
    this.setCode(code);
    return this;
  }

  @Override
  public DiplomeSise libelleCourt(String libelleCourt) {
    this.setLibelleCourt(libelleCourt);
    return this;
  }

  @Override
  public DiplomeSise libelleLong(String libelleLong) {
    this.setLibelleLong(libelleLong);
    return this;
  }

  @Override
  public DiplomeSise libelleAffichage(String libelleAffichage) {
    this.setLibelleAffichage(libelleAffichage);
    return this;
  }

  @Override
  public DiplomeSise prioriteAffichage(Integer prioriteAffichage) {
    this.setPrioriteAffichage(prioriteAffichage);
    return this;
  }

  @Override
  public DiplomeSise dateDebutValidite(Date dateDebutValidite) {
    this.setDateDebutValidite(dateDebutValidite);
    return this;
  }

  @Override
  public DiplomeSise dateFinValidite(Date dateFinValidite) {
    this.setDateFinValidite(dateFinValidite);
    return this;
  }

  @Override
  public DiplomeSise temoinVisible(Boolean temoinVisible) {
    this.setTemoinVisible(temoinVisible);
    return this;
  }

  @Override
  public DiplomeSise temoinLivre(Boolean temoinLivre) {
    this.setTemoinLivre(temoinLivre);
    return this;
  }

  /**
   * Return true if this DiplomeSise object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiplomeSise diplomeSise = (DiplomeSise) o;
    return Objects.equals(this.typeNomenclature, diplomeSise.typeNomenclature) &&
        Objects.equals(this.typeDiplome, diplomeSise.typeDiplome) &&
        Objects.equals(this.voieLmd, diplomeSise.voieLmd) &&
        Objects.equals(this.libelleIntitule1, diplomeSise.libelleIntitule1) &&
        Objects.equals(this.libelleIntitule2, diplomeSise.libelleIntitule2) &&
        Objects.equals(this.groupeSpecialite, diplomeSise.groupeSpecialite) &&
        Objects.equals(this.lettreSpecialite, diplomeSise.lettreSpecialite) &&
        Objects.equals(this.secteurDisciplinaireSise, diplomeSise.secteurDisciplinaireSise) &&
        Objects.equals(this.citeDomaineFormation, diplomeSise.citeDomaineFormation) &&
        Objects.equals(this.duree, diplomeSise.duree) &&
        Objects.equals(this.natureDiplome, diplomeSise.natureDiplome) &&
        Objects.equals(this.categorieFormationSise, diplomeSise.categorieFormationSise) &&
        Objects.equals(this.citeDomaineDetaille, diplomeSise.citeDomaineDetaille) &&
        Objects.equals(this.secteurDisciplinaireDetailleSise, diplomeSise.secteurDisciplinaireDetailleSise) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeNomenclature, typeDiplome, voieLmd, libelleIntitule1, libelleIntitule2, groupeSpecialite, lettreSpecialite, secteurDisciplinaireSise, citeDomaineFormation, duree, natureDiplome, categorieFormationSise, citeDomaineDetaille, secteurDisciplinaireDetailleSise, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiplomeSise {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    typeNomenclature: ").append(toIndentedString(typeNomenclature)).append("\n");
    sb.append("    typeDiplome: ").append(toIndentedString(typeDiplome)).append("\n");
    sb.append("    voieLmd: ").append(toIndentedString(voieLmd)).append("\n");
    sb.append("    libelleIntitule1: ").append(toIndentedString(libelleIntitule1)).append("\n");
    sb.append("    libelleIntitule2: ").append(toIndentedString(libelleIntitule2)).append("\n");
    sb.append("    groupeSpecialite: ").append(toIndentedString(groupeSpecialite)).append("\n");
    sb.append("    lettreSpecialite: ").append(toIndentedString(lettreSpecialite)).append("\n");
    sb.append("    secteurDisciplinaireSise: ").append(toIndentedString(secteurDisciplinaireSise)).append("\n");
    sb.append("    citeDomaineFormation: ").append(toIndentedString(citeDomaineFormation)).append("\n");
    sb.append("    duree: ").append(toIndentedString(duree)).append("\n");
    sb.append("    natureDiplome: ").append(toIndentedString(natureDiplome)).append("\n");
    sb.append("    categorieFormationSise: ").append(toIndentedString(categorieFormationSise)).append("\n");
    sb.append("    citeDomaineDetaille: ").append(toIndentedString(citeDomaineDetaille)).append("\n");
    sb.append("    secteurDisciplinaireDetailleSise: ").append(toIndentedString(secteurDisciplinaireDetailleSise)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `typeNomenclature` to the URL query string
    if (getTypeNomenclature() != null) {
      joiner.add(String.format("%stypeNomenclature%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTypeNomenclature()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(String.format("%scode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleCourt` to the URL query string
    if (getLibelleCourt() != null) {
      joiner.add(String.format("%slibelleCourt%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleCourt()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleLong` to the URL query string
    if (getLibelleLong() != null) {
      joiner.add(String.format("%slibelleLong%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleLong()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleAffichage` to the URL query string
    if (getLibelleAffichage() != null) {
      joiner.add(String.format("%slibelleAffichage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleAffichage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `prioriteAffichage` to the URL query string
    if (getPrioriteAffichage() != null) {
      joiner.add(String.format("%sprioriteAffichage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPrioriteAffichage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateDebutValidite` to the URL query string
    if (getDateDebutValidite() != null) {
      joiner.add(String.format("%sdateDebutValidite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateDebutValidite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `dateFinValidite` to the URL query string
    if (getDateFinValidite() != null) {
      joiner.add(String.format("%sdateFinValidite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDateFinValidite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `temoinVisible` to the URL query string
    if (getTemoinVisible() != null) {
      joiner.add(String.format("%stemoinVisible%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTemoinVisible()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `temoinLivre` to the URL query string
    if (getTemoinLivre() != null) {
      joiner.add(String.format("%stemoinLivre%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getTemoinLivre()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `typeDiplome` to the URL query string
    if (getTypeDiplome() != null) {
      joiner.add(getTypeDiplome().toUrlQueryString(prefix + "typeDiplome" + suffix));
    }

    // add `voieLmd` to the URL query string
    if (getVoieLmd() != null) {
      joiner.add(String.format("%svoieLmd%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVoieLmd()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleIntitule1` to the URL query string
    if (getLibelleIntitule1() != null) {
      joiner.add(String.format("%slibelleIntitule1%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleIntitule1()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `libelleIntitule2` to the URL query string
    if (getLibelleIntitule2() != null) {
      joiner.add(String.format("%slibelleIntitule2%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLibelleIntitule2()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `groupeSpecialite` to the URL query string
    if (getGroupeSpecialite() != null) {
      joiner.add(String.format("%sgroupeSpecialite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getGroupeSpecialite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `lettreSpecialite` to the URL query string
    if (getLettreSpecialite() != null) {
      joiner.add(String.format("%slettreSpecialite%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLettreSpecialite()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `secteurDisciplinaireSise` to the URL query string
    if (getSecteurDisciplinaireSise() != null) {
      joiner.add(String.format("%ssecteurDisciplinaireSise%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSecteurDisciplinaireSise()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `citeDomaineFormation` to the URL query string
    if (getCiteDomaineFormation() != null) {
      joiner.add(String.format("%sciteDomaineFormation%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCiteDomaineFormation()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `duree` to the URL query string
    if (getDuree() != null) {
      joiner.add(String.format("%sduree%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDuree()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `natureDiplome` to the URL query string
    if (getNatureDiplome() != null) {
      joiner.add(getNatureDiplome().toUrlQueryString(prefix + "natureDiplome" + suffix));
    }

    // add `categorieFormationSise` to the URL query string
    if (getCategorieFormationSise() != null) {
      joiner.add(String.format("%scategorieFormationSise%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCategorieFormationSise()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `citeDomaineDetaille` to the URL query string
    if (getCiteDomaineDetaille() != null) {
      joiner.add(String.format("%sciteDomaineDetaille%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCiteDomaineDetaille()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `secteurDisciplinaireDetailleSise` to the URL query string
    if (getSecteurDisciplinaireDetailleSise() != null) {
      joiner.add(String.format("%ssecteurDisciplinaireDetailleSise%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSecteurDisciplinaireDetailleSise()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("DiplomeSise", DiplomeSise.class);
  JSON.registerDiscriminator(DiplomeSise.class, "typeNomenclature", mappings);
}
}

