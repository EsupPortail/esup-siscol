/*
 * REF v1 - Référentiel
 * Liste l'ensemble des services et des opérations disponibles dans le module Referentiel
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.esupportail.referentiel.pcscol.odf;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.esupportail.referentiel.Siscol;
import org.esupportail.referentiel.pcscol.api.EspacesApi;
import org.esupportail.referentiel.pcscol.api.ObjetsMaquetteApi;
import org.esupportail.referentiel.pcscol.invoker.ApiException;
import org.esupportail.referentiel.pcscol.odf.model.ObjetMaquetteDetail;
import org.esupportail.referentiel.pcscol.odf.model.ObjetMaquetteSummary;
import org.esupportail.referentiel.pcscol.odf.model.TypeObjetMaquette;
import org.esupportail.referentiel.pcscol.services.OffreFormationService;
import org.esupportail.referentiel.pcscol.services.PcscolService;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;

/**
 * API tests for StructureApi
 */
@ContextConfiguration(classes = { Siscol.class })
@SpringBootTest
@SpringJUnitConfig
@ActiveProfiles("test")
public class MaquetteApiTest {

	@Autowired
	ObjetsMaquetteApi objetsMaquetteApi;
	@Autowired
	EspacesApi espacesApi;
	@Autowired
	OffreFormationService offreFormationService;

	@Autowired
	PcscolService pcScoleService;

	String strId = "14f54729-4db4-4341-8af6-47e276fe3058";
	String codeStructure = "ETAB00";

	@Test
	public void rechercherObjetMaquetteTest() throws ApiException {

		Map<String, String> test = offreFormationService.rechercherObjetMaquetteFormation(codeStructure, "PER-2021");
		for (String s : test.keySet()) {
			System.out.println(s + " : " + test.get(s));
		}
	}
	@Test
	public void rechercherObjetMaquetteObjetFormaion() throws ApiException {

		Map<String, String> test = offreFormationService.rechercherObjetMaquetteObjetFormation(codeStructure,   "PER-2021");
		for (String s : test.keySet()) {
			System.out.println(s + " : " + test.get(s));
		}
	}

	@Test
	public void rechercherObjetMaquetteEnfantTest() throws ApiException {
		Map<String, String> test = offreFormationService.rechercherObjetMaquetteObjetFormation(codeStructure,"ca7806c7-2ed5-482b-91bf-314da11ef829");

		for (String s : test.keySet()) {
			System.out.println(s + " : " + test.get(s));
			
			
		}
	}
	@Test
	public void testRechcercheParCode() throws ApiException {
		List<ObjetMaquetteSummary> maquette = offreFormationService.rechercheObjetMaquetteSummary(codeStructure, "LIC-PHY-L1", "PER-2021");
		System.out.println(maquette);
	}

	@Test
	public void testChecherEnfants() throws ApiException {
		List<String> ids = new ArrayList<>();
		//ids.add("0aeb0a77-9e60-413c-966c-023f722467a7");
		ids.add("ff97d1e7-6b60-40bb-872d-6f3aab73215c");
		List<ObjetMaquetteSummary> response = offreFormationService.rechercherObjetMaquetteParUUIDS(codeStructure, ids,
				null);
		System.out.println(response);
	}

	@Test
	public void testDmaquette() throws ApiException {
		List<String> ids = new ArrayList<>();
		// ids.add("0aeb0a77-9e60-413c-966c-023f722467a7");
		// ids.add("0a169da2-1d42-4d9a-ad1e-1686f18f9fb4");
		ObjetMaquetteDetail response = offreFormationService.recherchDescripteurMaquette(codeStructure,
				"c300cd12-4de4-47ff-bbb8-7d82072e252b");
		// ObjetMaquetteDetail response =
		// offreFormationService.recherchDescripteurMaquette(codeStructure,
		// "0a169da2-1d42-4d9a-ad1e-1686f18f9fb4");
		if (response.getTypeObjetMaquette().getValue().equals(TypeObjetMaquette.FORMATION)) {

		}
		System.out.println(response.getCode() + ": " + response.getDescripteursObjetMaquette());
		System.out.println(response.getContextes());
		System.out.println(response.getEnfants());
		if(response.getEnfants()!=null) {
			response.getEnfants().forEach(enfant->{
				try {
					ObjetMaquetteDetail  responseEnfant = offreFormationService.recherchDescripteurMaquette(codeStructure, enfant.getId());
					System.out.println(responseEnfant.getId()+" : "+responseEnfant.getTypeObjetMaquette()+ " :");
					System.out.println(responseEnfant.getDescripteursObjetMaquette().getLibelle()+" : "+responseEnfant.getTypeObjetMaquette()+ " :");
					System.out.println("++++++++++++++++++++++++++++++");
				} catch (ApiException e) {
					// TODO Auto-generated catch block
					System.out.println(enfant.getId()+ "\t\t" +e.getCode());
				}
			});
		}

	}

}
